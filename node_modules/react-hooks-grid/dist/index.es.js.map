{"version":3,"file":"index.es.js","sources":["../src/hooks/useFiltering.js","../src/hooks/useGrid.js","../src/hooks/useFormat.js","../src/hooks/usePaging.js","../src/hooks/useSorting.js"],"sourcesContent":["import { useState } from 'react';\r\n\r\nexport const useFiltering = (initFilters, customPredicates) => updateGrid => {\r\n  const [filters, setFilters] = useState(initFilters || {});\r\n  const [filterFn, setFilterFn] = useState(null);\r\n  const [rowCount, setRowCount] = useState(0);\r\n\r\n  const setFilter = (id, value) => {\r\n    const newFilters = Object.assign({}, filters, { [id]: Object.assign(filters[id], { value }) });\r\n    setFilters(newFilters);\r\n\r\n    setFilterFn(() =>\r\n      composeFilters(\r\n        ...Object.values(newFilters).map(f => {\r\n          if (!f.value) return () => true;\r\n\r\n          if (f.type === 'contains') return filterContains(f);\r\n          if (f.type === 'equals') return filterEquals(f);\r\n          if (f.type === 'greater') return filterGreater(f);\r\n          if (f.type === 'lesser') return filterLesser(f);\r\n\r\n          if (customPredicates) {\r\n            for (let [name, predicateFn] of Object.entries(customPredicates)) {\r\n              if (f.type === name) return predicateFn(f);\r\n            }\r\n          }\r\n\r\n          return () => true;\r\n        })\r\n      )\r\n    );\r\n    updateGrid();\r\n  };\r\n\r\n  const combineFilters = (...filters) => value => {\r\n    for (let i = 0; i < filters.length; i++) {\r\n      if (filters[i](value)) continue;\r\n      else return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const composeFilters = (...filters) => grid => grid.filter(combineFilters(...filters));\r\n\r\n  const filterContains = filter => row => row[filter.column].toLowerCase().indexOf(filter.value.toLowerCase()) > -1;\r\n  const filterEquals = filter => row => row[filter.column] === filter.value;\r\n  const filterGreater = filter => row => row[filter.column] > filter.value;\r\n  const filterLesser = filter => row => row[filter.column] < filter.value;\r\n\r\n  const order = 20;\r\n  const setGrid = grid => {\r\n    const newGrid = filterFn ? filterFn(grid) : grid;\r\n    setRowCount(newGrid.length);\r\n    return newGrid;\r\n  };\r\n  const mixinApi = api => {\r\n    Object.assign(api, { filters, setFilter, rowCount });\r\n  };\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useFormat } from './useFormat';\r\n\r\nexport const useGrid = (initGrid, usePlugins) => {\r\n  const [baseGrid, setBaseGrid] = useState(initGrid);\r\n  const [outGrid, setOutGrid] = useState({ rows: [] });\r\n  const [ticks, setTicks] = useState(0);\r\n\r\n  const setUpdate = () => {\r\n    setTicks(prev => (prev += 1));\r\n  };\r\n\r\n  const plugins = [...usePlugins, useFormat()].map(p => p(setUpdate));\r\n\r\n  useEffect(() => {\r\n    let newGrid = [...baseGrid];\r\n    plugins\r\n      .sort((a, b) => a.order - b.order)\r\n      .forEach(p => {\r\n        newGrid = p.setGrid(newGrid);\r\n      });\r\n\r\n    setOutGrid(newGrid);\r\n  }, [baseGrid, ticks]);\r\n\r\n  const api = {\r\n    grid: outGrid,\r\n    setGrid: setBaseGrid,\r\n    rowCount: outGrid.length,\r\n  };\r\n  plugins.forEach(p => p.mixinApi(api));\r\n\r\n  return api;\r\n};\r\n","export const useFormat = () => updateGrid => {\r\n  const order = 50;\r\n  const setGrid = grid => {\r\n    return {\r\n      rows: grid.map(row => {\r\n        return {\r\n          cells: Object.entries(row).map(([key, value]) => {\r\n            return {\r\n              value,\r\n              key,\r\n            };\r\n          }),\r\n        };\r\n      }),\r\n    };\r\n  };\r\n\r\n  const mixinApi = api => {};\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const usePaging = (size, index) => updateGrid => {\r\n  const [pageIndex, setPageIndex] = useState(index || 0);\r\n  const [pageSize, setPageSize] = useState(size || 10);\r\n\r\n  const setSize = size => {\r\n    setPageSize(size);\r\n    updateGrid();\r\n  };\r\n  const setIndex = index => {\r\n    setPageIndex(index);\r\n    updateGrid();\r\n  };\r\n\r\n  const order = 40;\r\n  const setGrid = grid => grid.slice(pageIndex * pageSize, pageIndex * pageSize + pageSize);\r\n  const mixinApi = api => {\r\n    Object.assign(api, {\r\n      pageIndex,\r\n      pageSize,\r\n      setIndex,\r\n      setSize,\r\n      pageCount: Math.ceil(api.rowCount / pageSize),\r\n    });\r\n  };\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useSorting = (column, descending, customSortFn) => updateGrid => {\r\n  const [sortColumn, setSortColumn] = useState(column);\r\n  const [sortDesc, setSortDesc] = useState(descending);\r\n\r\n  const baseSortFn = (a, b, column, descending) => {\r\n    if (a[column] > b[column]) return descending ? -1 : 1;\r\n    if (a[column] < b[column]) return descending ? 1 : -1;\r\n    return 0;\r\n  };\r\n\r\n  const sortFn = customSortFn || baseSortFn;\r\n\r\n  const setSort = (column, descending) => {\r\n    setSortColumn(column);\r\n    setSortDesc(descending);\r\n    updateGrid();\r\n  };\r\n\r\n  const order = 30;\r\n  const setGrid = grid => grid.sort((a, b) => sortFn(a, b, sortColumn, sortDesc));\r\n  const mixinApi = api => {\r\n    Object.assign(api, { sortColumn, sortDesc, setSort });\r\n  };\r\n\r\n  return { order, setGrid, mixinApi };\r\n};\r\n"],"names":["useFiltering","initFilters","customPredicates","updateGrid","useState","filters","setFilters","filterFn","setFilterFn","rowCount","setRowCount","setFilter","id","value","newFilters","Object","assign","composeFilters","values","map","f","type","filterContains","filterEquals","filterGreater","filterLesser","entries","name","predicateFn","combineFilters","i","length","grid","filter","row","column","toLowerCase","indexOf","order","setGrid","newGrid","mixinApi","api","useGrid","initGrid","usePlugins","baseGrid","setBaseGrid","rows","outGrid","setOutGrid","ticks","setTicks","setUpdate","prev","plugins","cells","key","p","useEffect","sort","a","b","forEach","usePaging","size","index","pageIndex","setPageIndex","pageSize","setPageSize","setSize","setIndex","slice","pageCount","Math","ceil","useSorting","descending","customSortFn","sortColumn","setSortColumn","sortDesc","setSortDesc","sortFn","setSort"],"mappings":"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"}