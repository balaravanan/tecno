{"ast":null,"code":"import _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/country/Country.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { AutoSizer, Table, Column } from 'react-virtualized';\nimport \"react-virtualized/styles.css\";\nimport { CRow, CCard, CCol, CButton, CForm, CLabel, CInput } from '@coreui/react';\nimport Edits from \"../../images/image 2.svg\";\nimport Remove from \"../../images/image 15.svg\";\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport './Country.css';\nimport { getCountry, deleteCountry } from '../../../services/ApiService';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Country(props) {\n  var _this = this;\n\n  // const [Roles, setRoles] = useState([{\n  //     SlNO: 1, qualification: 'Head Office',\n  //     // location:'Chennai', \n  //     school: 'HO',\n  //     board: '-',\n  //     passing: '12-07-2019',\n  //     percentage: 'Admin',\n  // }, {\n  //     SlNO: 1, qualification: 'Head Office',\n  //     // location:'Chennai', \n  //     school: 'HO',\n  //     board: '',\n  //     passing: '17-08-2019',\n  //     percentage: 'Admin',\n  // }, {\n  //     SlNO: 1,\n  //     qualification: 'IT Office',\n  //     // location:'Chennai', \n  //     school: 'IT',\n  //     board: 'Head Office',\n  //     passing: '19-08-2020',\n  //     percentage: 'Admin',\n  // },])\n  // const {enqueueSnackbar} = useSnackbar()\n  // const [CountryList, setIsLoading] = useState(true)\n  // const [qualification, setQualification] = useState(\"\")\n  // const [school, setSchool] = useState(\"\")\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      board = _useState4[0],\n      setBoard = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passing = _useState6[0],\n      setPassing = _useState6[1]; // const [percantage, setData] = useState([])\n\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      countrySchema = _useState8[0],\n      setCountry = _useState8[1];\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      searchResults = _React$useState2[0],\n      setSearchResults = _React$useState2[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      CountryCreate = _useState10[0],\n      setCountryCreate = _useState10[1];\n\n  var _useState11 = useState(true),\n      _useState12 = _slicedToArray(_useState11, 2),\n      CountryList = _useState12[0],\n      setCountryList = _useState12[1]; // const [isLoading, setIsLoading] = useState(true);\n  // const { match } = props;\n  // let { code } = match.params;\n\n\n  var _noContentRenderer = function _noContentRenderer() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }\n    }, \"No Office types.\");\n  };\n\n  useEffect(function () {\n    setError(\"\");\n    setSearchResults([]);\n  }, []);\n  var formik = useFormik({\n    initialValues: {\n      CountryName: '',\n      Abbreviation: '',\n      Code: ''\n    },\n    validationSchema: yup.object({\n      CountryName: yup.string().required(\" CountryName is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      Abbreviation: yup.string().required(\"Abbreviation is Required\"),\n      Code: yup.string().required(\"Country Code  is Required\")\n    }),\n    onSubmit: function onSubmit(userInputData) {\n      console.log(userInputData);\n    }\n  }); // const deleteStudent = () => {\n  //  axios.delete('http://localhost:2000/updateOfficeType')\n  //  .then( (res) => {\n  //      console.log (res);\n  //     //  setPosts(res.data)\n  //      console.log('Data has been Changed !')\n  // })\n  // .catch ((err) => {\n  //     console.log (err);\n  // })\n  // }   \n  // const    notify = () => toast(\"Wow so easy !\");\n  // const   Country = async () => {\n  //     if (passing === \"\") {\n  //         var response\n  //         let body = formik.values\n  //         console.log(body);\n  //         try {\n  //             response = await createCountry(JSON.stringify(body))\n  //             if (response.success === true) {\n  //                 formik.handleReset({})\n  //                 console.log(response.Country);\n  //                 setCountry([...countrySchema, response.Country])\n  //                 formik.values = {}\n  //                 await setCountryCreate(false)\n  //                 await setCountryList(true)\n  //                 return (0);\n  //             }\n  //             // setError(response.error)\n  //             // showErrorPopUp();\n  //             toast(response.error);\n  //         } catch (e) {\n  //             console.log(e)\n  //         }\n  //     }\n  //     else {\n  //         var response\n  //         let body = formik.values\n  //         try {\n  //             response = await updateCountry(formik.values.CountryName, formik.values.Abbreviation, formik.values.Code, passing)\n  //             if (response.success === true) {\n  //                 // setBoard(response)\n  //                 const elementsIndex = countrySchema.findIndex(element => element._id === passing)\n  //                 let newArray = [...countrySchema]\n  //                 newArray[elementsIndex] = response.updateCountry;\n  //                 console.log(newArray, \"ddddddd\");\n  //                 setCountry(newArray);\n  //                 await setCountryCreate(false)\n  //                 await setCountryList(true)\n  //             }\n  //         } catch (e) {\n  //             console.log(e)\n  //         }\n  //     }\n  // };\n\n  var EditCountry = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // (data)\n              console.log(data);\n              _context.next = 3;\n              return setCountryList(false);\n\n            case 3:\n              _context.next = 5;\n              return setCountryCreate(true);\n\n            case 5:\n              formik.values.CountryName = data.CountryName;\n              formik.values.Abbreviation = data.Abbreviation;\n              formik.values.Code = data.Code;\n              setPassing(data._id);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function EditCountry(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var CancelCountry = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (passing === \"\") {\n                formik.values.CountryName = \"\";\n                formik.values.Abbreviation = \"\";\n                formik.values.Code = \"\";\n              } else {\n                formik.values.CountryName = \"\";\n                formik.values.Abbreviation = \"\";\n                formik.values.Code = \"\";\n                setPassing(\"\");\n              }\n\n              _context2.next = 3;\n              return setCountryList(true);\n\n            case 3:\n              _context2.next = 5;\n              return setCountryCreate(false);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function CancelCountry() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var Delete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              body = formik.values;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return deleteCountry(id);\n\n            case 4:\n              response = _context3.sent;\n\n              if (response.success === true) {\n                setBoard(response);\n              }\n\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 8]]);\n    }));\n\n    return function Delete(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    function getAllCountry() {\n      return _getAllCountry.apply(this, arguments);\n    }\n\n    function _getAllCountry() {\n      _getAllCountry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return getCountry();\n\n              case 3:\n                response = _context4.sent;\n                console.log(response, \"sdf\");\n\n                if (response) {\n                  console.log(response, 'Response');\n                  setCountry(response.Country);\n                }\n\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](0);\n                console.log(_context4.t0);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 8]]);\n      }));\n      return _getAllCountry.apply(this, arguments);\n    }\n\n    getAllCountry();\n  }, [board]);\n\n  var toInputUppercase = function toInputUppercase(e) {\n    e.target.value = (\"\" + e.target.value).toUpperCase();\n  };\n\n  var enableCreate = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return setCountryList(false);\n\n            case 2:\n              _context5.next = 4;\n              return setCountryCreate(true);\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function enableCreate() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, CountryList && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: 'CountryList-card-container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: '2%',\n      paddingLeft: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: 'role-heading-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, \"Country\")), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '15px',\n      paddingRight: '92%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    color: 'primary',\n    shape: 'pill',\n    className: 'btnShadow blueColor float-right',\n    onClick: enableCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, \"+ Add\"))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    className: 'box',\n    type: \"text\",\n    name: 'OfficeTypes',\n    onChange: formik.handleChange,\n    value: formik.values.OfficeTypes,\n    placeholder: \"Filter CountryName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }), searchResults.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 37\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(CCol, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    className: 'box',\n    type: \"text\",\n    name: 'Abbreviation',\n    onChange: formik.handleChange,\n    value: formik.values.Abbreviations,\n    placeholder: \"Filter Abbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    className: 'box',\n    type: \"text\",\n    name: 'ReportingTo',\n    onChange: formik.handleChange,\n    value: formik.values.ReportingTos,\n    placeholder: \"Filter Reporting \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '200px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, function (_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height;\n    return /*#__PURE__*/React.createElement(Table, {\n      rowClassName: \"table-row1\",\n      headerStyle: {\n        textTransform: 'capitalize'\n      },\n      rowStyle: {\n        borderBottom: '1px solid lightgrey'\n      },\n      width: width,\n      height: height,\n      headerHeight: 50,\n      rowHeight: 50,\n      rowCount: countrySchema.length //    sort={_sort}\n      //    sortBy={sortBy}\n      ,\n      overscanColumnCount: 1,\n      overscanRowCount: 1,\n      noContentRenderer: _noContentRenderer //    sortDirection={sortDirection}\n      ,\n      rowGetter: function rowGetter(_ref6) {\n        var index = _ref6.index;\n        return countrySchema[index];\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'CountryName',\n      label: 'Country',\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'Abbreviation',\n      label: 'Abbreviation',\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'Code',\n      label: 'Code',\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'id',\n      label: 'Actions',\n      cellRenderer: function cellRenderer(row) {\n        return /*#__PURE__*/React.createElement(CRow, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(CCol, {\n          md: \"5\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: Edits,\n          onClick: function onClick() {\n            return EditCountry(row.rowData);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 66\n          }\n        }), \" \"), /*#__PURE__*/React.createElement(CCol, {\n          md: \"5\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: Remove,\n          onClick: function onClick() {\n            return Delete(row.rowData._id);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 66\n          }\n        })));\n      },\n      width: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 41\n      }\n    }));\n  })))))), CountryCreate && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: 'CountryCreate-card-container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '10px',\n      paddingLeft: '20px',\n      paddingRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    className: 'role-heading-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 25\n    }\n  }, \"Create Country \")), /*#__PURE__*/React.createElement(CForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: 'role-form-container-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    lg: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 41\n    }\n  }, \"Country Name\"), /*#__PURE__*/React.createElement(CInput, {\n    name: 'CountryName',\n    onChange: formik.handleChange,\n    value: formik.values.CountryName,\n    placeholder: \"CountryName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 41\n    }\n  }), formik.errors.CountryName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.CountryName) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 41\n    }\n  }, \"Abbreviation\"), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Abbreviation',\n    onChange: formik.handleChange,\n    onPress: toInputUppercase,\n    style: {\n      textTransform: 'uppercase'\n    },\n    value: formik.values.Abbreviation,\n    placeholder: \"Abbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 41\n    }\n  }), formik.errors.Abbreviation ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.Abbreviation) : null)), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 41\n    }\n  }, \"Code \"), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Code',\n    onChange: formik.handleChange,\n    value: formik.values.Code,\n    placeholder: \"Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 41\n    }\n  }), formik.errors.Code ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.Code) : null)), /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centerd-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      width: \"80px\"\n    },\n    className: 'btnShadow blueColor-btn2',\n    onClick: Country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 55\n    }\n  }, passing !== \"\" ? \"Update\" : \"+ Create\"), \" \"), error !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 57\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(ToastContainer, {\n    className: \"toast--warning   \",\n    style: {\n      width: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    className: 'btnShadow blueColor-btns1',\n    onClick: CancelCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 45\n    }\n  }, \"Cancel\"), \" \"))))))), \" \"));\n}\n\nexport default Country;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/country/Country.jsx"],"names":["React","useState","useEffect","AutoSizer","Table","Column","CRow","CCard","CCol","CButton","CForm","CLabel","CInput","useFormik","yup","getCountry","deleteCountry","ToastContainer","Country","props","error","setError","board","setBoard","passing","setPassing","countrySchema","setCountry","searchResults","setSearchResults","CountryCreate","setCountryCreate","CountryList","setCountryList","_noContentRenderer","formik","initialValues","CountryName","Abbreviation","Code","validationSchema","object","string","required","onSubmit","userInputData","console","log","EditCountry","data","values","_id","CancelCountry","Delete","id","body","response","success","getAllCountry","toInputUppercase","e","target","value","toUpperCase","enableCreate","paddingTop","paddingLeft","padding","paddingRight","handleChange","OfficeTypes","map","item","Abbreviations","ReportingTos","width","height","textTransform","borderBottom","length","index","row","Edits","rowData","Remove","errors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { AutoSizer, Table, Column } from 'react-virtualized'\nimport \"react-virtualized/styles.css\";\nimport { CRow, CCard, CCol, CButton, CForm, CLabel, CInput } from '@coreui/react'\nimport Edits from '../../images/image 2.svg'\nimport Remove from '../../images/image 15.svg'\nimport {\n    useFormik\n} from 'formik'\nimport * as yup from 'yup'\nimport './Country.css'\nimport { getCountry, deleteCountry } from '../../../services/ApiService'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nfunction Country(props) {\n\n    // const [Roles, setRoles] = useState([{\n    //     SlNO: 1, qualification: 'Head Office',\n    //     // location:'Chennai', \n    //     school: 'HO',\n    //     board: '-',\n    //     passing: '12-07-2019',\n    //     percentage: 'Admin',\n\n    // }, {\n    //     SlNO: 1, qualification: 'Head Office',\n    //     // location:'Chennai', \n    //     school: 'HO',\n    //     board: '',\n    //     passing: '17-08-2019',\n    //     percentage: 'Admin',\n\n    // }, {\n    //     SlNO: 1,\n    //     qualification: 'IT Office',\n    //     // location:'Chennai', \n    //     school: 'IT',\n    //     board: 'Head Office',\n    //     passing: '19-08-2020',\n    //     percentage: 'Admin',\n\n    // },])\n    // const {enqueueSnackbar} = useSnackbar()\n    // const [CountryList, setIsLoading] = useState(true)\n    // const [qualification, setQualification] = useState(\"\")\n    // const [school, setSchool] = useState(\"\")\n    const [error, setError] = useState(\"\")\n    const [board, setBoard] = useState(\"\")\n    const [passing, setPassing] = useState(\"\")\n    // const [percantage, setData] = useState([])\n    const [countrySchema, setCountry] = useState([])\n    const [searchResults, setSearchResults] = React.useState([]);\n    const [CountryCreate, setCountryCreate] = useState(false)\n    const [CountryList, setCountryList] = useState(true)\n    // const [isLoading, setIsLoading] = useState(true);\n    // const { match } = props;\n    // let { code } = match.params;\n    const _noContentRenderer = () => {\n        return <div>No Office types.</div>\n    }\n\n    useEffect(() => {\n        setError(\"\");\n        setSearchResults([]);\n    },[])\n\n    const formik = useFormik({\n        initialValues: {\n            CountryName: '',\n            Abbreviation: '',\n            Code: '',\n        },\n        validationSchema: yup.object({\n            CountryName: yup.string()\n                .required(\" CountryName is Required\"),\n            // .min(5 , \"Minimum 5 charcter\" )\n            Abbreviation: yup.string()\n                .required(\"Abbreviation is Required\"),\n                Code: yup.string()\n                .required(\"Country Code  is Required\"),\n\n        }),\n        onSubmit: (userInputData) => {\n            console.log(userInputData)\n\n        }\n    })\n\n\n    // const deleteStudent = () => {\n\n    //  axios.delete('http://localhost:2000/updateOfficeType')\n    //  .then( (res) => {\n    //      console.log (res);\n    //     //  setPosts(res.data)\n    //      console.log('Data has been Changed !')\n    // })\n    // .catch ((err) => {\n    //     console.log (err);\n    // })\n    // }   \n    // const    notify = () => toast(\"Wow so easy !\");\n\n    // const   Country = async () => {\n\n    //     if (passing === \"\") {\n    //         var response\n    //         let body = formik.values\n    //         console.log(body);\n    //         try {\n    //             response = await createCountry(JSON.stringify(body))\n    //             if (response.success === true) {\n                   \n    //                 formik.handleReset({})\n    //                 console.log(response.Country);\n    //                 setCountry([...countrySchema, response.Country])\n    //                 formik.values = {}\n    //                 await setCountryCreate(false)\n    //                 await setCountryList(true)\n    //                 return (0);\n\n    //             }\n    //             // setError(response.error)\n    //             // showErrorPopUp();\n    //             toast(response.error);\n                \n\n    //         } catch (e) {\n    //             console.log(e)\n    //         }\n\n    //     }\n    //     else {\n    //         var response\n    //         let body = formik.values\n    //         try {\n    //             response = await updateCountry(formik.values.CountryName, formik.values.Abbreviation, formik.values.Code, passing)\n    //             if (response.success === true) {\n    //                 // setBoard(response)\n    //                 const elementsIndex = countrySchema.findIndex(element => element._id === passing)\n    //                 let newArray = [...countrySchema]\n    //                 newArray[elementsIndex] = response.updateCountry;\n    //                 console.log(newArray, \"ddddddd\");\n    //                 setCountry(newArray);\n    //                 await setCountryCreate(false)\n    //                 await setCountryList(true)\n                    \n    //             }\n    //         } catch (e) {\n    //             console.log(e)\n    //         }\n    //     }\n    // };\n\n\n    const EditCountry = async (data) => {\n\n        // (data)\n        console.log(data);\n        await setCountryList(false);\n        await setCountryCreate(true);\n        formik.values.CountryName = data.CountryName\n        formik.values.Abbreviation = data.Abbreviation\n        formik.values.Code = data.Code\n       \n        setPassing(data._id);\n\n    };\n\n    const CancelCountry = async () => {\n        if (passing === \"\") {\n            formik.values.CountryName = \"\";\n            formik.values.Abbreviation = \"\";\n            formik.values.Code = \"\";\n        }\n        else {\n            formik.values.CountryName = \"\";\n            formik.values.Abbreviation = \"\";\n            formik.values.Code = \"\";\n            setPassing(\"\");\n\n        }\n        await setCountryList(true)\n        await setCountryCreate(false)\n    }\n   \n    const Delete = async (id) => {\n\n        var response\n        let body = formik.values\n        try {\n            response = await deleteCountry(id)\n            if (response.success === true) {\n                setBoard(response)\n            }\n\n        } catch (e) {\n            console.log(e)\n        }\n\n    };\n\n\n    useEffect(() => {\n      \n        async function getAllCountry() {\n            var response\n            // let body = formik.values\n            try {\n                response = await getCountry()\n                console.log(response, \"sdf\");\n                if (response) {\n\n                    console.log(response, 'Response');\n\n                    setCountry(response.Country)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        getAllCountry();\n    }, [board]);\n\n  \n    const toInputUppercase = e => {\n        e.target.value = (\"\" + e.target.value).toUpperCase();\n    };\n    const enableCreate = async () => {\n        await setCountryList(false)\n        await setCountryCreate(true)\n    }\n    return (\n\n        <div>\n           \n            {CountryList && <div ><CCard className={'CountryList-card-container'}>\n                <CRow style={{ paddingTop: '2%', paddingLeft: '2%' }}>\n                    <CCol md='12' className={'role-heading-6'}>\n                        Country</CCol>\n                </CRow>\n                <CRow style={{ padding: '15px',  paddingRight: '92%' }}>\n                \n                    <CCol md='12' >\n                        <CButton color={'primary'} shape={'pill'} className={'btnShadow blueColor float-right'} onClick={enableCreate} >+ Add</CButton></CCol>\n                </CRow>\n                <CRow style={{ padding: '2%' }}>\n                    <CCol md='12'>\n                        <CRow>\n                            <CCol md='2'>\n                                <CInput className={'box'} type={\"text\"} name={'OfficeTypes'}\n                                    onChange={formik.handleChange} value={formik.values.OfficeTypes}\n                                    placeholder='Filter CountryName' />\n                                {searchResults.map(item => (\n                                    <li>{item}</li>\n                                ))}\n                            </CCol>\n                            <CCol md='2' >\n                                <CInput className={'box'} type={\"text\"} name={'Abbreviation'}\n                                    onChange={formik.handleChange} value={formik.values.Abbreviations}\n                                    placeholder='Filter Abbreviation' />\n\n                            </CCol>\n                            <CCol md='2'>\n                                <CInput className={'box'} type={\"text\"} name={'ReportingTo'}\n                                    onChange={formik.handleChange} value={formik.values.ReportingTos}\n                                    placeholder='Filter Reporting ' />\n                            </CCol>\n                        </CRow>\n                    </CCol>\n                </CRow>\n                <CRow style={{ padding: '2%' }}>\n                    <CCol md='12'>\n                        <div style={{ width: '100%', height: '200px' }}>\n                            <AutoSizer>\n                                {({ width, height }) => {\n\n                                    return <Table\n                                        rowClassName='table-row1'\n                                        headerStyle={{ textTransform: 'capitalize' }}\n                                        rowStyle={{ borderBottom: '1px solid lightgrey' }}\n                                        width={width}\n                                        height={height}\n                                        headerHeight={50}\n                                        rowHeight={50}\n                                        rowCount={countrySchema.length}\n                                        //    sort={_sort}\n                                        //    sortBy={sortBy}\n                                        overscanColumnCount={1}\n                                        overscanRowCount={1}\n                                        noContentRenderer={_noContentRenderer}\n                                        //    sortDirection={sortDirection}\n                                        rowGetter={({ index }) => countrySchema[index]}\n                                    >\n\n                                        <Column dataKey={'CountryName'} label={'Country'} width={200} />\n                                        <Column dataKey={'Abbreviation'} label={'Abbreviation'} width={200} />\n                                        <Column dataKey={'Code'} label={'Code'} width={200} />\n\n                                        <Column dataKey={'id'} label={'Actions'} cellRenderer={\n                                            (row) => (\n                                                <CRow>\n\n\n                                                    <CCol md='5'><img src={Edits} onClick={() => EditCountry(row.rowData)} /> </CCol>\n                                                    <CCol md='5'><img src={Remove} onClick={() => Delete(row.rowData._id)} /></CCol>\n                                                </CRow>\n                                            )\n                                        } width={100} />\n                                    </Table>\n                                }}\n                            </AutoSizer>\n                        </div></CCol>\n                </CRow>\n            </CCard></div>}\n\n\n            {CountryCreate && <div style={{ padding: '3%' }}>\n                <CCard className={'CountryCreate-card-container'}>\n                    <CRow style={{ padding: '10px', paddingLeft: '20px', paddingRight: '20px' }}>\n                        <CCol md='10' className={'role-heading-6'}>\n                            Create Country </CCol>\n                    </CRow>\n                    <CForm >\n                        <CRow className={'role-form-container-6'}>\n                            <CCol md='12' lg='12' sm='12'>\n\n                                <CRow className={'seperator-6'}>\n\n                                    <CCol md='5'>\n                                        <CLabel className={'form-labels-6'}>Country Name</CLabel>\n                                        <CInput name={'CountryName'}\n                                            onChange={formik.handleChange} value={formik.values.CountryName}\n                                            placeholder='CountryName'/>\n                                        {formik.errors.CountryName ?\n                                            <div className=\"text-danger\"> {formik.errors.CountryName}</div>\n                                            : null\n                                        }\n                                    </CCol>\n\n                                    <CCol md='5'>\n                                        <CLabel className={'form-labels-6'}>Abbreviation</CLabel>\n                                        <CInput name={'Abbreviation'}\n                                            onChange={formik.handleChange} onPress ={toInputUppercase} style={{ textTransform: 'uppercase'}} value={formik.values.Abbreviation}\n                                            placeholder='Abbreviation' />\n                                        {formik.errors.Abbreviation ?\n                                            <div className=\"text-danger\"> {formik.errors.Abbreviation}</div>\n                                            : null\n                                        }\n                                    </CCol>\n                                </CRow>\n\n\n                                <CRow className={'seperator-6'}>\n\n                                    <CCol md='5'>\n                                        <CLabel className={'form-labels-6'}>Code </CLabel>\n                                        <CInput name={'Code'} onChange={formik.handleChange} value={formik.values.Code}\n                                            placeholder='Code'/>\n                                          \n                                         \n                                     \n                                        {formik.errors.Code ?\n                                            <div className=\"text-danger\"> {formik.errors.Code}</div>\n                                            : null\n                                        }\n                                    </CCol>\n                                </CRow>\n\n\n\n                                <CRow >\n                                    <div className=\"centerd-7\">\n                                        <CCol md='10'><CButton shape={'pill'} style={{ width: \"80px\" }} className={'btnShadow blueColor-btn2'} onClick={Country}>{passing !== \"\" ? \"Update\" : \"+ Create\"}</CButton> </CCol>\n                                        {error !== \"\" ? <p>{error}</p> : null}\n                                        <ToastContainer className=\"toast--warning   \" style={{ width: \"300px\" }} />\n                                    </div>\n                                    <div className=\"center-6\">\n                                        <CCol md='10'>\n                                            <CButton shape={'pill'} className={'btnShadow blueColor-btns1'} onClick={CancelCountry}>Cancel</CButton> </CCol>\n                                    </div>\n                                </CRow>\n                            </CCol>\n                        </CRow>\n                    </CForm>\n                </CCard> </div>}\n\n        </div>\n    )\n}\n\nexport default Country\n"]},"metadata":{},"sourceType":"module"}