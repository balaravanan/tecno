{"ast":null,"code":"import _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/state/StateUpload.jsx\";\n\nimport { areaUpload } from \"../../../services/ApiService\";\nimport { ExportCSV } from \"../BulkUpload/ExportCSV.jsx\";\nimport { CButton, CCol, CInput, CLabel, CRow } from \"@coreui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport * as XLSX from \"xlsx\";\nimport readXlsxFile from \"read-excel-file\";\nimport BulkUpload from \"../BulkUpload/BulkUpload\";\n\nvar RoleUpload = function RoleUpload() {\n  var reader = new FileReader();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      files = _useState2[0],\n      setFiles = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fileName = _useState4[0],\n      setFileName = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customers = _useState6[0],\n      setCustomers = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      excelData = _useState8[0],\n      setExcelData = _useState8[1];\n\n  var capitalize = function capitalize(val) {\n    var string = val;\n    return \"\".concat(string[0].toUpperCase()).concat(string.slice(1));\n  };\n\n  var lowerCaseLetters = function lowerCaseLetters(val) {\n    var string = val;\n    return \"\".concat(string.toLowerCase());\n  };\n\n  var upperCaseLetter = function upperCaseLetter(val) {\n    var string = val;\n    return \"\".concat(string.toUpperCase());\n  };\n\n  useEffect(function () {\n    var f = files;\n\n    if (f.name) {\n      readXlsxFile(f).then(function (rows) {\n        var keys = rows[1];\n        rows.shift();\n        rows.shift();\n\n        if (rows.length > 0) {\n          var datas = [];\n          var data = {};\n          rows.map(function (x, j) {\n            x.map(function (y, i) {\n              data[keys[i]] = y;\n            });\n            data.sNo = j + 1;\n            datas.push(data);\n          });\n          setExcelData(datas);\n        }\n      });\n    }\n  }, [files]);\n\n  var uploadBulk = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return areaUpload(excelData);\n\n            case 3:\n              response = _context.sent;\n\n              if (response) {\n                if (response.data) {}\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function uploadBulk() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var custs = [[\"Country_Name\", \"Country_Code\", \"Country_Abbreviation\", \"State_Name\", \"State_Code\", \"State_Abbreviation\", \"City_Name\", \"City_Code\", \"City_Abbreviation\", \"Area_Name\", \"Area_Code\", \"Area_Abbreviation\", \"Pincode\"], []];\n    setCustomers(custs);\n    setFileName(\"AreaLibrary\");\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"OfficeLocationUpload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    className: \"role-heading-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Location Bulk Upload\")), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      marginTop: \"40px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: [customers],\n    fileName: fileName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    onClick: function onClick() {\n      document.getElementById(\"uploadAreaTemplate\").click();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: \"20px\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-upload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(CCol, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    style: {\n      position: \"relative\",\n      right: \"25px\",\n      top: \"5px\"\n    },\n    className: \"form-labels-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Upload Template\"), /*#__PURE__*/React.createElement(CInput, {\n    id: \"uploadAreaTemplate\",\n    style: {\n      display: 'none'\n    },\n    type: \"file\",\n    onChange: function onChange(e) {\n      setFiles(e.target.files[0]);\n    },\n    accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: '50px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CCol, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    onClick: uploadBulk,\n    className: 'saveBtn',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Confirm\"))));\n};\n\nexport default RoleUpload;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/state/StateUpload.jsx"],"names":["areaUpload","ExportCSV","CButton","CCol","CInput","CLabel","CRow","React","useState","useEffect","Select","XLSX","readXlsxFile","BulkUpload","RoleUpload","reader","FileReader","files","setFiles","fileName","setFileName","customers","setCustomers","excelData","setExcelData","capitalize","val","string","toUpperCase","slice","lowerCaseLetters","toLowerCase","upperCaseLetter","f","name","then","rows","keys","shift","length","datas","data","map","x","j","y","i","sNo","push","uploadBulk","response","console","log","custs","marginTop","document","getElementById","click","fontSize","position","right","top","display","e","target","paddingTop"],"mappings":"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","sourcesContent":["import { areaUpload } from \"../../../services/ApiService\";\nimport { ExportCSV } from \"../BulkUpload/ExportCSV.jsx\";\nimport { CButton, CCol, CInput, CLabel, CRow } from \"@coreui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport * as XLSX from \"xlsx\";\nimport readXlsxFile from \"read-excel-file\";\nimport BulkUpload from \"../BulkUpload/BulkUpload\";\n\nconst RoleUpload = () => {\n  const reader = new FileReader();\n  const [files, setFiles] = useState({});\n  const [fileName, setFileName] = useState(\"\");\n  const [customers, setCustomers] = useState([]);\n  const [excelData, setExcelData] = useState([]);\n\n  const capitalize = (val) => {\n    var string = val;\n    return `${string[0].toUpperCase()}${string.slice(1)}`;\n  }\n\n  const lowerCaseLetters = (val) => {\n    var string = val;\n    return `${string.toLowerCase()}`;\n  }\n\n  const upperCaseLetter = (val) => {\n    var string = val;\n    return `${string.toUpperCase()}`;\n  }\n\n  useEffect(() => {\n    var f = files;\n    if (f.name) {\n      readXlsxFile(f).then((rows) => {\n        let keys = rows[1];\n        rows.shift();\n        rows.shift();\n        if (rows.length > 0) {\n          let datas = [];\n          let data = {};\n          rows.map((x,j) => {\n            x.map((y, i) => {\n              data[keys[i]] = y;\n            });\n            data.sNo = (j+1);\n            datas.push(data);\n          });\n          setExcelData(datas);\n        }\n      });\n    }\n  }, [files]);\n\n\n\n  const uploadBulk = async () => {\n    try {\n      const response = await areaUpload(excelData);\n      if (response) {\n        if (response.data) {\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    let custs = [\n      [\n        \"Country_Name\",\n        \"Country_Code\",\n        \"Country_Abbreviation\",\n        \"State_Name\",\n        \"State_Code\",\n        \"State_Abbreviation\",\n        \"City_Name\",\n        \"City_Code\",\n        \"City_Abbreviation\",\n        \"Area_Name\",\n        \"Area_Code\",\n        \"Area_Abbreviation\",\n        \"Pincode\"\n      ],\n      []\n    ];\n\n    setCustomers(custs);\n    setFileName(\"AreaLibrary\");\n  }, []);\n\n  return (\n    <div className=\"OfficeLocationUpload\">\n      <CRow>\n        <CCol className={\"role-heading-6\"}>Location Bulk Upload</CCol>\n      </CRow>\n      <CRow style={{ marginTop: \"40px\" }}>\n        <CCol md={\"6\"}>\n          <CRow>\n            <CCol md={12}>\n              <ExportCSV csvData={[customers]} fileName={fileName} />\n            </CCol>\n          </CRow>\n        </CCol>\n        <CCol md={\"6\"}>\n          <CRow onClick={() => { document.getElementById(\"uploadAreaTemplate\").click() }}>\n            <CCol md={1}>\n              <span style={{ fontSize: \"20px\" }}>\n                <i class=\"fas fa-upload\"></i>\n              </span>\n            </CCol>\n            <CCol md={6}>\n              <CLabel\n                style={{ position: \"relative\", right: \"25px\", top: \"5px\" }}\n                className={\"form-labels-6\"}\n              >\n                Upload Template\n              </CLabel>\n              <CInput\n                id={\"uploadAreaTemplate\"}\n                style={{ display: 'none' }}\n                type={\"file\"}\n                onChange={(e) => {\n                  setFiles(e.target.files[0]);\n                }}\n                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n              />\n            </CCol>\n          </CRow>\n        </CCol>\n      </CRow>\n      <CRow style={{paddingTop: '50px'}}>\n            <CCol md={6}></CCol>\n            <CCol md={6} >\n              <CButton onClick={uploadBulk} className={'saveBtn'}>Confirm</CButton>\n            </CCol>\n          </CRow>\n      {/* application/vnd.openxmlformats-officedocument.spreadsheetml.sheet */}\n    </div>\n  );\n};\n\nexport default RoleUpload;\n"]},"metadata":{},"sourceType":"module"}