{"ast":null,"code":"import _toConsumableArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/state/State.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized';\nimport \"react-virtualized/styles.css\";\nimport { CRow, CCard, CDataTable, CCol, CBadge, CButton, CForm, CPagination, cRadio, CFormGroup, CLabel, CInput, CFormText } from '@coreui/react';\nimport { useFormik, Formik } from 'formik';\nimport * as yup from 'yup';\nimport './State.css';\nimport { createCountry, getState, getAllAreaPaginate, updateState, updateCity, getAreaSchema, updateArea, createCity, createArea, getArea, getCity, createState, getCountry, updateCountry, deleteLocation } from '../../../services/ApiService';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Select from \"react-select\";\nimport ConfirmDelete from '../confirmMessage/confirmDelete';\n\nfunction State(props) {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      board = _useState4[0],\n      setBoard = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passing = _useState6[0],\n      setPassing = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passings = _useState8[0],\n      setPassings = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      state = _useState10[0],\n      setStates = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      city = _useState12[0],\n      setCitys = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      areaSchema = _useState14[0],\n      setArea = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      areasSchema = _useState16[0],\n      setAreas = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      citySchema = _useState18[0],\n      setCity = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      stateSchema = _useState20[0],\n      setState = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      countrySchema = _useState22[0],\n      setCountry = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      AreaCreate = _useState24[0],\n      setAreaCreate = _useState24[1];\n\n  var _useState25 = useState(true),\n      _useState26 = _slicedToArray(_useState25, 2),\n      AreaList = _useState26[0],\n      setAreaList = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      CountryCreate = _useState28[0],\n      setCountryCreate = _useState28[1];\n\n  var _useState29 = useState(true),\n      _useState30 = _slicedToArray(_useState29, 2),\n      CountryList = _useState30[0],\n      setCountryList = _useState30[1];\n\n  var _useState31 = useState(false),\n      _useState32 = _slicedToArray(_useState31, 2),\n      CityCreate = _useState32[0],\n      setCityCreate = _useState32[1];\n\n  var _useState33 = useState(true),\n      _useState34 = _slicedToArray(_useState33, 2),\n      CityList = _useState34[0],\n      setCityList = _useState34[1];\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      StateCreate = _useState36[0],\n      setStateCreate = _useState36[1];\n\n  var _useState37 = useState(true),\n      _useState38 = _slicedToArray(_useState37, 2),\n      StateList = _useState38[0],\n      setStateList = _useState38[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showResults = _React$useState2[0],\n      setShowResults = _React$useState2[1];\n\n  var _useState39 = useState({}),\n      _useState40 = _slicedToArray(_useState39, 2),\n      value = _useState40[0],\n      setValue = _useState40[1];\n\n  var _useState41 = useState({}),\n      _useState42 = _slicedToArray(_useState41, 2),\n      countryName = _useState42[0],\n      setCountryName = _useState42[1];\n\n  var _useState43 = useState({}),\n      _useState44 = _slicedToArray(_useState43, 2),\n      stateName = _useState44[0],\n      setStateName = _useState44[1];\n\n  var _useState45 = useState({}),\n      _useState46 = _slicedToArray(_useState45, 2),\n      cityName = _useState46[0],\n      setCityName = _useState46[1];\n\n  var _useState47 = useState({}),\n      _useState48 = _slicedToArray(_useState47, 2),\n      areaName = _useState48[0],\n      setAreaName = _useState48[1];\n\n  var _useState49 = useState({\n    value: 5,\n    label: 5\n  }),\n      _useState50 = _slicedToArray(_useState49, 2),\n      limit = _useState50[0],\n      setLimit = _useState50[1];\n\n  var _useState51 = useState(1),\n      _useState52 = _slicedToArray(_useState51, 2),\n      page = _useState52[0],\n      setPage = _useState52[1];\n\n  var _useState53 = useState(1),\n      _useState54 = _slicedToArray(_useState53, 2),\n      totalPage = _useState54[0],\n      setTotalPage = _useState54[1];\n\n  var _useState55 = useState({\n    id: \"\",\n    show: false\n  }),\n      _useState56 = _slicedToArray(_useState55, 2),\n      deleteId = _useState56[0],\n      setDeleteId = _useState56[1];\n\n  useEffect(function () {\n    setError(\"\");\n    setPassing(\"\");\n    console.log(board, showResults);\n  }, []);\n  var formik = useFormik({\n    initialValues: {\n      StateName: '',\n      CountryName: '',\n      CityName: '',\n      AreaName: '',\n      Abbreviation1: '',\n      Code1: '',\n      Abbreviation2: '',\n      Code2: '',\n      Abbreviation3: '',\n      Code3: '',\n      Abbreviation4: '',\n      Code4: '',\n      Pincode: ''\n    },\n    validationSchema: yup.object({\n      // .min(5 , \"Minimum 5 charcter\" )\n      CountryName: yup.string().required(\" CountryName is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      StateName: yup.string().required(\" StateName is Required\"),\n      CityName: yup.string().required(\"CityName is Required\"),\n      AreaName: yup.string().required(\"AreaName is Required\"),\n      Abbreviation1: yup.string().required(\"Abbreviation is Required\"),\n      Code1: yup.string().required(\" Code  is Required\"),\n      Abbreviation2: yup.string().required(\"Abbreviation is Required\"),\n      Code2: yup.string().required(\" Code  is Required\"),\n      Abbreviation3: yup.string().required(\"Abbreviation is Required\"),\n      Code3: yup.string().required(\" Code  is Required\"),\n      Abbreviation4: yup.string().required(\"Abbreviation is Required\"),\n      Code4: yup.string().required(\" Code  is Required\"),\n      Pincode: yup.string().required(\" Pincode  is Required\")\n    }),\n    onSubmit: function onSubmit(userInputData) {\n      console.log(userInputData);\n    }\n  });\n\n  var CancelCountry = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              formik.values.Abbreviation1 = \"\";\n              formik.values.Code1 = \"\";\n              formik.values.CountryName = \"\";\n              _context.next = 5;\n              return setCountryList(true);\n\n            case 5:\n              _context.next = 7;\n              return setCountryCreate(false);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function CancelCountry() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var CancelCity = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              formik.values.Abbreviation3 = \"\";\n              formik.values.Code3 = \"\";\n              formik.values.CityName = \"\";\n              _context2.next = 5;\n              return setCityList(true);\n\n            case 5:\n              _context2.next = 7;\n              return setCityCreate(false);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function CancelCity() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var CancelState = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              formik.values.Abbreviation2 = \"\";\n              formik.values.Code2 = \"\";\n              formik.values.StateName = \"\";\n              _context3.next = 5;\n              return setStateList(true);\n\n            case 5:\n              _context3.next = 7;\n              return setStateCreate(false);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function CancelState() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var CancelArea = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              formik.values.Abbreviation4 = \"\";\n              formik.values.Code4 = \"\";\n              formik.values.AreaName = \"\";\n              formik.values.Pincode = \"\";\n              _context4.next = 6;\n              return setAreaList(true);\n\n            case 6:\n              _context4.next = 8;\n              return setAreaCreate(false);\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function CancelArea() {\n      return _ref4.apply(this, arguments);\n    };\n  }(); // const Delete = async (id) => {\n  //     var response\n  //     let body = formik.values\n  //     try {\n  //         response = await deleteCountry(id)\n  //         if (response.success === true) {\n  //             setBoard(response)\n  //         }\n  //     } catch (e) {\n  //         console.log(e)\n  //     }\n  // };\n\n\n  var Country = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var response, body, responce, elementsIndex, newArray;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(passings === \"\")) {\n                _context5.next = 24;\n                break;\n              }\n\n              // let body = {\n              //     country: value.country._id,\n              // }\n              body = formik.values;\n              body = _objectSpread(_objectSpread({}, body), {}, {\n                Code: body.Code1.toUpperCase()\n              });\n              console.log(body);\n              _context5.prev = 4;\n              _context5.next = 7;\n              return createCountry(JSON.stringify(body));\n\n            case 7:\n              response = _context5.sent;\n\n              if (!(response.success === true)) {\n                _context5.next = 16;\n                break;\n              }\n\n              toast.success(response.message, {\n                autoClose: 1000\n              });\n              setTimeout(function () {\n                setCountryCreate(false);\n                setCountryList(true);\n              }, 1300);\n              response.Country = _objectSpread(_objectSpread({}, response.Country), {}, {\n                value: response.Country._id,\n                label: response.Country.countryName\n              });\n              setCountry([].concat(_toConsumableArray(countrySchema), [response.Country]));\n              formik.values = {};\n              formik.handleReset({}); // await setCountryCreate(false)\n              // await setCountryList(true)\n\n              return _context5.abrupt(\"return\", 0);\n\n            case 16:\n              // setError(response.error)\n              // showErrorPopUp();\n              toast.error(response.error);\n              _context5.next = 22;\n              break;\n\n            case 19:\n              _context5.prev = 19;\n              _context5.t0 = _context5[\"catch\"](4);\n              console.log(_context5.t0);\n\n            case 22:\n              _context5.next = 34;\n              break;\n\n            case 24:\n              _context5.prev = 24;\n              _context5.next = 27;\n              return updateCountry(formik.values.CountryName.name, formik.values.Abbreviation1, formik.values.Code1, passings);\n\n            case 27:\n              responce = _context5.sent;\n\n              if (responce.success) {\n                console.log(\"JKJJKJK\");\n                toast.success(responce.message, {\n                  autoClose: 1000\n                });\n                setTimeout(function () {\n                  setCountryCreate(false);\n                  setCountryList(true);\n                }, 1300);\n                responce.updateOfficeType = _objectSpread(_objectSpread({}, responce.updateOfficeType), {}, {\n                  value: responce.updateOfficeType._id,\n                  label: responce.updateOfficeType.countryName\n                });\n                elementsIndex = countrySchema.findIndex(function (element) {\n                  return element._id === passings;\n                });\n                newArray = _toConsumableArray(countrySchema);\n                newArray[elementsIndex] = responce.updateOfficeType;\n                console.log(countrySchema);\n                console.log(newArray, \"ddddddd\");\n                setCountry(newArray);\n                formik.handleReset({});\n                getAllArea();\n                getAllAreas();\n              }\n\n              _context5.next = 34;\n              break;\n\n            case 31:\n              _context5.prev = 31;\n              _context5.t1 = _context5[\"catch\"](24);\n              console.log(_context5.t1);\n\n            case 34:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[4, 19], [24, 31]]);\n    }));\n\n    return function Country() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var State = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var response, body, _body, elementsIndex, newArray;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              console.log(formik.values.CountryName);\n\n              if (!(state === \"\")) {\n                _context6.next = 27;\n                break;\n              }\n\n              body = formik.values;\n              body = _objectSpread(_objectSpread({}, body), {}, {\n                Code2: body.Code2.toUpperCase(),\n                CountryName: countryName\n              });\n              console.log(body);\n              _context6.prev = 5;\n              _context6.next = 8;\n              return createState(JSON.stringify(body));\n\n            case 8:\n              response = _context6.sent;\n\n              if (!(response.success === true)) {\n                _context6.next = 19;\n                break;\n              }\n\n              response.State.value = response.State._id;\n              response.State.label = response.State.stateName;\n              toast.success(response.message, {\n                autoClose: 1000\n              });\n              setTimeout(function () {\n                setStateCreate(false);\n                setStateList(true);\n              }, 1300);\n              formik.handleReset({});\n              console.log(response.State);\n              setState([].concat(_toConsumableArray(stateSchema), [response.State]));\n              formik.values = {};\n              return _context6.abrupt(\"return\", 0);\n\n            case 19:\n              // setError(response.error)\n              // showErrorPopUp();\n              toast.error(response.error);\n              _context6.next = 25;\n              break;\n\n            case 22:\n              _context6.prev = 22;\n              _context6.t0 = _context6[\"catch\"](5);\n              console.log(_context6.t0);\n\n            case 25:\n              _context6.next = 38;\n              break;\n\n            case 27:\n              _body = formik.values;\n              _context6.prev = 28;\n              _context6.next = 31;\n              return updateState(formik.values.StateName, formik.values.Abbreviation2, formik.values.Code2, state);\n\n            case 31:\n              response = _context6.sent;\n\n              if (response.success === true) {\n                toast.success(response.message, {\n                  autoClose: 1000\n                });\n                setTimeout(function () {\n                  setStateCreate(false);\n                  setStateList(true);\n                }, 1300);\n                elementsIndex = stateSchema.findIndex(function (element) {\n                  return element._id === state;\n                });\n                newArray = _toConsumableArray(stateSchema);\n                response.updateOfficeType = _objectSpread(_objectSpread({}, response.updateOfficeType), {}, {\n                  valu: response.updateOfficeType._id,\n                  label: response.updateOfficeType.stateNAme\n                });\n                newArray[elementsIndex] = response.updateOfficeType;\n                console.log(newArray, \"ddddddd\");\n                setState(newArray);\n                getAllAreas();\n              }\n\n              _context6.next = 38;\n              break;\n\n            case 35:\n              _context6.prev = 35;\n              _context6.t1 = _context6[\"catch\"](28);\n              console.log(_context6.t1);\n\n            case 38:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[5, 22], [28, 35]]);\n    }));\n\n    return function State() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var City = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      var response, body, _body2, elementsIndex, newArray;\n\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(city === \"\")) {\n                _context7.next = 26;\n                break;\n              }\n\n              body = formik.values;\n              body = _objectSpread(_objectSpread({}, body), {}, {\n                Code3: body.Code3.toUpperCase(),\n                stateName: stateName,\n                countryName: countryName\n              });\n              console.log(body);\n              _context7.prev = 4;\n              _context7.next = 7;\n              return createCity(JSON.stringify(body));\n\n            case 7:\n              response = _context7.sent;\n\n              if (!(response.success === true)) {\n                _context7.next = 18;\n                break;\n              }\n\n              getAllAreas();\n              toast.success(response.message, {\n                autoClose: 1000\n              });\n              setTimeout(function () {\n                setCityCreate(false);\n                setCityList(true);\n              }, 1300);\n              response.City = _objectSpread(_objectSpread({}, response.City), {}, {\n                value: response.City._id,\n                label: response.City.cityName\n              });\n              formik.handleReset({});\n              console.log(response.City);\n              setCity([].concat(_toConsumableArray(citySchema), [response.City]));\n              formik.values = {};\n              return _context7.abrupt(\"return\", 0);\n\n            case 18:\n              // setError(response.error)\n              // showErrorPopUp();\n              toast.error(response.error);\n              _context7.next = 24;\n              break;\n\n            case 21:\n              _context7.prev = 21;\n              _context7.t0 = _context7[\"catch\"](4);\n              console.log(_context7.t0);\n\n            case 24:\n              _context7.next = 37;\n              break;\n\n            case 26:\n              _body2 = formik.values;\n              _context7.prev = 27;\n              _context7.next = 30;\n              return updateCity(formik.values.CityName, formik.values.Abbreviation3, formik.values.Code3, city);\n\n            case 30:\n              response = _context7.sent;\n\n              if (response.success === true) {\n                toast.success(response.message, {\n                  autoClose: 1000\n                });\n                getAllAreas();\n                setTimeout(function () {\n                  setCityCreate(false);\n                  setCityList(true);\n                }, 1300);\n                elementsIndex = citySchema.findIndex(function (element) {\n                  return element._id === city;\n                });\n                newArray = _toConsumableArray(citySchema);\n                response.updateOfficeType = _objectSpread(_objectSpread({}, response.updateOfficeType), {}, {\n                  value: response.updateOfficeType._id,\n                  label: response.updateOfficeType.cityName\n                });\n                newArray[elementsIndex] = response.updateOfficeType;\n                console.log(newArray, \"ddddddd\");\n                setCity(newArray);\n                getAllAreas();\n              }\n\n              _context7.next = 37;\n              break;\n\n            case 34:\n              _context7.prev = 34;\n              _context7.t1 = _context7[\"catch\"](27);\n              console.log(_context7.t1);\n\n            case 37:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7, null, [[4, 21], [27, 34]]);\n    }));\n\n    return function City() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var Area = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n      var response, body, elementsIndex, newArray;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (!(passing === \"\")) {\n                _context8.next = 28;\n                break;\n              }\n\n              body = formik.values;\n              body = _objectSpread(_objectSpread({}, body), {}, {\n                Code4: body.Code4.toUpperCase(),\n                CityName: cityName,\n                StateName: stateName,\n                CountryName: countryName\n              });\n              console.log(body);\n              _context8.prev = 4;\n              _context8.next = 7;\n              return createArea(JSON.stringify(body));\n\n            case 7:\n              response = _context8.sent;\n\n              if (!(response.success === true)) {\n                _context8.next = 20;\n                break;\n              }\n\n              formik.values = {};\n              setCityName({});\n              setStateName({});\n              setCountryName({});\n              toast.success(response.message, {\n                autoClose: 1000\n              });\n              setTimeout(function () {\n                setAreaCreate(false);\n                setAreaList(true);\n              }, 1300);\n              formik.handleReset({}); // console.log(response.Area);\n              // setArea([...areaSchema, response.Area])\n\n              getAllArea();\n              getAllAreas();\n              formik.values = {};\n              return _context8.abrupt(\"return\", 0);\n\n            case 20:\n              // setError(response.error)\n              // showErrorPopUp();\n              toast.error(response.error);\n              _context8.next = 26;\n              break;\n\n            case 23:\n              _context8.prev = 23;\n              _context8.t0 = _context8[\"catch\"](4);\n              console.log(_context8.t0);\n\n            case 26:\n              _context8.next = 38;\n              break;\n\n            case 28:\n              _context8.prev = 28;\n              _context8.next = 31;\n              return updateArea(formik.values.CountryName, formik.values.AreaName, formik.values.Abbreviation4, formik.values.Code4, formik.values.Pincode, passing);\n\n            case 31:\n              response = _context8.sent;\n\n              if (response.success === true) {\n                getAllAreas();\n                formik.values.CountryName = \"\";\n                formik.values.AreaName = \"\";\n                formik.values.Abbreviation4 = \"\";\n                formik.values.Code4 = \"\";\n                formik.values.Pincode = \"\";\n                setPassing(\"\");\n                toast.success(response.message);\n                setTimeout(function () {\n                  setAreaCreate(false);\n                  setAreaList(true);\n                }, 2000);\n                elementsIndex = areasSchema.findIndex(function (element) {\n                  return element._id === passing;\n                });\n                newArray = _toConsumableArray(areasSchema);\n                response.updateOfficeType = _objectSpread(_objectSpread({}, response.updateOfficeType), {}, {\n                  value: response.updateOfficeType._id,\n                  label: response.updateOfficeType.areaName\n                });\n                newArray[elementsIndex] = response.updateOfficeType;\n                console.log(newArray, \"ddddddd\");\n                setArea(newArray);\n                getAllAreas();\n              }\n\n              _context8.next = 38;\n              break;\n\n            case 35:\n              _context8.prev = 35;\n              _context8.t1 = _context8[\"catch\"](28);\n              console.log(_context8.t1);\n\n            case 38:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8, null, [[4, 23], [28, 35]]);\n    }));\n\n    return function Area() {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    function getAllCountry() {\n      return _getAllCountry.apply(this, arguments);\n    }\n\n    function _getAllCountry() {\n      _getAllCountry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n                _context9.next = 3;\n                return getCountry();\n\n              case 3:\n                response = _context9.sent;\n                console.log(response, \"sdf\");\n                response.Country.map(function (x) {\n                  x.value = x._id;\n                  x.label = x.countryName;\n                });\n\n                if (response) {\n                  console.log(response, 'Response');\n                  setCountry(response.Country);\n                }\n\n                _context9.next = 12;\n                break;\n\n              case 9:\n                _context9.prev = 9;\n                _context9.t0 = _context9[\"catch\"](0);\n                console.log(_context9.t0);\n\n              case 12:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, null, [[0, 9]]);\n      }));\n      return _getAllCountry.apply(this, arguments);\n    }\n\n    getAllCountry();\n  }, []);\n  useEffect(function () {\n    function getAllState() {\n      return _getAllState.apply(this, arguments);\n    }\n\n    function _getAllState() {\n      _getAllState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                _context10.next = 3;\n                return getState(countryName._id);\n\n              case 3:\n                response = _context10.sent;\n                console.log(response, \"sdf\");\n\n                if (response) {\n                  response.State.map(function (x) {\n                    x.value = x._id;\n                    x.label = x.stateName;\n                  });\n                  console.log(response, 'Response');\n                  setState(response.State);\n                }\n\n                _context10.next = 11;\n                break;\n\n              case 8:\n                _context10.prev = 8;\n                _context10.t0 = _context10[\"catch\"](0);\n                console.log(_context10.t0);\n\n              case 11:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, null, [[0, 8]]);\n      }));\n      return _getAllState.apply(this, arguments);\n    }\n\n    getAllState();\n  }, [countryName]);\n  useEffect(function () {\n    function getAllCity() {\n      return _getAllCity.apply(this, arguments);\n    }\n\n    function _getAllCity() {\n      _getAllCity = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                _context11.prev = 0;\n                _context11.next = 3;\n                return getCity(stateName._id);\n\n              case 3:\n                response = _context11.sent;\n                console.log(response, \"sdf\");\n\n                if (response) {\n                  response.City.map(function (x) {\n                    x.value = x._id;\n                    x.label = x.cityName;\n                  });\n                  console.log(response, 'Response');\n                  setCity(response.City);\n                }\n\n                _context11.next = 11;\n                break;\n\n              case 8:\n                _context11.prev = 8;\n                _context11.t0 = _context11[\"catch\"](0);\n                console.log(_context11.t0);\n\n              case 11:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, null, [[0, 8]]);\n      }));\n      return _getAllCity.apply(this, arguments);\n    }\n\n    getAllCity();\n  }, [stateName]);\n  useEffect(function () {\n    getAllArea();\n  }, [cityName]);\n\n  var getAllArea = /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.prev = 0;\n              _context12.next = 3;\n              return getArea(cityName._id);\n\n            case 3:\n              response = _context12.sent;\n              console.log(response, \"sdf\");\n\n              if (response) {\n                console.log(response, 'Response');\n\n                if (response.Area) {\n                  response.Area.map(function (x) {\n                    x.value = x._id;\n                    x.label = \"\".concat(capitalize(x.state.stateName), \", \").concat(capitalize(x.city.cityName), \", \").concat(capitalize(x.areaName), \", \").concat(x.pincode);\n                    x.cityName = x.city.cityName;\n                    x.stateName = x.state.stateName;\n                    x.countryName = x.country.countryName;\n                  });\n                }\n\n                setArea(response.Area);\n              }\n\n              _context12.next = 11;\n              break;\n\n            case 8:\n              _context12.prev = 8;\n              _context12.t0 = _context12[\"catch\"](0);\n              console.log(_context12.t0);\n\n            case 11:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12, null, [[0, 8]]);\n    }));\n\n    return function getAllArea() {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    getAllAreas();\n  }, []);\n\n  var getAllAreas = /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.prev = 0;\n              _context13.next = 3;\n              return getAreaSchema();\n\n            case 3:\n              response = _context13.sent;\n              console.log(response, \"sdf\");\n\n              if (response) {\n                if (response.Area) {\n                  response.Area.map(function (x) {\n                    x.value = x._id;\n                    x.label = \"\".concat(capitalize(x.state.stateName), \", \").concat(capitalize(x.city.cityName), \", \").concat(capitalize(x.areaName), \", \").concat(x.pincode);\n                    x.cityName = x.city.cityName;\n                    x.stateName = x.state.stateName;\n                    x.countryName = x.country.countryName;\n                  });\n                }\n\n                setAreas(response.Area);\n              }\n\n              _context13.next = 11;\n              break;\n\n            case 8:\n              _context13.prev = 8;\n              _context13.t0 = _context13[\"catch\"](0);\n              console.log(_context13.t0);\n\n            case 11:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13, null, [[0, 8]]);\n    }));\n\n    return function getAllAreas() {\n      return _ref10.apply(this, arguments);\n    };\n  }(); // useEffect(() => {\n  //     getPaginate();\n  // }, [limit, page]);\n  // const getPaginate = async () => {\n  //     var response;\n  //     // let body = formik.values\n  //     try {\n  //         response = await getAllAreaPaginate(`page=${page}&limit=${limit.value}`);\n  //         if (response) {\n  //             if (response.Area) {\n  //                 response.Area.docs.map(x => {\n  //                     x.value = x._id;\n  //                     x.label = `${capitalize(x.state.stateName)}, ${capitalize(x.city.cityName)}, ${capitalize(x.areaName)}, ${x.pincode}`;\n  //                     x.cityName = x.city.cityName;\n  //                     x.stateName = x.state.stateName;\n  //                     x.countryName = x.country.countryName;\n  //                 })\n  //             }\n  //             // setAreas(response.Area.docs)\n  //             setTotalPage(response.Area.totalPages)\n  //         }\n  //     } catch (e) {\n  //         console.log(e);\n  //     }\n  // }\n\n\n  var capitalize = function capitalize(x) {\n    var s = x.toLowerCase();\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  var enableCreate = /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return setStateList(false);\n\n            case 2:\n              _context14.next = 4;\n              return setStateCreate(true);\n\n            case 4:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    return function enableCreate() {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n\n  var cityCreate = /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15() {\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return setCityList(false);\n\n            case 2:\n              _context15.next = 4;\n              return setCityCreate(true);\n\n            case 4:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    return function cityCreate() {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n\n  var countryCreate = /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16() {\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return setCountryList(false);\n\n            case 2:\n              _context16.next = 4;\n              return setCountryCreate(true);\n\n            case 4:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function countryCreate() {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n\n  var areaCreate = /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n      return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n        while (1) {\n          switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return setAreaList(false);\n\n            case 2:\n              _context17.next = 4;\n              return setAreaCreate(true);\n\n            case 4:\n            case \"end\":\n              return _context17.stop();\n          }\n        }\n      }, _callee17);\n    }));\n\n    return function areaCreate() {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n\n  var MIN_TABLE_WIDTH = 1000;\n\n  var EditCountry = /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(data) {\n      return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n        while (1) {\n          switch (_context18.prev = _context18.next) {\n            case 0:\n              console.log(data, \"asasasasasas\");\n              _context18.next = 3;\n              return setCountryList(false);\n\n            case 3:\n              _context18.next = 5;\n              return setCountryCreate(true);\n\n            case 5:\n              _context18.next = 7;\n              return setStateList(false);\n\n            case 7:\n              _context18.next = 9;\n              return setStateCreate(true);\n\n            case 9:\n              _context18.next = 11;\n              return setCityList(false);\n\n            case 11:\n              _context18.next = 13;\n              return setCityCreate(true);\n\n            case 13:\n              _context18.next = 15;\n              return setAreaList(false);\n\n            case 15:\n              _context18.next = 17;\n              return setAreaCreate(true);\n\n            case 17:\n              formik.values.CountryName = data.countryName;\n              formik.values.StateName = data.stateName;\n              formik.values.CityName = data.cityName;\n              formik.values.AreaName = data.areaName;\n              formik.values.Abbreviation1 = data.country.abbreviation;\n              formik.values.Code1 = data.country.code;\n              formik.values.Abbreviation2 = data.state.abbreviation;\n              formik.values.Code2 = data.state.code;\n              formik.values.Abbreviation3 = data.city.abbreviation;\n              formik.values.Code3 = data.city.code;\n              formik.values.Abbreviation4 = data.abbreviation;\n              formik.values.Code4 = data.code;\n              formik.values.Pincode = data.pincode;\n              setPassing(data._id);\n              setPassings(data.country._id);\n              setStates(data.state._id);\n              setCitys(data.city._id);\n\n            case 34:\n            case \"end\":\n              return _context18.stop();\n          }\n        }\n      }, _callee18);\n    }));\n\n    return function EditCountry(_x) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n\n  var Delete = /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n        while (1) {\n          switch (_context19.prev = _context19.next) {\n            case 0:\n              body = formik.values;\n              _context19.prev = 1;\n              _context19.next = 4;\n              return deleteLocation(deleteId.id);\n\n            case 4:\n              response = _context19.sent;\n\n              if (response.success === true) {\n                // setBoard(response)\n                getAllAreas();\n                cancelConfirmDelete();\n              }\n\n              _context19.next = 12;\n              break;\n\n            case 8:\n              _context19.prev = 8;\n              _context19.t0 = _context19[\"catch\"](1);\n              console.log(_context19.t0);\n              cancelConfirmDelete();\n\n            case 12:\n            case \"end\":\n              return _context19.stop();\n          }\n        }\n      }, _callee19, null, [[1, 8]]);\n    }));\n\n    return function Delete() {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n\n  var _useState57 = useState([]),\n      _useState58 = _slicedToArray(_useState57, 2),\n      details = _useState58[0],\n      setDetails = _useState58[1];\n\n  useEffect(function () {\n    var val1 = formik.values.Code1;\n    formik.values.Code1 = val1.toUpperCase();\n    var val2 = formik.values.Code2;\n    formik.values.Code2 = val2.toUpperCase();\n    var val3 = formik.values.Code3;\n    formik.values.Code3 = val3.toUpperCase();\n    var val4 = formik.values.Code4;\n    formik.values.Code4 = val4.toUpperCase();\n  }, [formik.values]);\n  var fields = [{\n    key: 'countryName',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    key: 'stateName',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    key: 'cityName',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    key: 'areaName',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    key: 'pincode',\n    _style: {\n      width: '20%'\n    }\n  }, {\n    label: 'Action',\n    key: 'show_details',\n    _style: {\n      width: '1%'\n    },\n    sorter: false,\n    filter: false\n  }];\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n  };\n\n  var toggleDetails = function toggleDetails(index) {\n    var position = details.indexOf(index);\n    var newDetails = details.slice();\n\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [].concat(_toConsumableArray(details), [index]);\n    }\n\n    setDetails(newDetails);\n  };\n\n  var deleteConfirm = function deleteConfirm(id) {\n    setDeleteId({\n      id: id,\n      show: true\n    });\n  };\n\n  var cancelConfirmDelete = function cancelConfirmDelete() {\n    setDeleteId({\n      id: \"\",\n      show: false\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmDelete, {\n    details: deleteId,\n    confirm: Delete,\n    cancel: cancelConfirmDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: 'StateList-card-container',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '10px',\n      paddingLeft: '20px',\n      paddingRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: 'role-heading-2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 21\n    }\n  }, \"Location Library\")), /*#__PURE__*/React.createElement(CRow, {\n    className: 'role-form-container-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    lg: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 25\n    }\n  }, CountryList && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 81\n    }\n  }, \"Country Name\"), /*#__PURE__*/React.createElement(Select, {\n    type: \"text\",\n    placeholder: \"CountryName\",\n    onChange: function onChange(e) {\n      return setCountryName(e);\n    },\n    value: countryName.value ? countryName : null,\n    options: countrySchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      paddingTop: '2%',\n      marginTop: '30px'\n    },\n    className: 'saveBtn',\n    onClick: countryCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 37\n    }\n  }, \"ADD\"))), CountryCreate && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 47\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 37\n    }\n  }, \"Country Name\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'CountryName',\n    onChange: formik.handleChange,\n    value: formik.values.CountryName,\n    placeholder: \"CountryName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 37\n    }\n  }), formik.errors.CountryName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.CountryName) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 37\n    }\n  }, \"Abbreviation\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Abbreviation1',\n    onChange: formik.handleChange,\n    value: formik.values.Abbreviation1,\n    placeholder: \"Abbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 37\n    }\n  }), formik.errors.Abbreviation1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 765,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Abbreviation1) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 37\n    }\n  }, \"Code\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Code1',\n    onChange: formik.handleChange,\n    value: formik.values.Code1,\n    style: {\n      textTransform: 'uppercase'\n    },\n    placeholder: \"Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 37\n    }\n  }), formik.errors.Code1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Code1) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 785,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px'\n    },\n    className: 'saveBtn',\n    onClick: Country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 37\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px',\n      marginLeft: '20px'\n    },\n    className: 'cancelBtn',\n    onClick: CancelCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 37\n    }\n  }, \"Cancel\"), error !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 53\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(ToastContainer, {\n    autoClose: 5000,\n    className: \"toast--warning\",\n    style: {\n      width: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 25\n    }\n  }, StateList && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 43\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 796,\n      columnNumber: 37\n    }\n  }, \"State Name\"), /*#__PURE__*/React.createElement(Select, {\n    type: \"text\",\n    placeholder: \"Select State\",\n    onChange: function onChange(e) {\n      return setStateName(e);\n    },\n    value: stateName.value ? stateName : null,\n    options: stateSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 797,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      paddingTop: '2%',\n      marginTop: \"30px\"\n    },\n    className: 'saveBtn',\n    onClick: enableCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 37\n    }\n  }, \"ADD\"))), StateCreate && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 61\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 33\n    }\n  }, \"State Name\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 33\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'StateName',\n    onChange: formik.handleChange,\n    value: formik.values.StateName,\n    placeholder: \"StateName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 33\n    }\n  }), formik.errors.StateName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 37\n    }\n  }, \" \", formik.errors.StateName) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 37\n    }\n  }, \"Abbreviation\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Abbreviation2',\n    onChange: formik.handleChange,\n    value: formik.values.Abbreviation2,\n    placeholder: \"Abbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 37\n    }\n  }), formik.errors.Abbreviation2 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Abbreviation2) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 37\n    }\n  }, \"Code\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Code2',\n    onChange: formik.handleChange,\n    value: formik.values.Code2,\n    style: {\n      textTransform: 'uppercase'\n    },\n    placeholder: \"Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 846,\n      columnNumber: 37\n    }\n  }), formik.errors.Code2 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Code2) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px'\n    },\n    className: 'saveBtn',\n    onClick: State,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 37\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px',\n      marginLeft: '20px'\n    },\n    className: 'cancelBtn',\n    onClick: CancelState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 858,\n      columnNumber: 37\n    }\n  }, \"Cancel\"), error !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 53\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(ToastContainer, {\n    autoclose: 5000,\n    className: \"toast--warning \",\n    style: {\n      width: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 860,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 25\n    }\n  }, CityList && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 78\n    }\n  }, \"City Name\"), /*#__PURE__*/React.createElement(Select, {\n    type: \"text\",\n    placeholder: \"Select City\" // onChange={(e) => { setCityName(e); formik.values.CityName = e }}\n    ,\n    onChange: function onChange(e) {\n      return setCityName(e);\n    },\n    value: cityName.value ? cityName : null,\n    options: citySchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 33\n    }\n  }), formik.errors.CityName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 37\n    }\n  }, \" \", formik.errors.CityName) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      paddingTop: '2%',\n      marginTop: '30px'\n    },\n    className: 'saveBtn',\n    onClick: cityCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 37\n    }\n  }, \"ADD\"))), CityCreate && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 885,\n      columnNumber: 60\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 886,\n      columnNumber: 33\n    }\n  }, \"City Name\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 33\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'CityName',\n    onChange: formik.handleChange,\n    value: formik.values.CityName,\n    placeholder: \"CityName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 889,\n      columnNumber: 33\n    }\n  }), formik.errors.CityName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 894,\n      columnNumber: 37\n    }\n  }, \" \", formik.errors.CityName) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 902,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 37\n    }\n  }, \"Abbreviation\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Abbreviation3',\n    onChange: formik.handleChange,\n    value: formik.values.Abbreviation3,\n    placeholder: \"Abbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 37\n    }\n  }), formik.errors.Abbreviation3 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Abbreviation3) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 37\n    }\n  }, \"Code\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 918,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Code3',\n    onChange: formik.handleChange,\n    value: formik.values.Code3,\n    style: {\n      textTransform: 'uppercase'\n    },\n    placeholder: \"Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 37\n    }\n  }), formik.errors.Code3 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 924,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Code3) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px'\n    },\n    className: 'saveBtn',\n    onClick: City,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 37\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px',\n      marginLeft: '20px'\n    },\n    className: 'cancelBtn',\n    onClick: CancelCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 37\n    }\n  }, \"Cancel\"), error !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 53\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(ToastContainer, {\n    autoclose: 5000,\n    className: \"toast--warning   \",\n    style: {\n      width: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 25\n    }\n  }, AreaList && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 42\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 78\n    }\n  }, \"Area Name\"), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Area\",\n    onChange: function onChange(e) {\n      return setAreaName(e);\n    },\n    value: areaName.value ? areaName : null,\n    options: areaSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 33\n    }\n  }), formik.errors.AreaName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 37\n    }\n  }, \" \", formik.errors.AreaName) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: 3,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      paddingTop: '2%',\n      marginTop: '30px'\n    },\n    className: 'saveBtn',\n    onClick: areaCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 37\n    }\n  }, \"ADD\"))), AreaCreate && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 44\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 60\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 33\n    }\n  }, \"Area Name\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 33\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'AreaName',\n    onChange: formik.handleChange,\n    value: formik.values.AreaName,\n    placeholder: \"AreaName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 960,\n      columnNumber: 33\n    }\n  }), formik.errors.AreaName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 37\n    }\n  }, \" \", formik.errors.AreaName) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 971,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 37\n    }\n  }, \"Pincode\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 973,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Pincode',\n    onChange: formik.handleChange,\n    value: formik.values.Pincode,\n    placeholder: \"Pincode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 37\n    }\n  }), formik.errors.Pincode ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 979,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Pincode) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 985,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 37\n    }\n  }, \"Abbreviation\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 987,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Abbreviation4',\n    onChange: formik.handleChange,\n    value: formik.values.Abbreviation4,\n    placeholder: \"Abbreviation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 989,\n      columnNumber: 37\n    }\n  }), formik.errors.Abbreviation4 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 993,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Abbreviation4) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 999,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1000,\n      columnNumber: 37\n    }\n  }, \"Code\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 37\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    name: 'Code4',\n    onChange: formik.handleChange,\n    value: formik.values.Code4,\n    style: {\n      textTransform: 'uppercase'\n    },\n    placeholder: \"Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1003,\n      columnNumber: 37\n    }\n  }), formik.errors.Code4 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1007,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.Code4) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1013,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px'\n    },\n    className: 'saveBtn',\n    onClick: Area,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1014,\n      columnNumber: 37\n    }\n  }, \"Save\"), /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    style: {\n      marginTop: '30px'\n    },\n    className: 'cancelBtn',\n    onClick: CancelArea,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1015,\n      columnNumber: 37\n    }\n  }, \"Cancel\"), error !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1016,\n      columnNumber: 53\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(ToastContainer, {\n    autoclose: 5000,\n    className: \"toast--warning   \",\n    style: {\n      width: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '10px',\n      paddingLeft: '4px',\n      paddingRight: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: 'role-heading-2',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1025,\n      columnNumber: 29\n    }\n  }, \"List of Locations\")), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"15px\",\n      paddingLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1030,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1035,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: areasSchema,\n    fields: fields,\n    columnFilter: true,\n    tableFilter: true,\n    footer: true,\n    itemsPerPageSelect: true,\n    itemsPerPage: 5,\n    hover: true,\n    sorter: true,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1051,\n            columnNumber: 49\n          }\n        }, item.status));\n      },\n      'show_details': function show_details(item, index) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1059,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(CRow, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(CCol, {\n          style: {\n            fontSize: \"1.15rem\"\n          },\n          md: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1070,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          onClick: function onClick() {\n            toggleDetails(index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1071,\n            columnNumber: 61\n          }\n        }), /*#__PURE__*/React.createElement(\"i\", {\n          style: {\n            marginRight: \"5px\",\n            color: \"#3480e2\"\n          },\n          onClick: function onClick() {\n            return EditCountry(areasSchema[index]);\n          },\n          class: \"fas fa-edit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 61\n          }\n        }), /*#__PURE__*/React.createElement(\"i\", {\n          onClick: function onClick() {\n            return deleteConfirm(areasSchema[index]._id);\n          },\n          style: {\n            marginLeft: \"5px\",\n            color: \"#e85654\"\n          },\n          class: \"fas fa-trash\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1083,\n            columnNumber: 61\n          }\n        }))));\n      },\n      'details': function details(item, index) {}\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1036,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 17\n    }\n  }))));\n}\n\nexport default State;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/state/State.jsx"],"names":["React","useState","useEffect","AutoSizer","Table","Column","SortDirection","InfiniteLoader","CRow","CCard","CDataTable","CCol","CBadge","CButton","CForm","CPagination","cRadio","CFormGroup","CLabel","CInput","CFormText","useFormik","Formik","yup","createCountry","getState","getAllAreaPaginate","updateState","updateCity","getAreaSchema","updateArea","createCity","createArea","getArea","getCity","createState","getCountry","updateCountry","deleteLocation","ToastContainer","toast","Select","ConfirmDelete","State","props","error","setError","board","setBoard","passing","setPassing","passings","setPassings","state","setStates","city","setCitys","areaSchema","setArea","areasSchema","setAreas","citySchema","setCity","stateSchema","setState","countrySchema","setCountry","AreaCreate","setAreaCreate","AreaList","setAreaList","CountryCreate","setCountryCreate","CountryList","setCountryList","CityCreate","setCityCreate","CityList","setCityList","StateCreate","setStateCreate","StateList","setStateList","showResults","setShowResults","value","setValue","countryName","setCountryName","stateName","setStateName","cityName","setCityName","areaName","setAreaName","label","limit","setLimit","page","setPage","totalPage","setTotalPage","id","show","deleteId","setDeleteId","console","log","formik","initialValues","StateName","CountryName","CityName","AreaName","Abbreviation1","Code1","Abbreviation2","Code2","Abbreviation3","Code3","Abbreviation4","Code4","Pincode","validationSchema","object","string","required","onSubmit","userInputData","CancelCountry","values","CancelCity","CancelState","CancelArea","Country","body","Code","toUpperCase","JSON","stringify","response","success","message","autoClose","setTimeout","_id","handleReset","name","responce","updateOfficeType","elementsIndex","findIndex","element","newArray","getAllArea","getAllAreas","valu","stateNAme","City","Area","getAllCountry","map","x","getAllState","getAllCity","capitalize","pincode","country","s","toLowerCase","charAt","slice","enableCreate","cityCreate","countryCreate","areaCreate","MIN_TABLE_WIDTH","EditCountry","data","abbreviation","code","Delete","cancelConfirmDelete","details","setDetails","val1","val2","val3","val4","fields","key","_style","width","sorter","filter","getBadge","status","toggleDetails","index","position","indexOf","newDetails","splice","deleteConfirm","padding","paddingLeft","paddingRight","e","paddingTop","marginTop","handleChange","errors","textTransform","marginLeft","item","fontSize","marginRight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized'\nimport \"react-virtualized/styles.css\";\nimport { CRow, CCard, CDataTable, CCol, CBadge, CButton, CForm, CPagination, cRadio, CFormGroup, CLabel, CInput, CFormText } from '@coreui/react'\nimport { useFormik, Formik } from 'formik'\nimport * as yup from 'yup'\nimport './State.css'\nimport { createCountry, getState, getAllAreaPaginate, updateState, updateCity, getAreaSchema, updateArea, createCity, createArea, getArea, getCity, createState, getCountry, updateCountry, deleteLocation } from '../../../services/ApiService'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Select from \"react-select\";\nimport ConfirmDelete from '../confirmMessage/confirmDelete';\nfunction State(props) {\n\n\n    const [error, setError] = useState(\"\")\n    const [board, setBoard] = useState(\"\")\n    const [passing, setPassing] = useState(\"\")\n    const [passings, setPassings] = useState(\"\")\n    const [state, setStates] = useState(\"\")\n    const [city, setCitys] = useState(\"\")\n    const [areaSchema, setArea] = useState([])\n    const [areasSchema, setAreas] = useState([])\n    const [citySchema, setCity] = useState([])\n    const [stateSchema, setState] = useState([])\n    const [countrySchema, setCountry] = useState([])\n    const [AreaCreate, setAreaCreate] = useState(false)\n    const [AreaList, setAreaList] = useState(true)\n    const [CountryCreate, setCountryCreate] = useState(false)\n    const [CountryList, setCountryList] = useState(true)\n    const [CityCreate, setCityCreate] = useState(false)\n    const [CityList, setCityList] = useState(true)\n    const [StateCreate, setStateCreate] = useState(false)\n    const [StateList, setStateList] = useState(true)\n    const [showResults, setShowResults] = React.useState(false)\n    const [value, setValue] = useState({});\n    const [countryName, setCountryName] = useState({});\n\n    const [stateName, setStateName] = useState({});\n    const [cityName, setCityName] = useState({});\n    const [areaName, setAreaName] = useState({});\n    const [limit, setLimit] = useState({ value: 5, label: 5 });\n    const [page, setPage] = useState(1);\n    const [totalPage, setTotalPage] = useState(1);\n    const [deleteId, setDeleteId] = useState({ id: \"\", show: false });\n    useEffect(() => {\n        setError(\"\");\n        setPassing(\"\");\n        console.log(board, showResults);\n    }, [])\n\n    const formik = useFormik({\n        initialValues: {\n            StateName: '',\n            CountryName: '',\n            CityName: '',\n            AreaName: '',\n            Abbreviation1: '',\n            Code1: '',\n            Abbreviation2: '',\n            Code2: '',\n            Abbreviation3: '',\n            Code3: '',\n            Abbreviation4: '',\n            Code4: '',\n            Pincode: '',\n        },\n        validationSchema: yup.object({\n\n            // .min(5 , \"Minimum 5 charcter\" )\n            CountryName: yup.string()\n                .required(\" CountryName is Required\"),\n            // .min(5 , \"Minimum 5 charcter\" )\n            StateName: yup.string()\n                .required(\" StateName is Required\"),\n            CityName: yup.string()\n                .required(\"CityName is Required\"),\n            AreaName: yup.string()\n                .required(\"AreaName is Required\"),\n            Abbreviation1: yup.string()\n                .required(\"Abbreviation is Required\"),\n            Code1: yup.string()\n                .required(\" Code  is Required\"),\n            Abbreviation2: yup.string()\n                .required(\"Abbreviation is Required\"),\n            Code2: yup.string()\n                .required(\" Code  is Required\"),\n            Abbreviation3: yup.string()\n                .required(\"Abbreviation is Required\"),\n            Code3: yup.string()\n                .required(\" Code  is Required\"),\n            Abbreviation4: yup.string()\n                .required(\"Abbreviation is Required\"),\n            Code4: yup.string()\n                .required(\" Code  is Required\"),\n            Pincode: yup.string()\n                .required(\" Pincode  is Required\"),\n\n        }),\n        onSubmit: (userInputData) => {\n            console.log(userInputData)\n\n        }\n    })\n\n\n\n    const CancelCountry = async () => {\n        formik.values.Abbreviation1 = \"\";\n        formik.values.Code1 = \"\";\n        formik.values.CountryName = \"\";\n        await setCountryList(true)\n        await setCountryCreate(false)\n    }\n\n    const CancelCity = async () => {\n        formik.values.Abbreviation3 = \"\";\n        formik.values.Code3 = \"\";\n        formik.values.CityName = \"\";\n        await setCityList(true)\n        await setCityCreate(false)\n    }\n\n    const CancelState = async () => {\n        formik.values.Abbreviation2 = \"\";\n        formik.values.Code2 = \"\";\n        formik.values.StateName = \"\";\n        await setStateList(true)\n        await setStateCreate(false)\n    }\n\n    const CancelArea = async () => {\n        formik.values.Abbreviation4 = \"\";\n        formik.values.Code4 = \"\";\n        formik.values.AreaName = \"\";\n        formik.values.Pincode = \"\";\n        await setAreaList(true)\n        await setAreaCreate(false)\n    }\n\n    // const Delete = async (id) => {\n\n    //     var response\n    //     let body = formik.values\n    //     try {\n    //         response = await deleteCountry(id)\n    //         if (response.success === true) {\n    //             setBoard(response)\n    //         }\n\n    //     } catch (e) {\n    //         console.log(e)\n    //     }\n\n    // };\n\n    const Country = async () => {\n\n        if (passings === \"\") {\n            var response\n            // let body = {\n            //     country: value.country._id,\n            // }\n            let body = formik.values\n\n            body = { ...body, Code: body.Code1.toUpperCase() }\n            console.log(body);\n            try {\n                response = await createCountry(JSON.stringify(body))\n                if (response.success === true) {\n                    toast.success(response.message, { autoClose: 1000 });\n                    setTimeout(() => {\n                        setCountryCreate(false);\n                        setCountryList(true);\n                    }, 1300)\n                    response.Country = { ...response.Country, value: response.Country._id, label: response.Country.countryName }\n\n                    setCountry([...countrySchema, response.Country])\n                    formik.values = {}\n                    formik.handleReset({})\n                    // await setCountryCreate(false)\n                    // await setCountryList(true)\n                    return (0);\n\n                }\n                // setError(response.error)\n                // showErrorPopUp();\n                toast.error(response.error);\n\n\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n        else {\n            var responce\n            // let body = formik.values\n            try {\n                responce = await updateCountry(formik.values.CountryName.name, formik.values.Abbreviation1, formik.values.Code1, passings)\n                if (responce.success) {\n                    console.log(\"JKJJKJK\");\n                    toast.success(responce.message, { autoClose: 1000 });\n                    setTimeout(() => {\n                        setCountryCreate(false);\n                        setCountryList(true);\n                    }, 1300)\n                    responce.updateOfficeType = { ...responce.updateOfficeType, value: responce.updateOfficeType._id, label: responce.updateOfficeType.countryName }\n                    const elementsIndex = countrySchema.findIndex(element => element._id === passings)\n                    let newArray = [...countrySchema];\n                    newArray[elementsIndex] = responce.updateOfficeType;\n                    console.log(countrySchema)\n                    console.log(newArray, \"ddddddd\");\n                    setCountry(newArray);\n                    formik.handleReset({})\n                    getAllArea()\n                    getAllAreas()\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    };\n\n    const State = async () => {\n        console.log(formik.values.CountryName);\n        if (state === \"\") {\n            var response\n            let body = formik.values;\n            body = { ...body, Code2: body.Code2.toUpperCase(), CountryName: countryName };\n            console.log(body);\n            try {\n                response = await createState(JSON.stringify(body))\n                if (response.success === true) {\n                    response.State.value = response.State._id;\n                    response.State.label = response.State.stateName;\n                    toast.success(response.message, { autoClose: 1000 });\n                    setTimeout(() => {\n                        setStateCreate(false)\n                        setStateList(true)\n                    }, 1300)\n                    formik.handleReset({})\n                    console.log(response.State);\n                    setState([...stateSchema, response.State])\n                    formik.values = {}\n\n\n                    return (0);\n\n                }\n                // setError(response.error)\n                // showErrorPopUp();\n                toast.error(response.error);\n\n\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n        else {\n            var response\n            let body = formik.values\n            try {\n                response = await updateState(formik.values.StateName, formik.values.Abbreviation2, formik.values.Code2, state)\n                if (response.success === true) {\n                    toast.success(response.message, { autoClose: 1000 });\n                    setTimeout(() => {\n                        setStateCreate(false)\n                        setStateList(true)\n                    }, 1300)\n                    const elementsIndex = stateSchema.findIndex(element => element._id === state)\n                    let newArray = [...stateSchema]\n                    response.updateOfficeType = { ...response.updateOfficeType, valu: response.updateOfficeType._id, label: response.updateOfficeType.stateNAme }\n                    newArray[elementsIndex] = response.updateOfficeType;\n                    console.log(newArray, \"ddddddd\");\n                    setState(newArray);\n                    getAllAreas()\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    };\n\n\n    const City = async () => {\n\n        if (city === \"\") {\n            var response\n            let body = formik.values\n            body = { ...body, Code3: body.Code3.toUpperCase(), stateName: stateName, countryName: countryName }\n            console.log(body);\n            try {\n                response = await createCity(JSON.stringify(body))\n                if (response.success === true) {\n                    getAllAreas();\n                    toast.success(response.message,{autoClose: 1000});\n                    setTimeout(()=>{\n                        setCityCreate(false)\n                        setCityList(true)\n                    }, 1300)\n                    response.City = { ...response.City, value: response.City._id, label: response.City.cityName };\n                    formik.handleReset({})\n                    console.log(response.City);\n                    setCity([...citySchema, response.City])\n                    formik.values = {}\n\n                    return (0);\n\n                }\n                // setError(response.error)\n                // showErrorPopUp();\n                toast.error(response.error);\n\n\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n        else {\n            var response\n            let body = formik.values\n            try {\n                response = await updateCity(formik.values.CityName, formik.values.Abbreviation3, formik.values.Code3, city)\n                if (response.success === true) {\n                    toast.success(response.message,{autoClose: 1000});\n                    getAllAreas();\n                    setTimeout(()=>{\n                        setCityCreate(false)\n                        setCityList(true)\n                    }, 1300)\n                    const elementsIndex = citySchema.findIndex(element => element._id === city)\n                    let newArray = [...citySchema]\n                    response.updateOfficeType = { ...response.updateOfficeType, value: response.updateOfficeType._id, label: response.updateOfficeType.cityName }\n                    newArray[elementsIndex] = response.updateOfficeType;\n                    console.log(newArray, \"ddddddd\");\n                    setCity(newArray);\n                    getAllAreas()\n\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    };\n\n    const Area = async () => {\n\n        if (passing === \"\") {\n            var response\n            let body = formik.values;\n            body = { ...body, Code4: body.Code4.toUpperCase(), CityName: cityName, StateName: stateName, CountryName: countryName }\n\n            console.log(body);\n            try {\n                response = await createArea(JSON.stringify(body))\n                if (response.success === true) {\n                    formik.values = {};\n                    setCityName({});\n                    setStateName({});\n                    setCountryName({});\n                    toast.success(response.message, { autoClose: 1000 });\n                    setTimeout(() => {\n                        setAreaCreate(false)\n                        setAreaList(true)\n                    }, 1300)\n                    formik.handleReset({})\n                    // console.log(response.Area);\n                    // setArea([...areaSchema, response.Area])\n                    getAllArea();\n                    getAllAreas();\n                    formik.values = {}\n\n                    return (0);\n\n                }\n                // setError(response.error)\n                // showErrorPopUp();\n                toast.error(response.error);\n\n\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n        else {\n            var response\n            // let body = formik.AreaName._id\n            try {\n                response = await updateArea(formik.values.CountryName, formik.values.AreaName, formik.values.Abbreviation4, formik.values.Code4, formik.values.Pincode, passing)\n                if (response.success === true) {\n                    getAllAreas();\n                    formik.values.CountryName = \"\";\n                    formik.values.AreaName = \"\";\n                    formik.values.Abbreviation4 = \"\";\n                    formik.values.Code4 = \"\";\n                    formik.values.Pincode = \"\";\n                    setPassing(\"\");\n                    toast.success(response.message)\n                    setTimeout(() => {\n                        setAreaCreate(false)\n                        setAreaList(true)\n                    }, 2000);\n                    const elementsIndex = areasSchema.findIndex(element => element._id === passing)\n                    let newArray = [...areasSchema]\n                    response.updateOfficeType = { ...response.updateOfficeType, value: response.updateOfficeType._id, label: response.updateOfficeType.areaName };\n                    newArray[elementsIndex] = response.updateOfficeType;\n                    console.log(newArray, \"ddddddd\");\n                    setArea(newArray);\n                    getAllAreas()\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    };\n\n    useEffect(() => {\n\n        async function getAllCountry() {\n            var response\n            // let body = formik.values\n            try {\n                response = await getCountry()\n                console.log(response, \"sdf\");\n                response.Country.map(x => {\n                    x.value = x._id;\n                    x.label = x.countryName;\n                })\n                if (response) {\n\n                    console.log(response, 'Response');\n\n                    setCountry(response.Country)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        getAllCountry();\n    }, []);\n\n    useEffect(() => {\n\n        async function getAllState() {\n            var response\n            // let body = formik.Country.id\n            try {\n                response = await getState(countryName._id);\n                console.log(response, \"sdf\");\n\n                if (response) {\n                    response.State.map(x => {\n                        x.value = x._id;\n                        x.label = x.stateName;\n                    })\n                    console.log(response, 'Response');\n\n                    setState(response.State)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        getAllState();\n    }, [countryName]);\n\n    useEffect(() => {\n\n        async function getAllCity() {\n            var response\n            // let body = formik.values\n            try {\n                response = await getCity(stateName._id)\n                console.log(response, \"sdf\");\n                if (response) {\n                    response.City.map(x => {\n                        x.value = x._id;\n                        x.label = x.cityName;\n                    })\n                    console.log(response, 'Response');\n\n                    setCity(response.City)\n                }\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        getAllCity();\n    }, [stateName]);\n\n    useEffect(() => {\n        getAllArea();\n    }, [cityName]);\n\n    const getAllArea = async () => {\n        var response\n        // let body = formik.values\n        try {\n            response = await getArea(cityName._id)\n            console.log(response, \"sdf\");\n            if (response) {\n\n                console.log(response, 'Response');\n                if (response.Area) {\n                    response.Area.map(x => {\n                        x.value = x._id;\n                        x.label = `${capitalize(x.state.stateName)}, ${capitalize(x.city.cityName)}, ${capitalize(x.areaName)}, ${x.pincode}`;\n                        x.cityName = x.city.cityName;\n                        x.stateName = x.state.stateName;\n                        x.countryName = x.country.countryName;\n                    })\n                }\n                setArea(response.Area)\n            }\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        getAllAreas();\n    }, []);\n\n    const getAllAreas = async () => {\n        var response\n        // let body = formik.values\n        try {\n            response = await getAreaSchema()\n            console.log(response, \"sdf\");\n            if (response) {\n                if (response.Area) {\n                    response.Area.map(x => {\n                        x.value = x._id;\n                        x.label = `${capitalize(x.state.stateName)}, ${capitalize(x.city.cityName)}, ${capitalize(x.areaName)}, ${x.pincode}`;\n                        x.cityName = x.city.cityName;\n                        x.stateName = x.state.stateName;\n                        x.countryName = x.country.countryName;\n                    })\n                }\n                setAreas(response.Area)\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    // useEffect(() => {\n    //     getPaginate();\n    // }, [limit, page]);\n    // const getPaginate = async () => {\n    //     var response;\n    //     // let body = formik.values\n    //     try {\n    //         response = await getAllAreaPaginate(`page=${page}&limit=${limit.value}`);\n    //         if (response) {\n    //             if (response.Area) {\n    //                 response.Area.docs.map(x => {\n    //                     x.value = x._id;\n    //                     x.label = `${capitalize(x.state.stateName)}, ${capitalize(x.city.cityName)}, ${capitalize(x.areaName)}, ${x.pincode}`;\n    //                     x.cityName = x.city.cityName;\n    //                     x.stateName = x.state.stateName;\n    //                     x.countryName = x.country.countryName;\n    //                 })\n    //             }\n    //             // setAreas(response.Area.docs)\n    //             setTotalPage(response.Area.totalPages)\n    //         }\n\n\n    //     } catch (e) {\n    //         console.log(e);\n    //     }\n    // }\n\n\n    const capitalize = (x) => {\n        let s = x.toLowerCase();\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n    const enableCreate = async () => {\n        await setStateList(false)\n        await setStateCreate(true)\n    }\n    const cityCreate = async () => {\n        await setCityList(false)\n        await setCityCreate(true)\n    }\n    const countryCreate = async () => {\n        await setCountryList(false)\n        await setCountryCreate(true)\n    }\n    const areaCreate = async () => {\n        await setAreaList(false)\n        await setAreaCreate(true)\n    }\n    const MIN_TABLE_WIDTH = 1000;\n\n    const EditCountry = async (data) => {\n        console.log(data, \"asasasasasas\");\n        await setCountryList(false)\n        await setCountryCreate(true)\n        await setStateList(false)\n        await setStateCreate(true)\n        await setCityList(false)\n        await setCityCreate(true)\n        await setAreaList(false)\n        await setAreaCreate(true)\n        formik.values.CountryName = data.countryName\n        formik.values.StateName = data.stateName\n        formik.values.CityName = data.cityName\n        formik.values.AreaName = data.areaName\n        formik.values.Abbreviation1 = data.country.abbreviation;\n        formik.values.Code1 = data.country.code;\n        formik.values.Abbreviation2 = data.state.abbreviation;\n        formik.values.Code2 = data.state.code;\n        formik.values.Abbreviation3 = data.city.abbreviation;\n        formik.values.Code3 = data.city.code;\n        formik.values.Abbreviation4 = data.abbreviation;\n        formik.values.Code4 = data.code;\n        formik.values.Pincode = data.pincode\n        setPassing(data._id);   \n        setPassings(data.country._id);\n        setStates(data.state._id);\n        setCitys(data.city._id);\n    }\n    const Delete = async () => {\n\n        var response\n        let body = formik.values\n        try {\n            response = await deleteLocation(deleteId.id)\n            if (response.success === true) {\n                // setBoard(response)\n                getAllAreas()\n                cancelConfirmDelete();\n            }\n\n        } catch (e) {\n            console.log(e)\n            cancelConfirmDelete();\n        }\n\n    };\n    const [details, setDetails] = useState([])\n    useEffect(() => {\n        let val1 = formik.values.Code1\n        formik.values.Code1 = val1.toUpperCase();\n        let val2 = formik.values.Code2\n        formik.values.Code2 = val2.toUpperCase();\n        let val3 = formik.values.Code3\n        formik.values.Code3 = val3.toUpperCase();\n        let val4 = formik.values.Code4\n        formik.values.Code4 = val4.toUpperCase();\n    }, [formik.values])\n    const fields = [\n        { key: 'countryName', _style: { width: '20%' } },\n        { key: 'stateName', _style: { width: '20%' } },\n        { key: 'cityName', _style: { width: '20%' } },\n        { key: 'areaName', _style: { width: '20%' } },\n        { key: 'pincode', _style: { width: '20%' } },\n        \n        {\n            label: 'Action',\n            key: 'show_details',\n\n            _style: { width: '1%' },\n            sorter: false,\n            filter: false\n        }\n    ]\n\n    const getBadge = (status) => {\n        switch (status) {\n            case 'Active': return 'success'\n            case 'Inactive': return 'secondary'\n            case 'Pending': return 'warning'\n            case 'Banned': return 'danger'\n            default: return 'primary'\n        }\n    }\n    const toggleDetails = (index) => {\n        const position = details.indexOf(index);\n        let newDetails = details.slice();\n        if (position !== -1) {\n            newDetails.splice(position, 1);\n        } else {\n            newDetails = [...details, index];\n        }\n        setDetails(newDetails);\n    };\n    const deleteConfirm = (id) =>{\n        setDeleteId({id:id,show:true})\n    }\nconst cancelConfirmDelete  =()=>{\n    setDeleteId({id:\"\", show:false})\n}\n    return (\n\n        <div>\n<ConfirmDelete details={deleteId} confirm={Delete} cancel={cancelConfirmDelete}/>\n            <div ><CCard className={'StateList-card-container'}>\n                <CRow style={{ padding: '10px', paddingLeft: '20px', paddingRight: '20px' }}>\n                    <CCol md='12' className={'role-heading-2'}>\n                        Location Library</CCol>\n                </CRow>\n\n\n\n                <CRow className={'role-form-container-6'}>\n                    <CCol md='12' lg='12' sm='12'>\n                        <CRow className={'seperator-6'}>\n                            {CountryList && <React.Fragment><CCol md={5} lg={5}><CLabel className={'form-labels-6'}>Country Name</CLabel>\n                                <Select\n                                    type={\"text\"}\n                                    placeholder='CountryName'\n                                    onChange={(e) => setCountryName(e)}\n                                    value={countryName.value ? countryName : null}\n                                    options={countrySchema}\n                                />\n                                {/* <Select\n                        type={\"text\"}\n                        placeholder=\"Country,State,City,Area\"\n                        // onChange={handleChanges}\n                        options={countrySchema}\n                      /> */}\n\n                            </CCol>\n                                <CCol md={3} lg={3}>\n                                    <CButton shape={'pill'} style={{ paddingTop: '2%', marginTop: '30px' }} className={'saveBtn'} onClick={countryCreate}>ADD</CButton>\n                                </CCol>\n                            </React.Fragment>}\n                            {CountryCreate && <React.Fragment>\n                                <CCol md='3'>\n                                    <CLabel className={'form-labels-6'}>Country Name\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'CountryName'}\n                                        onChange={formik.handleChange} value={formik.values.CountryName}\n                                        placeholder='CountryName' />\n                                    {formik.errors.CountryName ?\n                                        <div className=\"text-danger\"> {formik.errors.CountryName}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n\n\n                                <CCol md='3'>\n                                    <CLabel className={'form-labels-6'}>Abbreviation\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Abbreviation1'}\n                                        onChange={formik.handleChange} value={formik.values.Abbreviation1}\n                                        placeholder='Abbreviation' />\n                                    {formik.errors.Abbreviation1 ?\n                                        <div className=\"text-danger\"> {formik.errors.Abbreviation1}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='3'>\n                                    <CLabel className={'form-labels-6'}>Code\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Code1'}\n                                        onChange={formik.handleChange} value={formik.values.Code1} style={{ textTransform: 'uppercase' }}\n                                        placeholder='Code' />\n                                    {formik.errors.Code1 ?\n                                        <div className=\"text-danger\"> {formik.errors.Code1}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='3'>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px' }} className={'saveBtn'} onClick={Country}>Save</CButton>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px', marginLeft: '20px' }} className={'cancelBtn'} onClick={CancelCountry}>Cancel</CButton>\n                                    {error !== \"\" ? <p>{error}</p> : null}\n                                    <ToastContainer autoClose={5000} className=\"toast--warning\" style={{ width: \"300px\" }} />\n                                </CCol>\n                            </React.Fragment>}\n                        </CRow>\n                        <CRow className={'seperator-6'}>\n                            {StateList && <React.Fragment>\n                                <CCol md={5} lg={5}>\n                                    <CLabel className={'form-labels-6'}>State Name</CLabel>\n                                    <Select\n                                        type={\"text\"}\n                                        placeholder=\"Select State\"\n                                        onChange={(e) => setStateName(e)}\n                                        value={stateName.value ? stateName : null}\n                                        options={stateSchema}\n                                    />\n\n                                </CCol>\n                                <CCol md={3} lg={3}>\n                                    <CButton shape={'pill'} style={{ paddingTop: '2%', marginTop: \"30px\" }} className={'saveBtn'} onClick={enableCreate}>ADD</CButton>\n                                </CCol>\n                            </React.Fragment>}\n                            {StateCreate && <React.Fragment><CCol md='3'>\n                                <CLabel className={'form-labels-6'}>State Name\n                                <span className={\"text-danger\"}> *</span>\n                                </CLabel>\n                                <CInput name={'StateName'}\n                                    onChange={formik.handleChange} \n                                    value={formik.values.StateName}\n                                    placeholder='StateName' />\n                                {formik.errors.StateName ?\n                                    <div className=\"text-danger\"> {formik.errors.StateName}</div>\n                                    : null\n                                }\n\n\n                            </CCol>\n\n\n\n                                <CCol md='3'>\n                                    <CLabel className={'form-labels-6'}>Abbreviation\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Abbreviation2'}\n                                        onChange={formik.handleChange} value={formik.values.Abbreviation2}\n                                        placeholder='Abbreviation' />\n                                    {formik.errors.Abbreviation2 ?\n                                        <div className=\"text-danger\"> {formik.errors.Abbreviation2}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='3'>\n                                    <CLabel className={'form-labels-6'}>Code\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Code2'}\n                                        onChange={formik.handleChange} value={formik.values.Code2} style={{ textTransform: 'uppercase' }}\n                                        placeholder='Code' />\n                                    {formik.errors.Code2 ?\n                                        <div className=\"text-danger\"> {formik.errors.Code2}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='3'>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px' }} className={'saveBtn'} onClick={State}>Save</CButton>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px', marginLeft: '20px' }} className={'cancelBtn'} onClick={CancelState}>Cancel</CButton>\n                                    {error !== \"\" ? <p>{error}</p> : null}\n                                    <ToastContainer autoclose={5000} className=\"toast--warning \" style={{ width: \"300px\" }} />\n                                    {/* {message!==\"\"?<p>{message}</p>:null}\n                                    <ToastContainer className=\"success\" style={{widath:'200px'}}/> */}\n\n                                </CCol></React.Fragment>}\n                        </CRow>\n                        <CRow className={'seperator-6'}>\n                            {CityList && <React.Fragment><CCol md={5} lg={5}><CLabel className={'form-labels-6'}>City Name</CLabel>\n                                <Select\n                                    type={\"text\"}\n                                    placeholder=\"Select City\"\n                                    // onChange={(e) => { setCityName(e); formik.values.CityName = e }}\n                                    onChange={(e) => setCityName(e)}\n                                    value={cityName.value ? cityName : null}\n                                    options={citySchema} />\n\n                                {formik.errors.CityName ?\n                                    <div className=\"text-danger\"> {formik.errors.CityName}</div>\n                                    : null\n                                }\n                            </CCol>\n                                <CCol md={3} lg={3}>\n                                    <CButton shape={'pill'} style={{ paddingTop: '2%', marginTop: '30px' }} className={'saveBtn'} onClick={cityCreate}>ADD</CButton>\n                                </CCol>\n                            </React.Fragment>}\n                            {CityCreate && <React.Fragment><CCol md='3'>\n                                <CLabel className={'form-labels-6'}>City Name\n                                <span className={\"text-danger\"}> *</span>\n                                </CLabel>\n                                <CInput name={'CityName'}\n                                    onChange={formik.handleChange} \n                                    value={formik.values.CityName}\n                                    placeholder='CityName' />\n                                {formik.errors.CityName ?\n                                    <div className=\"text-danger\"> {formik.errors.CityName}</div>\n                                    : null\n                                }\n\n\n                            </CCol>\n\n\n                                <CCol md='3'>\n                                    <CLabel className={'form-labels-6'}>Abbreviation\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Abbreviation3'}\n                                        onChange={formik.handleChange} value={formik.values.Abbreviation3}\n                                        placeholder='Abbreviation' />\n                                    {formik.errors.Abbreviation3 ?\n                                        <div className=\"text-danger\"> {formik.errors.Abbreviation3}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='3'>\n                                    <CLabel className={'form-labels-6'}>Code\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Code3'}\n                                        onChange={formik.handleChange} value={formik.values.Code3} style={{ textTransform: 'uppercase' }}\n                                        placeholder='Code' />\n                                    {formik.errors.Code3 ?\n                                        <div className=\"text-danger\"> {formik.errors.Code3}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='3'>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px' }} className={'saveBtn'} onClick={City}>Save</CButton>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px', marginLeft: '20px' }} className={'cancelBtn'} onClick={CancelCity}>Cancel</CButton>\n                                    {error !== \"\" ? <p>{error}</p> : null}\n                                    <ToastContainer autoclose={5000} className=\"toast--warning   \" style={{ width: \"300px\" }} />\n\n                                </CCol></React.Fragment>}\n                        </CRow>\n                        <CRow className={'seperator-6'}>\n                            {AreaList && <React.Fragment><CCol md={5} lg={5}><CLabel className={'form-labels-6'}>Area Name</CLabel>\n                                <Select\n                                    placeholder='Select Area'\n                                    onChange={(e) => setAreaName(e)}\n                                    value={areaName.value ? areaName : null}\n                                    options={areaSchema}\n                                />\n\n                                {formik.errors.AreaName ?\n                                    <div className=\"text-danger\"> {formik.errors.AreaName}</div>\n                                    : null\n                                }\n                            </CCol>\n                                <CCol md={3} lg={3}>\n                                    <CButton shape={'pill'} style={{ paddingTop: '2%', marginTop: '30px' }} className={'saveBtn'} onClick={areaCreate}>ADD</CButton>\n                                </CCol>\n                            </React.Fragment>}\n                            {AreaCreate && <React.Fragment><CCol md='3'>\n                                <CLabel className={'form-labels-6'}>Area Name\n                                <span className={\"text-danger\"}> *</span>\n                                </CLabel>\n                                <CInput name={'AreaName'}\n                                    onChange={formik.handleChange} value={formik.values.AreaName}\n                                    placeholder='AreaName' />\n                                {formik.errors.AreaName ?\n                                    <div className=\"text-danger\"> {formik.errors.AreaName}</div>\n                                    : null\n                                }\n\n\n                            </CCol>\n\n                                <CCol md='2'>\n                                    <CLabel className={'form-labels-6'}>Pincode\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Pincode'}\n                                        onChange={formik.handleChange} value={formik.values.Pincode}\n                                        placeholder='Pincode' />\n                                    {formik.errors.Pincode ?\n                                        <div className=\"text-danger\"> {formik.errors.Pincode}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='2'>\n                                    <CLabel className={'form-labels-6'}>Abbreviation\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Abbreviation4'}\n                                        onChange={formik.handleChange} value={formik.values.Abbreviation4}\n                                        placeholder='Abbreviation' />\n                                    {formik.errors.Abbreviation4 ?\n                                        <div className=\"text-danger\"> {formik.errors.Abbreviation4}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='2'>\n                                    <CLabel className={'form-labels-6'}>Code\n                                    <span className={\"text-danger\"}> *</span>\n                                    </CLabel>\n                                    <CInput name={'Code4'}\n                                        onChange={formik.handleChange} value={formik.values.Code4} style={{ textTransform: 'uppercase' }}\n                                        placeholder='Code' />\n                                    {formik.errors.Code4 ?\n                                        <div className=\"text-danger\"> {formik.errors.Code4}</div>\n                                        : null\n                                    }\n\n\n                                </CCol>\n                                <CCol md='2'>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px' }} className={'saveBtn'} onClick={Area}>Save</CButton>\n                                    <CButton shape={'pill'} style={{ marginTop: '30px', }} className={'cancelBtn'} onClick={CancelArea}>Cancel</CButton>\n                                    {error !== \"\" ? <p>{error}</p> : null}\n                                    <ToastContainer autoclose={5000} className=\"toast--warning   \" style={{ width: \"300px\" }} />\n\n                                </CCol></React.Fragment>}\n                        </CRow>\n\n\n\n                        <CRow style={{ padding: '10px', paddingLeft: '4px', paddingRight: '20px' }}>\n                            <CCol md='12' className={'role-heading-2'}>\n                                List of Locations</CCol>\n                        </CRow>\n\n                        <CRow style={{ padding: \"15px\", paddingLeft: \"2%\" }}>\n                            <CCol md=\"10\">\n\n                            </CCol>\n\n                        </CRow>\n                        <CRow style={{ padding: '1%' }}>\n                            <CDataTable\n                                items={areasSchema}\n                                fields={fields}\n                                columnFilter\n                                tableFilter\n                                footer\n                                itemsPerPageSelect\n                                itemsPerPage={5}\n                                hover\n                                sorter\n                                pagination\n                                scopedSlots={{\n                                    'status':\n                                        (item) => (\n                                            <td>\n                                                <CBadge color={getBadge(item.status)}>\n                                                    {item.status}\n                                                </CBadge>\n                                            </td>\n                                        ),\n                                    'show_details':\n                                        (item, index) => {\n                                            return (\n                                                <td className=\"py-2\">\n                                                    {/* <CButton\n                            color=\"primary\"\n                            variant=\"outline\"\n                            shape=\"square\"\n                            size=\"sm\"\n                         \n                          >\n                            {details.includes(index) ? 'Hide' : 'Show'}\n                          </CButton> */}\n                                                    <CRow>\n                                                        <CCol style={{ fontSize: \"1.15rem\" }} md=\"12\">\n                                                            <i onClick={() => { toggleDetails(index) }}></i>\n                                                            <i\n                                                                style={{\n                                                                    marginRight: \"5px\",\n                                                                    color: \"#3480e2\",\n                                                                }}\n                                                                onClick={() =>\n                                                                    EditCountry(areasSchema[index])\n                                                                }\n\n                                                                class=\"fas fa-edit\"\n                                                            ></i>\n                                                            <i\n                                                                onClick={() => deleteConfirm(areasSchema[index]._id)}\n                                                                style={{\n                                                                    marginLeft: \"5px\",\n                                                                    color: \"#e85654\",\n                                                                }}\n                                                                class=\"fas fa-trash\"\n                                                            ></i>\n                                                        </CCol>\n\n                                                    </CRow>\n                                                </td>\n                                            )\n                                        },\n                                    'details':\n                                        (item, index) => {\n\n\n                                        }\n                                }}\n                            />\n                        </CRow>\n\n                    </CCol>\n                </CRow>\n                <CRow>\n\n                </CRow>\n            </CCard></div>\n\n\n\n        </div>\n\n    )\n}\n\nexport default State"]},"metadata":{},"sourceType":"module"}