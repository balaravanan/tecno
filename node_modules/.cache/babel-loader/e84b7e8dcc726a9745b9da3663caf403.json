{"ast":null,"code":"import _defineProperty from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/client/ClientDetail.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { CRow, CCard, CCol, CButton, CForm, CSelect, cRadio, CFormGroup, CLabel, CInput, CFormText, CModal, CModalBody, CModalFooter, CModalHeader, CModalTitle } from '@coreui/react';\nimport './ClientDetail.css';\nimport 'react-virtualized/styles.css';\nimport { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized';\nimport { Formik, useFormik // Formik\n} from 'formik';\nimport * as yup from 'yup';\nimport { createClientDetail, getAreaSchema, updateClientDetail, getClientDetails, deleteClientDetail } from '../../../services/ApiService';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { storage } from \"../../../firebase\";\nimport Select from \"react-select\"; // import { for } from 'core-js/fn/symbol';\n\nfunction ClientDetail(props) {\n  var _this = this,\n      _ref12,\n      _React$createElement,\n      _React$createElement2,\n      _React$createElement3,\n      _React$createElement4,\n      _React$createElement5;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      ClientList = _useState2[0],\n      SetClientList = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      ClientCreate = _useState4[0],\n      SetClientCreate = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      primary = _useState6[0],\n      setPrimary = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      files = _useState8[0],\n      setFiles = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      State = _useState10[0],\n      setState = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      passing = _useState14[0],\n      SetPassing = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      areaSchema = _useState16[0],\n      setArea = _useState16[1];\n\n  var _useState17 = useState({}),\n      _useState18 = _slicedToArray(_useState17, 2),\n      value = _useState18[0],\n      setValue = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      clientSchema = _useState20[0],\n      setClients = _useState20[1];\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      posts = _useState22[0],\n      setPosts = _useState22[1];\n\n  var _useState23 = useState(\"\"),\n      _useState24 = _slicedToArray(_useState23, 2),\n      board = _useState24[0],\n      setBoard = _useState24[1];\n\n  var post = [{\n    SNo: '1',\n    clientName: 'SBI Bank',\n    createdBy: '15/11/2020',\n    createdOn: '15/11/2020'\n  }];\n  var formik = useFormik({\n    initialValues: {\n      clientName: '',\n      firstName: '',\n      lastName: '',\n      department: '',\n      designation: '',\n      mobileNumber: '',\n      emailId: '',\n      address1: '',\n      address2: ''\n    },\n    validationSchema: yup.object({\n      clientName: yup.string().required(\" clientName is Required\"),\n      firstName: yup.string().required(\" firstName is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      lastName: yup.string().required(\"lastName is Required\"),\n      department: yup.string().required(\"department To is Required\"),\n      designation: yup.string().required(\"designation is Required\"),\n      mobileNumber: yup.string().required(\"mobileNumber is Required\"),\n      emailId: yup.string().required(\"emailId is Required\"),\n      address1: yup.string().required(\"address1 is Required\"),\n      address2: yup.string().required(\"address2 is Required\")\n    }),\n    onSubmit: function onSubmit(userInputData) {\n      console.log(userInputData);\n      var data = posts;\n      data.push({\n        clientName: formik.values.clientName\n      });\n\n      if (data) {\n        setPosts(data); // setState({ ...state, education: data })\n      }\n    }\n  });\n\n  var handleSave = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file, folder) {\n      var bucketName, uploadFile, data, imageName, storageRef, uploadImage;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(file, folder);\n              bucketName = \"HRmoodule\";\n              uploadFile = file;\n              data = new Date();\n              imageName = \"\".concat(data.getDate(), \"-\").concat(data.getMonth() + 1, \"-\").concat(data.getFullYear(), \"-\").concat(Math.floor(Math.random() * Math.random() * Math.random() * 1000000)).concat(uploadFile.name);\n              storageRef = storage.ref(\"\".concat(bucketName, \"/\").concat(imageName));\n              uploadImage = storageRef.put(uploadFile);\n              uploadImage.on(\"state_changed\", function (snapshot) {}, function (err) {\n                console.log(err);\n              }, function () {\n                storage.ref(\"\".concat(bucketName, \"/\").concat(imageName)).getDownloadURL().then( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            // console.log(url, \"url\");\n                            if (folder === \"profileImage\") {\n                              console.log(url);\n                              setFiles(url);\n                            }\n\n                          case 1:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x3) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleSave(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClick = function handleClick(e) {\n    document.getElementById(\"profileImage\").click();\n  };\n\n  var Cancel = function Cancel() {\n    formik.handleReset({});\n  };\n\n  var Employee = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return setState(_objectSpread(_objectSpread({}, formik.values), {}, {\n                profileImage: files\n              }));\n\n            case 2:\n              _context3.next = 4;\n              return props.onActive(\"Reporting\");\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function Employee() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var uploadedImage = React.useRef(null);\n  var imageUploader = React.useRef(null);\n\n  var enableCreate = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return SetClientList(false);\n\n            case 2:\n              _context4.next = 4;\n              return SetClientCreate(true);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function enableCreate() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var MIN_TABLE_WIDTH = 100;\n  var MIN_TABLE_HEIGHT = 200;\n\n  var CancelClient = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              // if (formik.values.clientName = \"\" && formik.values.firstName != \"\" && formik.values.lastName != \"\")\n              formik.handleReset({});\n              _context5.next = 3;\n              return SetClientList(true);\n\n            case 3:\n              _context5.next = 5;\n              return SetClientCreate(false);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function CancelClient() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var handleChanges = function handleChanges(event) {\n    setValue(event);\n  };\n\n  var OfficeType = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var response, body, responce, _body, elementsIndex, newArray;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(passing === \"\")) {\n                _context6.next = 29;\n                break;\n              }\n\n              body = {\n                clientName: formik.values.clientName,\n                firstName: formik.values.firstName,\n                lastName: formik.values.lastName,\n                department: formik.values.department,\n                designation: formik.values.department,\n                mobileNumber: formik.values.mobileNumber,\n                emailId: formik.values.emailId,\n                address1: formik.values.address1,\n                address2: formik.values.address2,\n                country: value.country._id,\n                state: value.state._id,\n                city: value.city._id,\n                area: value._id,\n                pincode: value.pincode\n              }; // console.log(body);\n\n              _context6.prev = 2;\n              _context6.next = 5;\n              return createClientDetail(JSON.stringify(body));\n\n            case 5:\n              response = _context6.sent;\n              formik.handleReset({});\n              console.log(response, response.success);\n\n              if (!(response.success === true)) {\n                _context6.next = 19;\n                break;\n              }\n\n              console.log(response.Client);\n              setClients([].concat(_toConsumableArray(clientSchema), [response.Client]));\n              formik.values = {};\n              _context6.next = 14;\n              return SetClientList(true);\n\n            case 14:\n              _context6.next = 16;\n              return SetClientCreate(false);\n\n            case 16:\n              return _context6.abrupt(\"return\", 0);\n\n            case 19:\n              setError(response.error);\n              console.log(error);\n\n            case 21:\n              _context6.next = 27;\n              break;\n\n            case 23:\n              _context6.prev = 23;\n              _context6.t0 = _context6[\"catch\"](2);\n              console.log(_context6.t0, \"sssss\");\n              toast(\"\".concat(_context6.t0));\n\n            case 27:\n              _context6.next = 50;\n              break;\n\n            case 29:\n              _body = _objectSpread(_objectSpread({}, formik.values), {}, {\n                id: passing\n              });\n              _context6.prev = 30;\n              _context6.next = 33;\n              return updateClientDetail(formik.values.clientName, formik.values.firstName, formik.values.lastName, formik.values.department, formik.values.designation, formik.values.mobileNumber, formik.values.emailId, formik.values.address1, formik.values.address2, passing);\n\n            case 33:\n              responce = _context6.sent;\n              formik.handleReset({});\n\n              if (!(responce.success === true)) {\n                _context6.next = 45;\n                break;\n              }\n\n              // setBoard(response)\n              elementsIndex = clientSchema.findIndex(function (element) {\n                return element._id === passing;\n              });\n              newArray = _toConsumableArray(clientSchema);\n              newArray[elementsIndex] = responce.updateClientDetail;\n              console.log(newArray, \"ddddddd\");\n              setPosts(newArray);\n              _context6.next = 43;\n              return SetClientList(true);\n\n            case 43:\n              _context6.next = 45;\n              return SetClientCreate(false);\n\n            case 45:\n              _context6.next = 50;\n              break;\n\n            case 47:\n              _context6.prev = 47;\n              _context6.t1 = _context6[\"catch\"](30);\n              console.log(_context6.t1);\n\n            case 50:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[2, 23], [30, 47]]);\n    }));\n\n    return function OfficeType() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    function getAllArea() {\n      return _getAllArea.apply(this, arguments);\n    }\n\n    function _getAllArea() {\n      _getAllArea = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n        var response, array;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                _context7.next = 3;\n                return getAreaSchema();\n\n              case 3:\n                response = _context7.sent;\n                console.log(response, \"sdf\");\n\n                if (response) {\n                  if (response.Area) {\n                    array = [];\n                    response.Area.map(function (x) {\n                      x.value = x._id;\n                      x.label = \"\".concat(capitalize(x.state.stateName), \", \").concat(capitalize(x.city.cityName), \", \").concat(capitalize(x.areaName), \", \").concat(x.pincode);\n                      x.cityName = x.city.cityName;\n                      x.stateName = x.state.stateName;\n                      x.countryName = x.country.countryName;\n                      x.areaName = x.areaName;\n                      array.push(x);\n                    });\n                    console.log(array, \"area\");\n                    setArea(array);\n                  }\n                }\n\n                _context7.next = 11;\n                break;\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](0);\n                console.log(_context7.t0);\n\n              case 11:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, null, [[0, 8]]);\n      }));\n      return _getAllArea.apply(this, arguments);\n    }\n\n    getAllArea();\n  }, []);\n\n  var capitalize = function capitalize(x) {\n    var s = x.toLowerCase();\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  var dateConvert = function dateConvert(val) {\n    var data = new Date(val);\n    return \"\".concat(data.getDate(), \"/\").concat(data.getMonth(), \"/\").concat(data.getFullYear()); // console.log(`${data.getDate()}/${data.getMonth()}/${data.getFullYear()}`)\n  };\n\n  useEffect(function () {\n    function getAllClientDetails() {\n      return _getAllClientDetails.apply(this, arguments);\n    }\n\n    function _getAllClientDetails() {\n      _getAllClientDetails = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return getClientDetails();\n\n              case 3:\n                response = _context8.sent;\n                console.log(response, \"sdf\");\n\n                if (response) {\n                  console.log(response, 'Response');\n                  console.log(response.Client, '112233');\n                  setClients(response.Client); // x.allocatedAt = dateConvert(x.createdAt);\n                }\n\n                _context8.next = 11;\n                break;\n\n              case 8:\n                _context8.prev = 8;\n                _context8.t0 = _context8[\"catch\"](0);\n                console.log(_context8.t0);\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, null, [[0, 8]]);\n      }));\n      return _getAllClientDetails.apply(this, arguments);\n    }\n\n    getAllClientDetails();\n  }, [board]);\n\n  var EditClientDetails = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(data) {\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              formik.handleReset({});\n              console.log(data);\n              _context9.next = 4;\n              return SetClientList(false);\n\n            case 4:\n              _context9.next = 6;\n              return SetClientCreate(true);\n\n            case 6:\n              // formik.values.officeType = data.officeType._id;\n              formik.values.clientName = data.clientName;\n              formik.values.firstName = data.firstName;\n              formik.values.lastName = data.lastName;\n              formik.values.department = data.department;\n              formik.values.designation = data.designation;\n              formik.values.mobileNumber = data.mobileNumber;\n              formik.values.emailId = data.emailId;\n              formik.values.address1 = data.address1;\n              formik.values.address2 = data.address2; // formik.values.country = data.countryName;\n              // formik.values.state = data.stateName;\n              // formik.values.city = data.cityName;\n              // formik.values.area = data.areaName;\n              // formik.values.pincode = data.pincode;\n\n              value.countryName = data.country.countryName;\n              value.stateName = data.state.stateName;\n              value.cityName = data.city.cityName;\n              value.areaName = data.area.areaName;\n              value.pincode = data.pincode;\n              console.log(data.reportingToLocation, \"localocalocalocaloca\");\n              console.log(value, \"value\"); // console.log(data.reportingToLocation,\"reportingLocations\")\n\n              SetPassing(data._id);\n\n            case 23:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function EditClientDetails(_x4) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  var Delete = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(id) {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              body = formik.values;\n              _context10.prev = 1;\n              _context10.next = 4;\n              return deleteClientDetail(id);\n\n            case 4:\n              response = _context10.sent;\n\n              if (response.success === true) {\n                setBoard(response);\n              }\n\n              _context10.next = 11;\n              break;\n\n            case 8:\n              _context10.prev = 8;\n              _context10.t0 = _context10[\"catch\"](1);\n              console.log(_context10.t0);\n\n            case 11:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10, null, [[1, 8]]);\n    }));\n\n    return function Delete(_x5) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  var serial = 0;\n\n  var getSerial = function getSerial() {\n    return ++serial;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 5\n    }\n  }, ClientList && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: 'AddEmployee-card-container1',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: '1%',\n      paddingLeft: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    className: 'role-heading-6',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }\n  }, \"List of Client Details\")), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '15px',\n      paddingLeft: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    className: 'btn btn-info',\n    onClick: enableCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 15\n    }\n  }, \"+ Add\"))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: _defineProperty({\n      height: '300px',\n      overflow: 'scroll'\n    }, \"overflow\", 'hidden'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, function (_ref10) {\n    var width = _ref10.width,\n        height = _ref10.height;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(CRow, {\n      style: {\n        paddingTop: '3%',\n        paddingLeft: '3%',\n        width: 'max-content'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CCol, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(Table, {\n      headerStyle: {\n        textTransform: 'capitalize'\n      },\n      rowStyle: {\n        borderBottom: '1px solid lightgrey'\n      } // width={width}\n      ,\n      width: width < MIN_TABLE_WIDTH ? MIN_TABLE_WIDTH : width,\n      height: height > MIN_TABLE_HEIGHT ? MIN_TABLE_HEIGHT : height,\n      headerHeight: 50,\n      rowHeight: 50,\n      rowCount: clientSchema.length //    sort={_sort}\n      //    sortBy={sortBy}\n      ,\n      overscanColumnCount: 1,\n      overscanRowCount: 1 // noContentRenderer={_noContentRenderer}\n      //    sortDirection={sortDirection}\n      ,\n      rowGetter: function rowGetter(_ref11) {\n        var index = _ref11.index;\n        return clientSchema[index];\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      label: 'S.NO',\n      width: width,\n      disableSort: true,\n      dataKey: 'serial',\n      cellDataGetter: function cellDataGetter() {\n        return getSerial();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'clientName',\n      label: 'Client Name',\n      width: width,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'createdAt',\n      label: 'Created By',\n      width: width,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'updatedAt',\n      label: 'Created On',\n      width: width,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: 'id',\n      label: 'Actions',\n      cellRenderer: function cellRenderer(row) {\n        return /*#__PURE__*/React.createElement(CRow, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(CCol, {\n          style: {\n            fontSize: \"1.15rem\"\n          },\n          md: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          style: {\n            marginRight: \"5px\",\n            color: \"#3480e2\"\n          },\n          onClick: function onClick() {\n            return EditClientDetails(row.rowData);\n          },\n          class: \"fas fa-edit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 34\n          }\n        }), /*#__PURE__*/React.createElement(\"i\", {\n          style: {\n            marginLeft: \"5px\",\n            color: \"#e85654\"\n          },\n          onClick: function onClick() {\n            return Delete(row.rowData._id);\n          },\n          class: \"fas fa-trash\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 35\n          }\n        }))));\n      },\n      minWidth: '75px',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    })));\n  })))))), ClientCreate && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: \"AddEmployee-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: \"1%\",\n      paddingLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: \"addemployee-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 13\n    }\n  }, \"Add Client Detail\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      paddingLeft: \"20%\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"file\",\n    type: \"file\",\n    id: \"profileImage\",\n    accept: \"image/*\",\n    style: {\n      display: \"none\"\n    },\n    onChange: function onChange(e) {\n      handleSave(e.target.files[0], \"profileImage\"); // console.log(e.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: (_ref12 = {\n      height: \"100px\",\n      width: \"100px\",\n      background: \"url(35D7p)\"\n    }, _defineProperty(_ref12, \"background\", \"#C4C4C4\"), _defineProperty(_ref12, \"border\", \"1px dashed black\"), _ref12),\n    onClick: function onClick() {\n      return handleClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: files !== \"\" ? files : uploadedImage,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"acsolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, \" Logo\")), /*#__PURE__*/React.createElement(CForm, {\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"addemployee-form-container \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    lg: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 21\n    }\n  }, \"Client Name\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"clientName\",\n    onChange: formik.handleChange,\n    value: formik.values.clientName,\n    placeholder: \"Enter Client Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 21\n    }\n  }), formik.errors.clientName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.clientName) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CRow, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: \"addemployee-heading1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 19\n    }\n  }, \"Details of Super Admin\")), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: formik.handleChange,\n    value: formik.values.firstName,\n    placeholder: \"Enter First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 21\n    }\n  }), formik.errors.firstName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.firstName) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 578,\n      columnNumber: 21\n    }\n  }, \"Last Name \"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: formik.handleChange,\n    value: formik.values.lastName,\n    placeholder: \"Enter Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 21\n    }\n  }), formik.errors.lastName ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.lastName) : null)), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 21\n    }\n  }, \"Department\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"department\",\n    onChange: formik.handleChange,\n    value: formik.values.department,\n    placeholder: \"Enter Department\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 21\n    }\n  }), formik.errors.department ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.department) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 21\n    }\n  }, \"Designation \"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"designation\",\n    onChange: formik.handleChange,\n    value: formik.values.designation,\n    placeholder: \"Enter Designation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 612,\n      columnNumber: 21\n    }\n  }), formik.errors.designation ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.designation) : null)), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 21\n    }\n  }, \"Mobile Number\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"mobileNumber\",\n    onChange: formik.handleChange,\n    value: formik.values.mobileNumber,\n    placeholder: \"Enter Mobile Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 21\n    }\n  }), formik.errors.mobileNumber ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.mobileNumber) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 21\n    }\n  }, \"Email Id \"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"emailId\",\n    onChange: formik.handleChange,\n    value: formik.values.emailId,\n    placeholder: \"Enter Email Id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 21\n    }\n  }), formik.errors.emailId ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.emailId) : null)), /*#__PURE__*/React.createElement(CRow, {\n    style: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: \"addemployee-heading1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 19\n    }\n  }, \"Communication Address\")), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 21\n    }\n  }, \"Search Location\"), /*#__PURE__*/React.createElement(Select, {\n    type: \"text\",\n    placeholder: \"Country,State,City,Area\",\n    onChange: handleChanges,\n    options: areaSchema,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 21\n    }\n  }, \"Address1\"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"address1\",\n    onChange: formik.handleChange,\n    value: formik.values.address1,\n    placeholder: \"Enter Address1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 21\n    }\n  }), formik.errors.address1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 711,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.address1) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-label1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 21\n    }\n  }, \"Address2 \"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"address2\",\n    onChange: formik.handleChange,\n    value: formik.values.address2,\n    placeholder: \"Enter Address2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 21\n    }\n  }), formik.errors.address2 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.address2) : null)), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 21\n    }\n  }, \"Country \"), /*#__PURE__*/React.createElement(CInput, (_React$createElement = {\n    name: \"Country\",\n    value: value.countryName || \"\",\n    disabled: true\n  }, _defineProperty(_React$createElement, \"name\", \"Country\"), _defineProperty(_React$createElement, \"placeholder\", \"Country\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 735,\n    columnNumber: 21\n  }), _React$createElement))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 21\n    }\n  }, \"State \"), /*#__PURE__*/React.createElement(CInput, (_React$createElement2 = {\n    name: \"State\",\n    value: value.stateName || \"\",\n    disabled: true\n  }, _defineProperty(_React$createElement2, \"name\", \"State\"), _defineProperty(_React$createElement2, \"placeholder\", \"State\"), _defineProperty(_React$createElement2, \"__self\", this), _defineProperty(_React$createElement2, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 746,\n    columnNumber: 21\n  }), _React$createElement2)))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 21\n    }\n  }, \"City \"), /*#__PURE__*/React.createElement(CInput, (_React$createElement3 = {\n    name: \"city\",\n    value: value.cityName || \"\",\n    disabled: true\n  }, _defineProperty(_React$createElement3, \"name\", \"city\"), _defineProperty(_React$createElement3, \"placeholder\", \"city\"), _defineProperty(_React$createElement3, \"__self\", this), _defineProperty(_React$createElement3, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 759,\n    columnNumber: 21\n  }), _React$createElement3))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 21\n    }\n  }, \"Area \"), /*#__PURE__*/React.createElement(CInput, (_React$createElement4 = {\n    name: \"Area\",\n    value: value.areaName || \"\",\n    disabled: true\n  }, _defineProperty(_React$createElement4, \"name\", \"Area\"), _defineProperty(_React$createElement4, \"placeholder\", \"Area\"), _defineProperty(_React$createElement4, \"__self\", this), _defineProperty(_React$createElement4, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 770,\n    columnNumber: 21\n  }), _React$createElement4)))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 782,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 21\n    }\n  }, \"Pincode \"), /*#__PURE__*/React.createElement(CInput, (_React$createElement5 = {\n    name: \"Pincode\",\n    value: value.pincode || \"\",\n    disabled: true\n  }, _defineProperty(_React$createElement5, \"name\", \"Pincode\"), _defineProperty(_React$createElement5, \"placeholder\", \"Pincode\"), _defineProperty(_React$createElement5, \"__self\", this), _defineProperty(_React$createElement5, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 785,\n    columnNumber: 21\n  }), _React$createElement5)))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 794,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: \"pill\",\n    className: \"btn btn-info\",\n    onClick: OfficeType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 19\n    }\n  }, \"Save\")))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingLeft: \"86%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"adds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CButton // shape={\"pill\"}\n  , {\n    className: \"btn btn-pill btn-danger\",\n    onClick: CancelClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 19\n    }\n  }, \" \", \"Cancel\"))))))));\n}\n\nexport default ClientDetail;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/client/ClientDetail.jsx"],"names":["React","useState","useEffect","CRow","CCard","CCol","CButton","CForm","CSelect","cRadio","CFormGroup","CLabel","CInput","CFormText","CModal","CModalBody","CModalFooter","CModalHeader","CModalTitle","AutoSizer","Table","Column","SortDirection","InfiniteLoader","Formik","useFormik","yup","createClientDetail","getAreaSchema","updateClientDetail","getClientDetails","deleteClientDetail","ToastContainer","toast","storage","Select","ClientDetail","props","ClientList","SetClientList","ClientCreate","SetClientCreate","primary","setPrimary","files","setFiles","State","setState","error","setError","passing","SetPassing","areaSchema","setArea","value","setValue","clientSchema","setClients","posts","setPosts","board","setBoard","post","SNo","clientName","createdBy","createdOn","formik","initialValues","firstName","lastName","department","designation","mobileNumber","emailId","address1","address2","validationSchema","object","string","required","onSubmit","userInputData","console","log","data","push","values","handleSave","file","folder","bucketName","uploadFile","Date","imageName","getDate","getMonth","getFullYear","Math","floor","random","name","storageRef","ref","uploadImage","put","on","snapshot","err","getDownloadURL","then","url","handleClick","e","document","getElementById","click","Cancel","handleReset","Employee","profileImage","onActive","uploadedImage","useRef","imageUploader","enableCreate","MIN_TABLE_WIDTH","MIN_TABLE_HEIGHT","CancelClient","handleChanges","event","OfficeType","body","country","_id","state","city","area","pincode","JSON","stringify","response","success","Client","id","responce","elementsIndex","findIndex","element","newArray","getAllArea","Area","array","map","x","label","capitalize","stateName","cityName","areaName","countryName","s","toLowerCase","charAt","toUpperCase","slice","dateConvert","val","getAllClientDetails","EditClientDetails","reportingToLocation","Delete","serial","getSerial","paddingTop","paddingLeft","padding","height","overflow","width","textTransform","borderBottom","length","index","row","fontSize","marginRight","color","rowData","marginLeft","display","flexDirection","alignItems","justifyContent","target","background","position","handleChange","errors"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  CRow, CCard, CCol, CButton, CForm, CSelect, cRadio, CFormGroup, CLabel, CInput, CFormText, CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from '@coreui/react'\nimport './ClientDetail.css'\nimport 'react-virtualized/styles.css';\nimport { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized'\nimport {\n  Formik,\n  useFormik,\n  // Formik\n} from 'formik'\nimport * as yup from 'yup'\nimport { createClientDetail, getAreaSchema, updateClientDetail, getClientDetails, deleteClientDetail } from '../../../services/ApiService'\nimport { ToastContainer, toast } from 'react-toastify';\nimport { storage } from \"../../../firebase\";\nimport Select from \"react-select\";\n// import { for } from 'core-js/fn/symbol';\nfunction ClientDetail(props) {\n  const [ClientList, SetClientList] = useState(true)\n  const [ClientCreate, SetClientCreate] = useState(false)\n  const [primary, setPrimary] = useState(\"\")\n  const [files, setFiles] = useState(\"\")\n  const [State, setState] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const [passing, SetPassing] = useState(\"\")\n  const [areaSchema, setArea] = useState([]);\n  const [value, setValue] = useState({});\n  const [clientSchema, setClients] = useState([]);\n  const [posts, setPosts] = useState([]);\n  const [board, setBoard] = useState(\"\");\n  const post = [{\n    SNo: '1',\n    clientName: 'SBI Bank',\n    createdBy: '15/11/2020',\n    createdOn: '15/11/2020'\n\n\n  }]\n\n  const formik = useFormik({\n    initialValues: {\n      clientName: '',\n      firstName: '',\n      lastName: '',\n      department: '',\n      designation: '',\n      mobileNumber: '',\n      emailId: '',\n      address1: '',\n      address2: '',\n    },\n    validationSchema: yup.object({\n      clientName: yup.string()\n        .required(\" clientName is Required\"),\n      firstName: yup.string()\n        .required(\" firstName is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      lastName: yup.string()\n        .required(\"lastName is Required\"),\n      department: yup.string()\n        .required(\"department To is Required\"),\n      designation: yup.string()\n        .required(\"designation is Required\"),\n      mobileNumber: yup.string()\n        .required(\"mobileNumber is Required\"),\n      emailId: yup.string()\n        .required(\"emailId is Required\"),\n      address1: yup.string()\n        .required(\"address1 is Required\"),\n      address2: yup.string()\n        .required(\"address2 is Required\"),\n\n    }),\n    onSubmit: (userInputData) => {\n      console.log(userInputData)\n      let data = posts;\n      data.push({\n        clientName: formik.values.clientName\n      });\n      if (data) {\n        setPosts(data);\n        // setState({ ...state, education: data })\n      }\n\n    }\n  })\n  const handleSave = async (file, folder) => {\n    console.log(file, folder);\n    let bucketName = \"HRmoodule\";\n    let uploadFile = file;\n    var data = new Date();\n    let imageName = `${data.getDate()}-${data.getMonth() + 1\n      }-${data.getFullYear()}-${Math.floor(\n        Math.random() * Math.random() * Math.random() * 1000000\n      )}${uploadFile.name}`;\n    let storageRef = storage.ref(`${bucketName}/${imageName}`);\n    let uploadImage = storageRef.put(uploadFile);\n    uploadImage.on(\n      \"state_changed\",\n      (snapshot) => { },\n      (err) => {\n        console.log(err);\n      },\n      () => {\n        storage\n          .ref(`${bucketName}/${imageName}`)\n          .getDownloadURL()\n          .then(async (url) => {\n            // console.log(url, \"url\");\n            if (folder === \"profileImage\") {\n              console.log(url);\n              setFiles(url);\n            }\n          });\n      }\n    );\n  };\n\n  const handleClick = (e) => {\n    document.getElementById(\"profileImage\").click();\n  };\n  const Cancel = () => {\n    formik.handleReset({});\n  };\n\n  const Employee = async () => {\n    await setState({ ...formik.values, profileImage: files });\n    // formik.handleReset({});\n    // window.location.pathname = ('/tabslist#Address')\n    await props.onActive(\"Reporting\");\n  };\n\n  const uploadedImage = React.useRef(null);\n  const imageUploader = React.useRef(null);\n\n  const enableCreate = async () => {\n    await SetClientList(false)\n    await SetClientCreate(true)\n  }\n  const MIN_TABLE_WIDTH = 100;\n  const MIN_TABLE_HEIGHT = 200;\n\n  const CancelClient = async () => {\n    // if (formik.values.clientName = \"\" && formik.values.firstName != \"\" && formik.values.lastName != \"\")\n    formik.handleReset({});\n    await SetClientList(true)\n    await SetClientCreate(false)\n  }\n  const handleChanges = (event) => {\n    setValue(event);\n\n  };\n  const OfficeType = async () => {\n    if (passing === \"\") {\n      var response;\n      let body = {\n        clientName: formik.values.clientName,\n        firstName: formik.values.firstName,\n        lastName: formik.values.lastName,\n        department: formik.values.department,\n        designation: formik.values.department,\n        mobileNumber: formik.values.mobileNumber,\n        emailId: formik.values.emailId,\n        address1: formik.values.address1,\n        address2: formik.values.address2,\n        country: value.country._id,\n        state: value.state._id,\n        city: value.city._id,\n        area: value._id,\n        pincode: value.pincode,\n      };\n\n      // console.log(body);\n      try {\n        response = await createClientDetail(JSON.stringify(body));\n        formik.handleReset({});\n        console.log(response, response.success);\n        if (response.success === true) {\n\n          console.log(response.Client);\n          setClients([...clientSchema, response.Client]);\n          formik.values = {}\n          await SetClientList(true)\n          await SetClientCreate(false)\n          // Cancel();\n          return 0;\n        } else {\n          setError(response.error);\n          console.log(error);\n        }\n        // showErrorPopUp();\n        // toast(response.error);\n      } catch (e) {\n        console.log(e, \"sssss\");\n        toast(`${e}`);\n      }\n    }\n    else {\n      var responce;\n      let body = { ...formik.values, id: passing };\n      try {\n        responce = await updateClientDetail(formik.values.clientName, formik.values.firstName, formik.values.lastName, formik.values.department,\n          formik.values.designation, formik.values.mobileNumber, formik.values.emailId, formik.values.address1, formik.values.address2, passing);\n          formik.handleReset({});\n          if (responce.success === true) {\n          // setBoard(response)\n          const elementsIndex = clientSchema.findIndex(\n            (element) => element._id === passing\n          );\n          let newArray = [...clientSchema];\n          newArray[elementsIndex] = responce.updateClientDetail;\n          console.log(newArray, \"ddddddd\");\n          setPosts(newArray);\n          await SetClientList(true)\n          await SetClientCreate(false)\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n  useEffect(() => {\n    async function getAllArea() {\n      var response;\n      // let body = formik.values\n      try {\n        response = await getAreaSchema();\n        console.log(response, \"sdf\");\n        if (response) {\n          if (response.Area) {\n            let array = [];\n            response.Area.map((x) => {\n              x.value = x._id;\n              x.label = `${capitalize(x.state.stateName)}, ${capitalize(\n                x.city.cityName\n              )}, ${capitalize(x.areaName)}, ${x.pincode}`;\n              x.cityName = x.city.cityName;\n              x.stateName = x.state.stateName;\n              x.countryName = x.country.countryName;\n              x.areaName = x.areaName;\n              array.push(x);\n            });\n            console.log(array, \"area\");\n            setArea(array);\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    getAllArea();\n  }, []);\n\n  const capitalize = (x) => {\n    let s = x.toLowerCase();\n    if (typeof s !== \"string\") return \"\";\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  const dateConvert = (val) => {\n    var data = new Date(val);\n    return `${data.getDate()}/${data.getMonth()}/${data.getFullYear()}`;\n    // console.log(`${data.getDate()}/${data.getMonth()}/${data.getFullYear()}`)\n  };\n\n  useEffect(() => {\n\n    async function getAllClientDetails() {\n      var response\n      // let body = formik.values\n      try {\n        response = await getClientDetails()\n        console.log(response, \"sdf\");\n        if (response) {\n\n          console.log(response, 'Response');\n\n          console.log(response.Client, '112233');\n          setClients(response.Client)\n          // x.allocatedAt = dateConvert(x.createdAt);\n\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    getAllClientDetails();\n  }, [board]);\n\n  const EditClientDetails = async (data) => {\n    formik.handleReset({});\n    console.log(data);\n    await SetClientList(false)\n    await SetClientCreate(true)\n    // formik.values.officeType = data.officeType._id;\n    formik.values.clientName = data.clientName;\n    formik.values.firstName = data.firstName;\n    formik.values.lastName = data.lastName;\n    formik.values.department = data.department;\n    formik.values.designation = data.designation;\n    formik.values.mobileNumber = data.mobileNumber;\n    formik.values.emailId = data.emailId;\n    formik.values.address1 = data.address1;\n    formik.values.address2 = data.address2;\n    // formik.values.country = data.countryName;\n    // formik.values.state = data.stateName;\n    // formik.values.city = data.cityName;\n    // formik.values.area = data.areaName;\n    // formik.values.pincode = data.pincode;\n    value.countryName = data.country.countryName;\n    value.stateName = data.state.stateName;\n    value.cityName = data.city.cityName;\n    value.areaName = data.area.areaName;\n    value.pincode = data.pincode;\n\n    console.log(data.reportingToLocation, \"localocalocalocaloca\");\n    console.log(value, \"value\");\n\n    // console.log(data.reportingToLocation,\"reportingLocations\")\n\n    SetPassing(data._id);\n  };\n  const Delete = async (id) => {\n    var response;\n    let body = formik.values;\n    try {\n      response = await deleteClientDetail(id);\n      if (response.success === true) {\n        setBoard(response);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  let serial = 0;\n  const getSerial = () => {\n    return ++serial;\n  }\n  return (\n    <div>\n      {ClientList && <div>\n        <CCard className={'AddEmployee-card-container1'}>\n          <CRow style={{ paddingTop: '1%', paddingLeft: '2%' }}>\n            <CCol md='10' className={'role-heading-6'}>\n              List of Client Details</CCol>\n          </CRow>\n\n          <CRow style={{ padding: '15px', paddingLeft: '3%' }}>\n\n            <CCol md='12' >\n              <CButton shape={'pill'} className={'btn btn-info'} onClick={enableCreate} >+ Add</CButton></CCol>\n          </CRow>\n\n          <CRow style={{ padding: '2%' }}>\n            <CCol>\n              <div style={{ height: '300px', overflow: 'scroll', overflow: 'hidden' }}>\n                <AutoSizer>\n                  {({ width, height }) => {\n                    return <React.Fragment>\n                      <CRow style={{ paddingTop: '3%', paddingLeft: '3%', width: 'max-content' }}>\n                        <CCol>\n                          <CRow>\n                            {/* <CCol>\n                                                            <CInput className={'box'} placeholder={'Filter Type of Office'} width={width}\n                                                              />\n                                                        </CCol>\n                                                        <CCol>\n                                                            <CInput className={'box'} placeholder={'Abbreviation'} width={width} />\n                                                        </CCol>\n                                                        <CCol >\n                                                            <CInput className={'box'} placeholder={'Code'} width={width} />\n                                                        </CCol>\n\n                                                        <CCol >\n                                                            <CInput className={'box'} placeholder={'Reporting To'} width={width} />\n                                                        </CCol> */}\n\n\n                          </CRow>\n                        </CCol>\n                      </CRow>\n                      <Table\n\n                        headerStyle={{ textTransform: 'capitalize' }}\n                        rowStyle={{ borderBottom: '1px solid lightgrey' }}\n                        // width={width}\n                        width={width < MIN_TABLE_WIDTH ? MIN_TABLE_WIDTH : width}\n                        height={height > MIN_TABLE_HEIGHT ? MIN_TABLE_HEIGHT : height\n                        }\n                        headerHeight={50}\n                        rowHeight={50}\n                        rowCount={clientSchema.length}\n                        //    sort={_sort}\n                        //    sortBy={sortBy}\n                        overscanColumnCount={1}\n                        overscanRowCount={1}\n                        // noContentRenderer={_noContentRenderer}\n                        //    sortDirection={sortDirection}\n                        rowGetter={({ index }) => clientSchema[index]}>\n                        <Column\n                          label={'S.NO'}\n                          width={width}\n                          disableSort\n                          dataKey={'serial'}\n                          cellDataGetter={() => getSerial()}\n                        />\n                        {/* <Column dataKey={'SNo'} label={'S.NO'} width={width} /> */}\n                        <Column dataKey={'clientName'} label={'Client Name'} width={width} />\n                        <Column dataKey={'createdAt'} label={'Created By'} width={width} />\n                        <Column dataKey={'updatedAt'} label={'Created On'} width={width} />\n                        {/* <Column dataKey={'code'} label={'Entered By'} width={width} />\n                        <Column dataKey={'reportingToName'} label={'Entered On'} width={width} /> */}\n\n\n                        <Column dataKey={'id'} label={'Actions'} cellRenderer={\n                          (row) => (\n                            <CRow>\n                              <div >\n                                <CCol style={{ fontSize: \"1.15rem\" }}\n                                  md=\"12\"\n                                ><i style={{\n                                  marginRight: \"5px\",\n                                  color: \"#3480e2\",\n                                }}\n                                  onClick={() =>\n                                    EditClientDetails(row.rowData)\n                                  }\n                                  class=\"fas fa-edit\"></i>\n                                  <i style={{\n                                    marginLeft: \"5px\",\n                                    color: \"#e85654\",\n                                  }}\n                                    onClick={() => Delete(row.rowData._id)}\n                                    class=\"fas fa-trash\"\n                                  ></i>\n                                </CCol>\n                              </div>\n                            </CRow>\n                          )\n                        }\n                          minWidth={'75px'} />\n                      </Table>\n                    </React.Fragment>\n                  }}\n                </AutoSizer>\n              </div></CCol>\n          </CRow>\n        </CCard>\n      </div>\n      }\n      {ClientCreate && <div>\n        <CCard className={\"AddEmployee-card-container\"}>\n          <CRow style={{ paddingTop: \"1%\", paddingLeft: \"2%\" }}>\n            <CCol md=\"12\" className={\"addemployee-heading\"}>\n              Add Client Detail\n            </CCol>\n          </CRow>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              paddingLeft: \"20%\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <CCol md=\"3\">\n              <input\n                name=\"file\"\n                type=\"file\"\n                id=\"profileImage\"\n                accept=\"image/*\"\n                style={{ display: \"none\" }}\n                onChange={(e) => {\n                  handleSave(e.target.files[0], \"profileImage\");\n                  // console.log(e.target.files[0]);\n                }}\n              />\n            </CCol>\n\n            <div\n              style={{\n                height: \"100px\",\n                width: \"100px\",\n                background: \"url(35D7p)\",\n                background: \"#C4C4C4\",\n\n                border: \"1px dashed black\",\n              }}\n              onClick={() => handleClick()}\n            >\n              <img\n                src={\n                  files !== \"\"\n                    ? files\n                    : uploadedImage\n                }\n                style={{\n                  width: \"100%\",\n                  height: \"100%\",\n                  position: \"acsolute\",\n                }}\n              />\n            </div>\n\n            <CLabel className={\"form-label1\"}> Logo</CLabel>\n          </div>\n\n          <CForm autoComplete=\"off\">\n            <CRow className={\"addemployee-form-container \"}>\n              <CCol md=\"12\" lg=\"12\" sm=\"12\">\n                <CRow className={\"seperator\"}>\n                  <CCol>\n                    <CLabel className={\"form-label1\"}>Client Name</CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"clientName\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.clientName}\n                      placeholder=\"Enter Client Name\"\n                    />\n                    {formik.errors.clientName ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.clientName}\n                      </div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    {/* <CLabel className={\"form-label1\"}>Last Name </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"lastName\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.lastName}\n                      placeholder=\"Enter Last Name\"\n                    />\n                    {formik.errors.lastName ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.lastName}\n                      </div>\n                    ) : null} */}\n                  </CCol>\n                </CRow>\n\n                <CRow style={{}}>\n                  <CCol md=\"12\" className={\"addemployee-heading1\"}>\n                    Details of Super Admin\n                         </CCol>\n                </CRow>\n\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-label1\"}>First Name</CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"firstName\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.firstName}\n                      placeholder=\"Enter First Name\"\n                    />\n                    {formik.errors.firstName ? (\n                      <div className=\"text-danger\"> {formik.errors.firstName}</div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-label1\"}>Last Name </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"lastName\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.lastName}\n                      placeholder=\"Enter Last Name\"\n                    />\n                    {formik.errors.lastName ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.lastName}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-label1\"}>Department</CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"department\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.department}\n                      placeholder=\"Enter Department\"\n                    />\n                    {formik.errors.department ? (\n                      <div className=\"text-danger\"> {formik.errors.department}</div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-label1\"}>Designation </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"designation\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.designation}\n                      placeholder=\"Enter Designation\"\n                    />\n                    {formik.errors.designation ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.designation}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-label1\"}>Mobile Number</CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"mobileNumber\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.mobileNumber}\n                      placeholder=\"Enter Mobile Number\"\n                    />\n                    {formik.errors.mobileNumber ? (\n                      <div className=\"text-danger\"> {formik.errors.mobileNumber}</div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-label1\"}>Email Id </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"emailId\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.emailId}\n                      placeholder=\"Enter Email Id\"\n                    />\n                    {formik.errors.emailId ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.emailId}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CRow>\n\n\n                <CRow style={{}}>\n                  <CCol md=\"12\" className={\"addemployee-heading1\"}>\n                    Communication Address\n                         </CCol>\n                </CRow>\n\n\n                <CRow className={\"seperator \"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-label1\"}>Search Location</CLabel>\n                    <Select\n                      type={\"text\"}\n                      placeholder=\"Country,State,City,Area\"\n                      onChange={handleChanges}\n                      options={areaSchema}\n                    />\n                  </CCol>\n\n                  <CCol>\n                    {/* <CLabel className={\"form-label1\"}>Last Name </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"bloodGroup\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.bloodGroup}\n                      placeholder=\"Enter Last Name\"\n                    />\n                    {formik.errors.bloodGroup ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.bloodGroup}\n                      </div>\n                    ) : null} */}\n                  </CCol>\n                </CRow>\n\n\n\n                <CRow className={\"seperator \"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-label1\"}>Address1</CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"address1\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.address1}\n                      placeholder=\"Enter Address1\"\n                    />\n                    {formik.errors.address1 ? (\n                      <div className=\"text-danger\"> {formik.errors.address1}</div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-label1\"}>Address2 </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"address2\"}\n                      onChange={formik.handleChange}\n                      value={formik.values.address2}\n                      placeholder=\"Enter Address2\"\n                    />\n                    {formik.errors.address2 ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.address2}\n                      </div>\n                    ) : null}\n                  </CCol>\n                </CRow>\n                <CRow className={\"seperator-6\"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>Country </CLabel>\n                    <CInput\n                      name={\"Country\"}\n                      value={value.countryName || \"\"}\n                      disabled\n                      name={\"Country\"}\n                      placeholder=\"Country\"\n                    />\n                  </CCol>\n\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>State </CLabel>\n                    <CInput\n                      name={\"State\"}\n                      value={value.stateName || \"\"}\n                      disabled\n                      name={\"State\"}\n                      placeholder=\"State\"\n                    />\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator-6\"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>City </CLabel>\n                    <CInput\n                      name={\"city\"}\n                      value={value.cityName || \"\"}\n                      disabled\n                      name={\"city\"}\n                      placeholder=\"city\"\n                    />\n                  </CCol>\n\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>Area </CLabel>\n                    <CInput\n                      name={\"Area\"}\n                      value={value.areaName || \"\"}\n                      disabled\n                      name={\"Area\"}\n                      placeholder=\"Area\"\n                    />\n                  </CCol>\n                </CRow>\n\n                {/* <CRow className={'seperator-6'}> */}\n\n                <CRow className={\"seperator-6\"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>Pincode </CLabel>\n                    <CInput\n                      name={\"Pincode\"}\n                      value={value.pincode || \"\"}\n                      disabled\n                      name={\"Pincode\"}\n                      placeholder=\"Pincode\"\n                    />\n                  </CCol>\n                </CRow>\n                <CCol md=\"10\"></CCol>\n              </CCol>\n            </CRow>\n\n            <CRow>\n              <div class=\"add\">\n                <CCol md=\"12\">\n                  <CButton\n                    shape={\"pill\"}\n                    className={\"btn btn-info\"}\n                    onClick={OfficeType}\n                  >\n                    Save\n                  </CButton>\n                </CCol>\n              </div>\n            </CRow>\n            <CRow style={{ paddingLeft: \"86%\" }}>\n              <div class=\"adds\">\n                <CCol md=\"12\">\n                  <CButton\n                    // shape={\"pill\"}\n                    className={\"btn btn-pill btn-danger\"}\n                    onClick={CancelClient}\n                  >\n                    {\" \"}\n                    Cancel\n                  </CButton>\n                </CCol>\n              </div>\n            </CRow>\n          </CForm>\n        </CCard>\n      </div>\n      }\n    </div>\n  )\n}\nexport default ClientDetail"]},"metadata":{},"sourceType":"module"}