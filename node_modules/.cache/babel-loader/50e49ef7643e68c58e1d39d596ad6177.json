{"ast":null,"code":"import _objectSpread from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/role/Role.jsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { AutoSizer, Table, Column } from \"react-virtualized\"; // import \"../suspend/node_modules/react-virtualized/styles.css\";\n\nimport { CRow, CCard, CCol, CButton, CForm, CLabel } from \"@coreui/react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./Role.css\";\nimport Select, { components } from \"react-select\";\nimport { getOfficeType, getByOfficeLocation, getRoleByDesignation, getOneRole, getAllRole } from \"../../../services/ApiService\";\nimport { EmployeeContext } from \"../../../services/EmployeeContext\";\n\nfunction Role(props) {\n  var _this = this;\n\n  var _useContext = useContext(EmployeeContext),\n      _useContext2 = _slicedToArray(_useContext, 2),\n      state = _useContext2[0],\n      setState = _useContext2[1];\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      updateValue = _useState2[0],\n      setUpdateValue = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      posts = _useState4[0],\n      setPost = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      department = _useState6[0],\n      setDepartment = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      location = _useState8[0],\n      setOfficeLocation = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      desigination = _useState10[0],\n      setdesigination = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      RoleList = _useState12[0],\n      setRoleList = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selected = _useState14[0],\n      setSelected = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selectedAdmin = _useState16[0],\n      setSelectedAdmin = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedFunction = _useState18[0],\n      setSelectedFunction = _useState18[1]; // console.log(state, );\n\n\n  var _noContentRenderer = function _noContentRenderer() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, \"No Office types.\");\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      typeOfOffice: \"\",\n      departmentRole: \"\",\n      locationRole: \"\",\n      designationRole: \"\",\n      reportingRole: \"\"\n    },\n    validationSchema: yup.object({\n      typeOfOffice: yup.string().required(\"Office Type Required\"),\n      departmentRole: yup.string().required(\"Department Required\"),\n      locationRole: yup.string().required(\"Office Location Required\"),\n      designationRole: yup.string().required(\"Designation Required\"),\n      reportingRole: yup.string().required(\"Role Required\")\n    }),\n    onSubmit: function onSubmit(userInputData) {\n      console.log(userInputData);\n    }\n  });\n  useEffect(function () {\n    function getAllOfficeType() {\n      return _getAllOfficeType.apply(this, arguments);\n    }\n\n    function _getAllOfficeType() {\n      _getAllOfficeType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, array;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return getOfficeType();\n\n              case 3:\n                response = _context.sent;\n\n                if (response) {\n                  if (response.OfficeTypes) {\n                    array = [];\n                    response.OfficeTypes.map(function (x) {\n                      x.value = x;\n                      x.label = x.officeType;\n                      array.push(x);\n                    });\n                    setPost(array); // console.log(array,\"array\");\n                  }\n                }\n\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }));\n      return _getAllOfficeType.apply(this, arguments);\n    }\n\n    getAllOfficeType();\n  }, []);\n\n  var getDesignations = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var responseP, array, newArray;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(id, \"value\");\n\n              if (state._id) {\n                updateValue.departmentRole = id;\n              } else {\n                formik.values.departmentRole = id;\n              }\n\n              formik.values.designationRole = \"\";\n              formik.values.reportingRole = \"\";\n              setdesigination([]);\n              setRoleList([]);\n              setSelected([]);\n              setSelectedAdmin([]);\n              setSelectedFunction([]);\n              _context2.prev = 9;\n              _context2.next = 12;\n              return getAllRole(\"department=\".concat(id._id));\n\n            case 12:\n              responseP = _context2.sent;\n              console.log(\"designation\", responseP);\n\n              if (responseP) {\n                if (responseP.data) {\n                  array = [];\n                  newArray = [];\n                  responseP.data.map(function (x) {\n                    x.designation.value = x.designation;\n                    x.designation.label = x.designation.name;\n\n                    if (!newArray.includes(x.designation._id)) {\n                      array.push(x.designation);\n                      newArray.push(x.designation._id);\n                    }\n\n                    return 0;\n                  });\n                  setdesigination(array);\n                }\n              }\n\n              _context2.next = 20;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t0 = _context2[\"catch\"](9);\n              console.log(_context2.t0);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[9, 17]]);\n    }));\n\n    return function getDesignations(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var getOfficeLocation = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      var responseO, arrayValue;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              console.log(id);\n              setOfficeLocation([]);\n              setDepartment([]);\n              setdesigination([]);\n              setSelectedFunction([]);\n              setSelectedAdmin([]);\n              setSelected([]);\n              setRoleList([]);\n\n              if (state._id) {\n                updateValue.typeOfOffice = id;\n                updateValue.locationRole = \"\";\n                updateValue.departmentRole = \"\";\n                updateValue.designationRole = \"\";\n                updateValue.reportingRole = \"\";\n              } else {\n                formik.values.typeOfOffice = id;\n                formik.values.locationRole = \"\";\n                formik.values.departmentRole = \"\";\n                formik.values.designationRole = \"\";\n                formik.values.reportingRole = \"\";\n              }\n\n              setOfficeLocation([]);\n              _context3.prev = 10;\n              _context3.next = 13;\n              return getByOfficeLocation(id._id);\n\n            case 13:\n              responseO = _context3.sent;\n\n              if (responseO) {\n                console.log(responseO.OfficeLocation, \"testing\");\n                arrayValue = [];\n                responseO.OfficeLocation.map(function (x) {\n                  x.officeLocationName = x.locationName;\n                  arrayValue.push({\n                    label: \"\".concat(x.state.stateName, \", \").concat(x.city.cityName, \", \").concat(x.area.areaName, \" - \").concat(x.pincode),\n                    value: x._id,\n                    locationName: x.locationName\n                  });\n                  return 0;\n                });\n                console.log(arrayValue);\n                setOfficeLocation(arrayValue);\n              }\n\n              _context3.next = 20;\n              break;\n\n            case 17:\n              _context3.prev = 17;\n              _context3.t0 = _context3[\"catch\"](10);\n              console.log(_context3.t0);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[10, 17]]);\n    }));\n\n    return function getOfficeLocation(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var getDepartment = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n      var Departments, array, newArray;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              console.log(id, \"value\");\n\n              if (state._id) {\n                updateValue.locationRole = id;\n              } else {\n                formik.values.locationRole = id;\n              }\n\n              setdesigination([]);\n              setSelectedFunction([]);\n              setSelectedAdmin([]);\n              setSelected([]);\n              setRoleList([]);\n              formik.values.departmentRole = \"\";\n              formik.values.designationRole = \"\";\n              formik.values.reportingRole = \"\";\n              setDepartment([]);\n              _context4.prev = 11;\n              _context4.next = 14;\n              return getAllRole(\"officeLocation=\".concat(id.value));\n\n            case 14:\n              Departments = _context4.sent;\n\n              if (Departments) {\n                if (Departments.data) {\n                  array = [];\n                  newArray = [];\n                  Departments.data.map(function (x) {\n                    x.department.value = x.department;\n                    x.department.label = x.department.name;\n\n                    if (!newArray.includes(x.department._id)) {\n                      array.push(x.department);\n                      newArray.push(x.department._id);\n                    }\n\n                    return 0;\n                  });\n                  setDepartment(array);\n                }\n              }\n\n              _context4.next = 21;\n              break;\n\n            case 18:\n              _context4.prev = 18;\n              _context4.t0 = _context4[\"catch\"](11);\n              console.log(_context4.t0);\n\n            case 21:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[11, 18]]);\n    }));\n\n    return function getDepartment(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getRoles = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n      var query, roleData, array;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (state._id) {\n                setUpdateValue(_objectSpread(_objectSpread({}, updateValue), {}, {\n                  designationRole: id\n                }));\n                query = \"designation=\".concat(id._id, \"&department=\").concat(updateValue.departmentRole._id, \"&officeLocation=\").concat(updateValue.locationRole.value, \"&typeOfOffice=\").concat(updateValue.typeOfOffice._id);\n              } else {\n                formik.values.designationRole = id;\n                formik.values.reportingRole = \"\";\n                query = \"designation=\".concat(id._id, \"&department=\").concat(formik.values.departmentRole._id, \"&officeLocation=\").concat(formik.values.locationRole.value, \"&typeOfOffice=\").concat(formik.values.typeOfOffice._id);\n              }\n\n              setSelectedFunction([]);\n              setSelectedAdmin([]);\n              setSelected([]);\n              _context5.prev = 4;\n              _context5.next = 7;\n              return getRoleByDesignation(query);\n\n            case 7:\n              roleData = _context5.sent;\n\n              if (roleData) {\n                if (roleData.data) {\n                  array = [];\n                  roleData.data.map(function (x) {\n                    x.value = x._id;\n                    x.label = x.roleName;\n                    array.push(x);\n                    return 0;\n                  });\n                  setRoleList(array);\n                }\n              }\n\n              _context5.next = 14;\n              break;\n\n            case 11:\n              _context5.prev = 11;\n              _context5.t0 = _context5[\"catch\"](4);\n              console.log(_context5.t0);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[4, 11]]);\n    }));\n\n    return function getRoles(_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  console.log(location, \"offices\");\n\n  var setRoleDatas = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(data) {\n      var oneRole;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              setSelectedAdmin([]);\n              setSelectedFunction([]);\n\n              if (state._id) {\n                updateValue.reportingRole = data;\n              } else {\n                formik.values.reportingRole = data;\n              }\n\n              setState(_objectSpread(_objectSpread({}, state), {}, {\n                employeeRole: data._id\n              }));\n              _context6.prev = 4;\n              _context6.next = 7;\n              return getOneRole(data._id);\n\n            case 7:\n              oneRole = _context6.sent;\n\n              if (oneRole) {\n                if (oneRole.data) {\n                  setSelected(oneRole.data);\n\n                  if (oneRole.data.administativeReporting) {\n                    setSelectedAdmin([oneRole.data.administativeReporting]);\n                  }\n\n                  if (oneRole.data.functionalReporting) {\n                    console.log(oneRole.data.functionalReporting, \"roleessssssssssssssssssss\");\n                    oneRole.data.functionalReporting.map(function (x) {\n                      x.typeOfOfficeName = x.typeOfOffice.officeType;\n                      x.departmentName = x.department.name;\n                      x.designationName = x.designation.name;\n                      x.roleName = x.role.roleName;\n                      x.officeLocationName = \"\".concat(x.officeLocation.state.stateName, \", \").concat(x.officeLocation.city.cityName, \", \").concat(x.officeLocation.area.areaName);\n                      return 0;\n                    });\n                    setSelectedFunction(oneRole.data.functionalReporting);\n                  }\n                }\n              }\n\n              _context6.next = 14;\n              break;\n\n            case 11:\n              _context6.prev = 11;\n              _context6.t0 = _context6[\"catch\"](4);\n              console.log(_context6.t0);\n\n            case 14:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[4, 11]]);\n    }));\n\n    return function setRoleDatas(_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    selectedAdmin.map(function (x) {\n      x.typeOfOfficeName = x.typeOfOffice.officeType;\n      x.departmentName = x.department.name;\n      x.designationName = x.designation.name;\n      x.roleName = x.role.roleName;\n      x.officeLocationName = \"\".concat(x.officeLocation.state.stateName, \", \").concat(x.officeLocation.city.cityName, \", \").concat(x.officeLocation.area.areaName); // console.log(x, \"  Test By Sridhar\");\n\n      return 0;\n    });\n\n    if (selectedFunction.length > 0) {\n      selectedFunction.map(function (x) {\n        // x.typeOfOfficeName = x.typeOfOffice.officeType;\n        console.log(x, \"let array = [];\");\n        return 0;\n      });\n    }\n  }, [selectedAdmin]);\n\n  var Employee = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              // let data = { ...state, employeeRole: formik.values.reportingRole._id };\n              // await setState(data);\n              // console.log(formik.values);\n              // await props.value(formik.values);\n              // console.log(state,formik.values,\"reporting\");\n              formik.handleReset(); // window.location.pathname = ('/tabslist#Address')\n\n              _context7.next = 3;\n              return props.onActive(\"FamilyDetails\");\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function Employee() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var isEnabled = formik.values.typeOfOffice && formik.values.departmentRole && formik.values.designationRole && formik.values.locationRole && formik.values.reportingRole;\n  var editIsEnable = updateValue.typeOfOffice && updateValue.departmentRole && updateValue.designationRole && updateValue.locationRole && updateValue.reportingRole;\n  useEffect(function () {\n    if (state._id) {\n      if (state.employeeRole) {\n        if (state.employeeRole._id) {\n          getOfficeLocation({\n            _id: state.employeeRole.typeOfOffice._id\n          });\n          setUpdateValue(_objectSpread(_objectSpread({}, updateValue), {}, {\n            typeOfOffice: _objectSpread(_objectSpread({}, state.employeeRole.typeOfOffice), {}, {\n              value: state.employeeRole.typeOfOffice,\n              label: state.employeeRole.typeOfOffice.officeType\n            }),\n            locationRole: _objectSpread(_objectSpread({}, state.employeeRole.officeLocation), {}, {\n              value: state.employeeRole.officeLocation._id,\n              label: \"\".concat(state.employeeRole.officeLocation.state.stateName, \", \").concat(state.employeeRole.officeLocation.city.cityName, \", \").concat(state.employeeRole.officeLocation.area.areaName, \" - \").concat(state.employeeRole.officeLocation.area.pincode)\n            }),\n            departmentRole: _objectSpread(_objectSpread({}, state.employeeRole.department), {}, {\n              value: state.employeeRole.department,\n              label: state.employeeRole.department.name\n            }),\n            designationRole: _objectSpread(_objectSpread({}, state.employeeRole.designation), {}, {\n              value: state.employeeRole.designation,\n              label: state.employeeRole.designation.name\n            }),\n            reportingRole: _objectSpread(_objectSpread({}, state.employeeRole), {}, {\n              label: state.employeeRole.roleName,\n              value: state.employeeRole._id\n            })\n          }));\n        }\n      }\n    }\n  }, []);\n\n  var Option = function Option(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(components.Option, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginBottom: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }\n    }, props.data.locationName), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginBottom: '0px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }\n    }, props.data.label)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: \"reporting-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"10px\",\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: \"reporting-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }\n  }, \"Party Member Role\")), /*#__PURE__*/React.createElement(CForm, {\n    autoComplete: \"off\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"10px\",\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    style: {\n      padding: \"10px\",\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    md: \"4\",\n    className: \"seperator-report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 21\n    }\n  }, \"Type of Office\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 21\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Office\",\n    value: updateValue.typeOfOffice ? updateValue.typeOfOffice : formik.values.typeOfOffice,\n    options: posts,\n    onChange: function onChange(e) {\n      getOfficeLocation(e);\n      console.log(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 21\n    }\n  }, \"Office Location\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Location\",\n    value: updateValue.locationRole ? updateValue.locationRole : formik.values.locationRole,\n    options: location,\n    components: {\n      Option: Option\n    },\n    onChange: function onChange(e) {\n      getDepartment(e);\n      console.log(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    md: \"5\",\n    className: \"seperator-report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 21\n    }\n  }, \"Department\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 21\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Department\",\n    value: updateValue.departmentRole ? updateValue.departmentRole : formik.values.departmentRole,\n    options: department,\n    onChange: function onChange(e) {\n      getDesignations(e);\n      console.log(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 21\n    }\n  }, \"Designation\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 21\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Designation\",\n    value: updateValue.designationRole ? updateValue.designationRole : formik.values.designationRole,\n    options: desigination,\n    onChange: function onChange(e) {\n      getRoles(e);\n      console.log(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator-report\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 21\n    }\n  }, \"Role\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 21\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Select Role\",\n    value: updateValue.reportingRole ? updateValue.reportingRole : formik.values.reportingRole,\n    options: RoleList,\n    onChange: function onChange(e) {\n      setRoleDatas(e);\n      console.log(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 17\n    }\n  })))), selectedAdmin.length !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      paddingTop: \"-17%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: \"2%\",\n      paddingLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: \"reporting-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 19\n    }\n  }, \"Administrative Reporting\", \" \")), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 23\n    }\n  }, function (_ref7) {\n    var width = _ref7.width,\n        height = _ref7.height;\n    return /*#__PURE__*/React.createElement(Table, {\n      headerStyle: {\n        textTransform: \"capitalize\"\n      },\n      rowStyle: {\n        borderBottom: \"1px solid lightgrey\"\n      },\n      width: width,\n      height: height,\n      headerHeight: 50,\n      rowHeight: 50,\n      rowCount: selectedAdmin.length //    sort={_sort}\n      //    sortBy={sortBy}\n      ,\n      overscanColumnCount: 1,\n      overscanRowCount: 1,\n      noContentRenderer: _noContentRenderer //    sortDirection={sortDirection}\n      ,\n      rowGetter: function rowGetter(_ref8) {\n        var index = _ref8.index;\n        return selectedAdmin[index];\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"typeOfOfficeName\",\n      label: \"Type of Office\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"officeLocationName\",\n      label: \"Office Location\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"departmentName\",\n      label: \"Department\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"designationName\",\n      label: \"Designation\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"roleName\",\n      label: \"Role\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"_id\",\n      label: \"Actions\",\n      cellRenderer: function cellRenderer(row) {\n        return /*#__PURE__*/React.createElement(CRow, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(CCol, {\n          style: {\n            fontSize: \"1.15rem\"\n          },\n          md: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          style: {\n            marginRight: \"5px\",\n            color: \"#3480e2\"\n          },\n          onClick: function onClick() {\n            return row.rowData._id;\n          },\n          class: \"fas fa-edit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(\"i\", {\n          onClick: function onClick() {\n            return row.rowData._id;\n          },\n          style: {\n            marginLeft: \"5px\",\n            color: \"#e85654\"\n          },\n          class: \"fas fa-trash\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 41\n          }\n        }))));\n      },\n      width: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 31\n      }\n    }));\n  })))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"2%\",\n      paddingLeft: \"5%\",\n      paddingTop: \"0%\",\n      paddingRight: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"2%\",\n      paddingLeft: \"5%\",\n      paddingTop: \"0%\",\n      paddingRight: \"5%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 19\n    }\n  })))) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 11\n    }\n  }, selectedFunction.length !== 0 ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: \"2%\",\n      paddingLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: \"reporting-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 19\n    }\n  }, \"Functional Reporting\", \" \")), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 23\n    }\n  }, function (_ref9) {\n    var width = _ref9.width,\n        height = _ref9.height;\n    return /*#__PURE__*/React.createElement(Table, {\n      headerStyle: {\n        textTransform: \"capitalize\"\n      },\n      rowStyle: {\n        borderBottom: \"1px solid lightgrey\"\n      },\n      width: width,\n      height: height,\n      headerHeight: 50,\n      rowHeight: 50,\n      rowCount: selectedFunction.length //    sort={_sort}\n      //    sortBy={sortBy}\n      ,\n      overscanColumnCount: 1,\n      overscanRowCount: 1,\n      noContentRenderer: _noContentRenderer //    sortDirection={sortDirection}\n      ,\n      rowGetter: function rowGetter(_ref10) {\n        var index = _ref10.index;\n        return selectedFunction[index];\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"typeOfOfficeName\",\n      label: \"Type of Office\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"officeLocationName\",\n      label: \"Office Location\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"departmentName\",\n      label: \"Department\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"designationName\",\n      label: \"Designation\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"roleName\",\n      label: \"Role\",\n      width: 200,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      dataKey: \"_id\",\n      label: \"Actions\",\n      cellRenderer: function cellRenderer(row) {\n        return /*#__PURE__*/React.createElement(CRow, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 35\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(CCol, {\n          style: {\n            fontSize: \"1.15rem\"\n          },\n          md: \"12\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          style: {\n            marginRight: \"5px\",\n            color: \"#3480e2\"\n          },\n          onClick: function onClick() {\n            return row.rowData._id;\n          },\n          class: \"fas fa-edit\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 41\n          }\n        }), /*#__PURE__*/React.createElement(\"i\", {\n          onClick: function onClick() {\n            return row.rowData._id;\n          },\n          style: {\n            marginLeft: \"5px\",\n            color: \"#e85654\"\n          },\n          class: \"fas fa-trash\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 41\n          }\n        }))));\n      },\n      width: 100,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 31\n      }\n    }));\n  }))))) : null, /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: \"pill\",\n    className: \"saveBtn\",\n    disabled: !isEnabled === false && editIsEnable === false ? true : false,\n    onClick: Employee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 19\n    }\n  }, \"Next\")))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingLeft: \"85%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 770,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"adds\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: \"pill\",\n    className: \"cancelBtn\",\n    onClick: function onClick() {\n      props.onActive(\"AddEmployee\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 19\n    }\n  }, \" \", \"Back\"))))))));\n}\n\nexport default Role;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/role/Role.jsx"],"names":["React","useState","useContext","useEffect","AutoSizer","Table","Column","CRow","CCard","CCol","CButton","CForm","CLabel","useFormik","yup","Select","components","getOfficeType","getByOfficeLocation","getRoleByDesignation","getOneRole","getAllRole","EmployeeContext","Role","props","state","setState","updateValue","setUpdateValue","posts","setPost","department","setDepartment","location","setOfficeLocation","desigination","setdesigination","RoleList","setRoleList","selected","setSelected","selectedAdmin","setSelectedAdmin","selectedFunction","setSelectedFunction","_noContentRenderer","formik","initialValues","typeOfOffice","departmentRole","locationRole","designationRole","reportingRole","validationSchema","object","string","required","onSubmit","userInputData","console","log","getAllOfficeType","response","OfficeTypes","array","map","x","value","label","officeType","push","getDesignations","id","_id","values","responseP","data","newArray","designation","name","includes","getOfficeLocation","responseO","OfficeLocation","arrayValue","officeLocationName","locationName","stateName","city","cityName","area","areaName","pincode","getDepartment","Departments","getRoles","query","roleData","roleName","setRoleDatas","employeeRole","oneRole","administativeReporting","functionalReporting","typeOfOfficeName","departmentName","designationName","role","officeLocation","length","Employee","handleReset","onActive","isEnabled","editIsEnable","Option","display","marginBottom","padding","paddingLeft","paddingRight","handleSubmit","e","paddingTop","width","height","textTransform","borderBottom","index","row","fontSize","marginRight","color","rowData","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  AutoSizer,\n  Table,\n  Column,\n} from \"react-virtualized\";\n// import \"../suspend/node_modules/react-virtualized/styles.css\";\nimport {\n  CRow,\n  CCard,\n  CCol,\n  CButton,\n  CForm,\n  CLabel,\n} from \"@coreui/react\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./Role.css\";\nimport Select,{components}from \"react-select\";\nimport {\n  getOfficeType,\n  getByOfficeLocation,\n  getRoleByDesignation,\n  getOneRole,\n  getAllRole,\n} from \"../../../services/ApiService\";\nimport { EmployeeContext } from \"../../../services/EmployeeContext\";\nfunction Role(props) {\n  const [state, setState] = useContext(EmployeeContext);\n  const [updateValue, setUpdateValue] = useState({});\n\n  const [posts, setPost] = useState([]);\n  const [department, setDepartment] = useState([]);\n  const [location, setOfficeLocation] = useState([]);\n  const [desigination, setdesigination] = useState([]);\n\n  const [RoleList, setRoleList] = useState([]);\n  const [selected, setSelected] = useState({});\n  const [selectedAdmin, setSelectedAdmin] = useState([]);\n  const [selectedFunction, setSelectedFunction] = useState([]);\n\n  // console.log(state, );\n\n  const _noContentRenderer = () => {\n    return <div>No Office types.</div>;\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      typeOfOffice: \"\",\n      departmentRole: \"\",\n      locationRole: \"\",\n      designationRole: \"\",\n      reportingRole: \"\",\n    },\n    validationSchema: yup.object({\n      typeOfOffice: yup.string().required(\"Office Type Required\"),\n      departmentRole: yup.string().required(\"Department Required\"),\n      locationRole: yup.string().required(\"Office Location Required\"),\n      designationRole: yup.string().required(\"Designation Required\"),\n      reportingRole: yup.string().required(\"Role Required\"),\n    }),\n    onSubmit: (userInputData) => {\n      console.log(userInputData);\n    },\n  });\n\n  useEffect(() => {\n    async function getAllOfficeType() {\n      var response;\n      // let body = formik.values\n      try {\n        response = await getOfficeType();\n\n        if (response) {\n          if (response.OfficeTypes) {\n            let array = [];\n            response.OfficeTypes.map((x) => {\n              x.value = x;\n              x.label = x.officeType;\n              array.push(x);\n            });\n            setPost(array);\n            // console.log(array,\"array\");\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    getAllOfficeType();\n  }, []);\n\n  \n\n  const getDesignations = async (id) => {\n    console.log(id, \"value\");\n    if (state._id) {\n      updateValue.departmentRole = id;\n    } else {\n      formik.values.departmentRole = id;\n    }\n    formik.values.designationRole = \"\";\n    formik.values.reportingRole = \"\";\n    setdesigination([]);\n    setRoleList([]);\n    setSelected([]);\n    setSelectedAdmin([]);\n    setSelectedFunction([]);\n    var responseP;\n    try {\n      responseP = await getAllRole(`department=${id._id}`);\n      console.log(\"designation\", responseP);\n\n      if (responseP) {\n        if (responseP.data) {\n          let array = [];\n          let newArray = [];\n          responseP.data.map((x) => {\n            x.designation.value = x.designation;\n            x.designation.label = x.designation.name;\n            if (!newArray.includes(x.designation._id)) {\n              array.push(x.designation);\n              newArray.push(x.designation._id);\n            }\n            return 0;\n          });\n          setdesigination(array);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getOfficeLocation = async (id) => {\n    console.log(id);\n    setOfficeLocation([]);\n    setDepartment([]);\n    setdesigination([]);\n    setSelectedFunction([]);\n    setSelectedAdmin([]);\n    setSelected([]);\n    setRoleList([]);\n    if (state._id) {\n      updateValue.typeOfOffice = id;\n      updateValue.locationRole = \"\";\n      updateValue.departmentRole = \"\";\n      updateValue.designationRole = \"\";\n      updateValue.reportingRole = \"\";\n    } else {\n      formik.values.typeOfOffice = id;\n      formik.values.locationRole = \"\";\n      formik.values.departmentRole = \"\";\n      formik.values.designationRole = \"\";\n      formik.values.reportingRole = \"\";\n    }\n    setOfficeLocation([]);\n    try {\n      const responseO = await getByOfficeLocation(id._id);\n      if (responseO) {\n        console.log(responseO.OfficeLocation, \"testing\");\n        let arrayValue = [];\n        responseO.OfficeLocation.map((x) => {\n          x.officeLocationName = x.locationName;\n          arrayValue.push({\n            label: `${x.state.stateName}, ${x.city.cityName}, ${x.area.areaName} - ${x.pincode}`,\n            value: x._id,\n            locationName: x.locationName\n          });\n          return 0;\n        });\n        console.log(arrayValue);\n        setOfficeLocation(arrayValue);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getDepartment = async (id) => {\n    console.log(id, \"value\");\n    if (state._id) {\n      updateValue.locationRole = id;\n    } else {\n      formik.values.locationRole = id;\n    }\n    setdesigination([]);\n    setSelectedFunction([]);\n    setSelectedAdmin([]);\n    setSelected([]);\n    setRoleList([]);\n    formik.values.departmentRole = \"\";\n    formik.values.designationRole = \"\";\n    formik.values.reportingRole = \"\";\n    setDepartment([]);\n    try {\n      const Departments = await getAllRole(`officeLocation=${id.value}`);\n      if (Departments) {\n        if (Departments.data) {\n          let array = [];\n          let newArray = [];\n          Departments.data.map((x) => {\n            x.department.value = x.department;\n            x.department.label = x.department.name;\n            if (!newArray.includes(x.department._id)) {\n              array.push(x.department);\n              newArray.push(x.department._id);\n            }\n            return 0;\n          });\n          setDepartment(array);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const getRoles = async (id) => {\n    let query;\n    if (state._id) {\n      setUpdateValue({ ...updateValue, designationRole: id });\n      query = `designation=${id._id}&department=${updateValue.departmentRole._id}&officeLocation=${updateValue.locationRole.value}&typeOfOffice=${updateValue.typeOfOffice._id}`;\n    } else {\n      formik.values.designationRole = id;\n      formik.values.reportingRole = \"\";\n      query = `designation=${id._id}&department=${formik.values.departmentRole._id}&officeLocation=${formik.values.locationRole.value}&typeOfOffice=${formik.values.typeOfOffice._id}`;\n    }\n    setSelectedFunction([]);\n    setSelectedAdmin([]);\n    setSelected([]);\n    try {\n      const roleData = await getRoleByDesignation(query);\n      if (roleData) {\n        if (roleData.data) {\n          let array = [];\n          roleData.data.map((x) => {\n            x.value = x._id;\n            x.label = x.roleName;\n            array.push(x);\n            return 0;\n          });\n          setRoleList(array);\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  console.log(location, \"offices\");\n\n  const setRoleDatas = async (data) => {\n    setSelectedAdmin([]);\n    setSelectedFunction([]);\n    if (state._id) {\n      updateValue.reportingRole = data;\n    } else {\n      formik.values.reportingRole = data;\n    }\n    setState({ ...state, employeeRole: data._id });\n    try {\n      const oneRole = await getOneRole(data._id);\n      if (oneRole) {\n        if (oneRole.data) {\n          setSelected(oneRole.data);\n          if (oneRole.data.administativeReporting) {\n            setSelectedAdmin([oneRole.data.administativeReporting]);\n          }\n          if (oneRole.data.functionalReporting) {\n            console.log(\n              oneRole.data.functionalReporting,\n              \"roleessssssssssssssssssss\"\n            );\n            oneRole.data.functionalReporting.map((x) => {\n              x.typeOfOfficeName = x.typeOfOffice.officeType;\n              x.departmentName = x.department.name;\n              x.designationName = x.designation.name;\n              x.roleName = x.role.roleName;\n              x.officeLocationName = `${x.officeLocation.state.stateName}, ${x.officeLocation.city.cityName}, ${x.officeLocation.area.areaName}`;\n              return 0;\n            });\n            setSelectedFunction(oneRole.data.functionalReporting);\n          }\n        }\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    selectedAdmin.map((x) => {\n      x.typeOfOfficeName = x.typeOfOffice.officeType;\n      x.departmentName = x.department.name;\n      x.designationName = x.designation.name;\n      x.roleName = x.role.roleName;\n      x.officeLocationName = `${x.officeLocation.state.stateName}, ${x.officeLocation.city.cityName}, ${x.officeLocation.area.areaName}`;\n      // console.log(x, \"  Test By Sridhar\");\n      return 0;\n    });\n    if (selectedFunction.length > 0) {\n      selectedFunction.map((x) => {\n        // x.typeOfOfficeName = x.typeOfOffice.officeType;\n        console.log(x, \"let array = [];\");\n        return 0;\n      });\n    }\n  }, [selectedAdmin]);\n\n  const Employee = async () => {\n    // let data = { ...state, employeeRole: formik.values.reportingRole._id };\n    // await setState(data);\n    // console.log(formik.values);\n    // await props.value(formik.values);\n    // console.log(state,formik.values,\"reporting\");\n    formik.handleReset();\n    // window.location.pathname = ('/tabslist#Address')\n    await props.onActive(\"FamilyDetails\");\n  };\n\n  const isEnabled =\n    formik.values.typeOfOffice &&\n    formik.values.departmentRole &&\n    formik.values.designationRole &&\n    formik.values.locationRole &&\n    formik.values.reportingRole;\n\n  const editIsEnable =\n    updateValue.typeOfOffice &&\n    updateValue.departmentRole &&\n    updateValue.designationRole &&\n    updateValue.locationRole &&\n    updateValue.reportingRole;\n\n  useEffect(() => {\n    if (state._id) {\n      if (state.employeeRole) {\n        if (state.employeeRole._id) {\n          getOfficeLocation({ _id: state.employeeRole.typeOfOffice._id });\n          setUpdateValue({\n            ...updateValue,\n            typeOfOffice: {\n              ...state.employeeRole.typeOfOffice,\n              value: state.employeeRole.typeOfOffice,\n              label: state.employeeRole.typeOfOffice.officeType,\n            },\n            locationRole: {\n              ...state.employeeRole.officeLocation,\n              value: state.employeeRole.officeLocation._id,\n              label: `${state.employeeRole.officeLocation.state.stateName}, ${state.employeeRole.officeLocation.city.cityName}, ${state.employeeRole.officeLocation.area.areaName} - ${state.employeeRole.officeLocation.area.pincode}`,\n            },\n            departmentRole: {\n              ...state.employeeRole.department,\n              value: state.employeeRole.department,\n              label: state.employeeRole.department.name,\n            },\n            designationRole: {\n              ...state.employeeRole.designation,\n              value: state.employeeRole.designation,\n              label: state.employeeRole.designation.name,\n            },\n            reportingRole: {\n              ...state.employeeRole,\n              label: state.employeeRole.roleName,\n              value: state.employeeRole._id,\n            },\n          });\n        }\n      }\n    }\n  }, []);\n  const Option = props => {\n    return (\n      <div style={{ display: \"block\" }}>\n        <components.Option {...props} >\n        <p style={{marginBottom: '0px'}}>{props.data.locationName}</p>\n          <p style={{marginBottom: '0px'}}>{props.data.label}</p>\n        </components.Option>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <div style={{ padding: \"2%\" }}>\n        <CCard className={\"reporting-card-container\"}>\n          <CRow\n            style={{\n              padding: \"10px\",\n              paddingLeft: \"20px\",\n              paddingRight: \"20px\",\n            }}\n          >\n            <CCol md=\"12\" className={\"reporting-heading\"}>\n              Party Member Role\n            </CCol>\n          </CRow>\n\n          <CForm autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n            <CRow\n              style={{\n                padding: \"10px\",\n                paddingLeft: \"20px\",\n                paddingRight: \"20px\",\n              }}\n            >\n              <CCol\n                style={{\n                  padding: \"10px\",\n                  paddingLeft: \"20px\",\n                  paddingRight: \"20px\",\n                }}\n              >\n                <CRow md=\"4\" className={\"seperator-report\"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>Type of Office \n                    <span className={\"text-danger\"}> *</span></CLabel>\n                    <Select\n                      placeholder=\"Select Office\"\n                      value={\n                        updateValue.typeOfOffice\n                          ? updateValue.typeOfOffice\n                          : formik.values.typeOfOffice\n                      }\n                      options={posts}\n                      onChange={(e) => {\n                        getOfficeLocation(e);\n                        console.log(e);\n                      }}\n                    ></Select>\n                  </CCol>\n\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>\n                      Office Location \n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <Select\n                      placeholder=\"Select Location\"\n                      value={\n                        updateValue.locationRole\n                          ? updateValue.locationRole\n                          : formik.values.locationRole\n                      }\n                      options={location}\n                      components={{ Option }}\n                      onChange={(e) => {\n                        getDepartment(e);\n                        console.log(e);\n                      }}\n                    ></Select>\n                  </CCol>\n                </CRow>\n\n                <CRow md=\"5\" className={\"seperator-report\"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>Department \n                    <span className={\"text-danger\"}> *</span></CLabel>\n                    <Select\n                      placeholder=\"Select Department\"\n                      value={\n                        updateValue.departmentRole\n                          ? updateValue.departmentRole\n                          : formik.values.departmentRole\n                      }\n                      options={department}\n                      onChange={(e) => {\n                        getDesignations(e);\n                        console.log(e);\n                      }}\n                    ></Select>\n                  </CCol>\n\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>Designation \n                    <span className={\"text-danger\"}> *</span></CLabel>\n                    <Select\n                      placeholder=\"Select Designation\"\n                      value={\n                        updateValue.designationRole\n                          ? updateValue.designationRole\n                          : formik.values.designationRole\n                      }\n                      options={desigination}\n                      onChange={(e) => {\n                        getRoles(e);\n                        console.log(e);\n                      }}\n                    ></Select>\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator-report\"}>\n                  <CCol md=\"5\">\n                    <CLabel className={\"form-labels-6\"}>Role \n                    <span className={\"text-danger\"}> *</span></CLabel>\n                    <Select\n                      placeholder=\"Select Role\"\n                      value={\n                        updateValue.reportingRole\n                          ? updateValue.reportingRole\n                          : formik.values.reportingRole\n                      }\n                      options={RoleList}\n                      onChange={(e) => {\n                        setRoleDatas(e);\n                        console.log(e);\n                      }}\n                    ></Select>\n                  </CCol>\n                </CRow>\n\n                <CCol md=\"10\"></CCol>\n              </CCol>\n            </CRow>\n            {/* \n                        <CRow  >\n                            <div class=\"centerd-1\">\n                                <CCol md='12'><CButton shape={'pill'} className={'btnShadow blueColor-btn'} onClick={formik.handleSubmit}>+ Create</CButton></CCol>\n                            </div>\n                        </CRow> */}\n          </CForm>\n          {selectedAdmin.length !== 0 ? (\n            <div style={{ paddingTop: \"-17%\" }}>\n              <React.Fragment>\n                <CRow style={{ paddingTop: \"2%\", paddingLeft: \"2%\" }}>\n                  <CCol md=\"12\" className={\"reporting-heading\"}>\n                    Administrative Reporting{\" \"}\n                  </CCol>\n                </CRow>\n\n                <CRow style={{ padding: \"2%\" }}>\n                  <CCol md=\"12\">\n                    <div style={{ width: \"100%\", height: \"200px\" }}>\n                      <AutoSizer>\n                        {({ width, height }) => {\n                          return (\n                            <Table\n                              headerStyle={{ textTransform: \"capitalize\" }}\n                              rowStyle={{ borderBottom: \"1px solid lightgrey\" }}\n                              width={width}\n                              height={height}\n                              headerHeight={50}\n                              rowHeight={50}\n                              rowCount={selectedAdmin.length}\n                              //    sort={_sort}\n                              //    sortBy={sortBy}\n                              overscanColumnCount={1}\n                              overscanRowCount={1}\n                              noContentRenderer={_noContentRenderer}\n                              //    sortDirection={sortDirection}\n                              rowGetter={({ index }) => selectedAdmin[index]}\n                            >\n                              <Column\n                                dataKey={\"typeOfOfficeName\"}\n                                label={\"Type of Office\"}\n                                width={200}\n                              />\n                              <Column\n                                dataKey={\"officeLocationName\"}\n                                label={\"Office Location\"}\n                                width={200}\n                              />\n                              <Column\n                                dataKey={\"departmentName\"}\n                                label={\"Department\"}\n                                width={200}\n                              />\n\n                              <Column\n                                dataKey={\"designationName\"}\n                                label={\"Designation\"}\n                                width={200}\n                              />\n                              {/* <Column\n                          dataKey={\"office\"}\n                          label={\"Office Name\"}\n                          width={200}\n                        /> */}\n                              <Column\n                                dataKey={\"roleName\"}\n                                label={\"Role\"}\n                                width={200}\n                              />\n\n                              <Column\n                                dataKey={\"_id\"}\n                                label={\"Actions\"}\n                                cellRenderer={(row) => (\n                                  <CRow>\n                                    <div>\n                                      <CCol\n                                        style={{ fontSize: \"1.15rem\" }}\n                                        md=\"12\"\n                                      >\n                                        <i\n                                          style={{\n                                            marginRight: \"5px\",\n                                            color: \"#3480e2\",\n                                          }}\n                                          onClick={() => row.rowData._id}\n                                          class=\"fas fa-edit\"\n                                        ></i>\n                                        <i\n                                          onClick={() => row.rowData._id}\n                                          style={{\n                                            marginLeft: \"5px\",\n                                            color: \"#e85654\",\n                                          }}\n                                          class=\"fas fa-trash\"\n                                        ></i>\n                                      </CCol>\n                                    </div>\n                                  </CRow>\n                                )}\n                                width={100}\n                              />\n                            </Table>\n                          );\n                        }}\n                      </AutoSizer>\n                    </div>\n                  </CCol>\n                </CRow>\n                <CRow\n                  style={{\n                    padding: \"2%\",\n                    paddingLeft: \"5%\",\n                    paddingTop: \"0%\",\n                    paddingRight: \"5%\",\n                  }}\n                ></CRow>\n                <CRow\n                  style={{\n                    padding: \"2%\",\n                    paddingLeft: \"5%\",\n                    paddingTop: \"0%\",\n                    paddingRight: \"5%\",\n                  }}\n                >\n                  <CCol md=\"9\"></CCol>\n                  {/* {/ <CCol md='3'><CButton shape={'pill'} className={'btnShadow blueColor-btn'} onClick={enableCreate}>+ Create Reporting</CButton></CCol> /} */}\n                </CRow>\n              </React.Fragment>\n            </div>\n          ) : null}\n          <div>\n            {selectedFunction.length !== 0 ? (\n              <React.Fragment>\n                <CRow style={{ paddingTop: \"2%\", paddingLeft: \"2%\" }}>\n                  <CCol md=\"12\" className={\"reporting-heading\"}>\n                    Functional Reporting{\" \"}\n                  </CCol>\n                </CRow>\n                <CRow style={{ padding: \"2%\" }}>\n                  <CCol md=\"12\">\n                    <div style={{ width: \"100%\", height: \"200px\" }}>\n                      <AutoSizer>\n                        {({ width, height }) => {\n                          return (\n                            <Table\n                              headerStyle={{ textTransform: \"capitalize\" }}\n                              rowStyle={{ borderBottom: \"1px solid lightgrey\" }}\n                              width={width}\n                              height={height}\n                              headerHeight={50}\n                              rowHeight={50}\n                              rowCount={selectedFunction.length}\n                              //    sort={_sort}\n                              //    sortBy={sortBy}\n                              overscanColumnCount={1}\n                              overscanRowCount={1}\n                              noContentRenderer={_noContentRenderer}\n                              //    sortDirection={sortDirection}\n                              rowGetter={({ index }) => selectedFunction[index]}\n                            >\n                              <Column\n                                dataKey={\"typeOfOfficeName\"}\n                                label={\"Type of Office\"}\n                                width={200}\n                              />\n                              <Column\n                                dataKey={\"officeLocationName\"}\n                                label={\"Office Location\"}\n                                width={200}\n                              />\n                              <Column\n                                dataKey={\"departmentName\"}\n                                label={\"Department\"}\n                                width={200}\n                              />\n\n                              <Column\n                                dataKey={\"designationName\"}\n                                label={\"Designation\"}\n                                width={200}\n                              />\n                              {/* <Column\n                          dataKey={\"office\"}\n                          label={\"Office Name\"}\n                          width={200}\n                        /> */}\n                              <Column\n                                dataKey={\"roleName\"}\n                                label={\"Role\"}\n                                width={200}\n                              />\n\n                              <Column\n                                dataKey={\"_id\"}\n                                label={\"Actions\"}\n                                cellRenderer={(row) => (\n                                  <CRow>\n                                    <div>\n                                      <CCol\n                                        style={{ fontSize: \"1.15rem\" }}\n                                        md=\"12\"\n                                      >\n                                        <i\n                                          style={{\n                                            marginRight: \"5px\",\n                                            color: \"#3480e2\",\n                                          }}\n                                          onClick={() => row.rowData._id}\n                                          class=\"fas fa-edit\"\n                                        ></i>\n                                        <i\n                                          onClick={() => row.rowData._id}\n                                          style={{\n                                            marginLeft: \"5px\",\n                                            color: \"#e85654\",\n                                          }}\n                                          class=\"fas fa-trash\"\n                                        ></i>\n                                      </CCol>\n                                    </div>\n                                  </CRow>\n                                )}\n                                width={100}\n                              />\n                            </Table>\n                          );\n                        }}\n                      </AutoSizer>\n                    </div>\n                  </CCol>\n                </CRow>\n              </React.Fragment>\n            ) : null}\n            <CRow>\n              <div class=\"add\">\n                <CCol md=\"12\">\n                  <CButton\n                    shape={\"pill\"}\n                    className={\"saveBtn\"}\n                    disabled={\n                      !isEnabled === false && editIsEnable === false\n                        ? true\n                        : false\n                    }\n                    onClick={Employee}\n                  >\n                    Next\n                  </CButton>\n                </CCol>\n              </div>\n            </CRow>\n            <CRow style={{ paddingLeft: \"85%\" }}>\n              <div class=\"adds\">\n                <CCol md=\"12\">\n                  <CButton\n                    shape={\"pill\"}\n                    className={\"cancelBtn\"}\n                    onClick={() => {\n                      props.onActive(\"AddEmployee\");\n                    }}\n                  >\n                    {\" \"}\n                    Back\n                  </CButton>\n                </CCol>\n              </div>\n            </CRow>\n\n            \n          </div>\n        </CCard>\n      </div>\n    </div>\n  );\n}\n\nexport default Role;\n"]},"metadata":{},"sourceType":"module"}