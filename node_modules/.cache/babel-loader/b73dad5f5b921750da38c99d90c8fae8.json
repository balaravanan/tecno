{"ast":null,"code":"import _defineProperty from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/rolecopy/RoleCopy.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { AutoSizer, Table, Column } from \"react-virtualized\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\nimport MultiSelect from \"react-multi-select-component\";\nimport { CRow, CCard, CCol, CButton, CForm, CSelect, CLabel, CInput, CDataTable, CBadge, CCollapse, CCardBody } from \"@coreui/react\";\nimport Select, { components } from \"react-select\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Edits from \"../../images/image 2.svg\";\nimport Remove from \"../../images/image 15.svg\";\nimport \"./RoleCopy.css\";\nimport { departmentCreate, designationCreate, getAllRoleCopy, getAllDepartment, getAllRoleData, getDesignation, getOfficeLocation, getOfficeType, createRoleConfirm, getAllRole, getAllRoleLocation } from \"../../../services/ApiService\";\nimport { Label } from \"react-konva\";\nimport { setTimeout } from \"core-js\";\n\nfunction RoleCopy(props) {\n  var _this = this,\n      _React$createElement;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      officeLocation = _useState2[0],\n      setOfficeLocation = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      locationRole = _useState4[0],\n      setLocationRole = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      officeTypes = _useState6[0],\n      setOfficeTypes = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      officeType = _useState8[0],\n      setOfficeType = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      RoleList = _useState10[0],\n      setRoleList = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      final = _useState12[0],\n      setFinal = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      toLocation = _useState14[0],\n      setTolocation = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      selected = _useState16[0],\n      setSelected = _useState16[1];\n\n  var _useState17 = useState([]),\n      _useState18 = _slicedToArray(_useState17, 2),\n      roleCopy = _useState18[0],\n      setRoleCopy = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      to = _useState20[0],\n      setTo = _useState20[1];\n\n  var formik = useFormik({\n    initialValues: {\n      officetype: {},\n      departmentRole: \"\",\n      locationRole: {},\n      designationRole: \"\",\n      office: \"\",\n      roleName: \"\",\n      abbreviation: \"\",\n      code: \"\",\n      dccDescription: \"\",\n      dccID: \"\"\n    },\n    validationSchema: yup.object({\n      officetype: yup.string().required(\"Office Type Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      departmentRole: yup.string().required(\"Department Required\"),\n      locationRole: yup.string().required(\"Party Office Location Required\"),\n      designationRole: yup.string().required(\"Designation Required\"),\n      office: yup.string().required(\"Office Name Required\"),\n      roleName: yup.string().required(\"Role Name Required\"),\n      abbreviation: yup.string().required(\"Role Abbreviation required\"),\n      code: yup.string().required(\"Role Code is required\")\n    }),\n    onSubmit: function onSubmit(userInputData) {\n      console.log(userInputData);\n    }\n  });\n\n  var getOfficeLocations = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n      var query, responseO, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = \"officeType=\".concat(id);\n              _context.prev = 1;\n              _context.next = 4;\n              return getOfficeLocation(query);\n\n            case 4:\n              responseO = _context.sent;\n\n              if (responseO) {\n                if (responseO.OfficeLocation) {\n                  data = [];\n                  responseO.OfficeLocation.map(function (x) {\n                    x.officeLocationName = x.locationName;\n                    data.push(_objectSpread(_objectSpread({}, x), {}, {\n                      locationName: x.locationName,\n                      value: x._id,\n                      label: \"\".concat(x.address1, \", \").concat(x.address2, \", \").concat(x.area.areaName, \" - \").concat(x.pincode)\n                    }));\n                  });\n                  console.log(data);\n                  setOfficeLocation(data);\n                }\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function getOfficeLocations(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    function getAllOfficeLocation() {\n      return _getAllOfficeLocation.apply(this, arguments);\n    }\n\n    function _getAllOfficeLocation() {\n      _getAllOfficeLocation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var responseT;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return getOfficeType();\n\n              case 3:\n                responseT = _context2.sent;\n\n                if (responseT) {\n                  responseT.OfficeTypes.map(function (x) {\n                    x.value = x._id;\n                    x.label = x.officeType;\n                  });\n                  setOfficeType(responseT.OfficeTypes);\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 7]]);\n      }));\n      return _getAllOfficeLocation.apply(this, arguments);\n    }\n\n    getAllOfficeLocation();\n  }, []);\n\n  var handleOfficeType = function handleOfficeType(y) {\n    setOfficeTypes(y);\n    getOfficeLocations(y._id);\n  };\n\n  var getToLocation = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(val) {\n      var ids, roleResponse, data;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(selected.length !== 0)) {\n                _context3.next = 15;\n                break;\n              }\n\n              ids = [];\n              selected.map(function (x) {\n                if (!ids.includes(x._id)) {\n                  ids.push(x._id);\n                }\n              });\n              _context3.prev = 3;\n              _context3.next = 6;\n              return getAllRoleLocation(ids, officeTypes);\n\n            case 6:\n              roleResponse = _context3.sent;\n\n              if (roleResponse) {\n                if (roleResponse.data) {\n                  data = [];\n                  roleResponse.data.map(function (y) {\n                    data.push(_objectSpread(_objectSpread({}, y), {}, {\n                      value: y._id,\n                      label: \"\".concat(y.address1, \", \").concat(y.address2, \", \").concat(y.area.areaName, \" - \").concat(y.pincode)\n                    }));\n                  });\n                  setTolocation(data);\n                }\n              }\n\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.log(_context3.t0);\n\n            case 13:\n              _context3.next = 16;\n              break;\n\n            case 15:\n              console.log(\"object\");\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[3, 10]]);\n    }));\n\n    return function getToLocation(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _noContentRenderer = function _noContentRenderer() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 16\n      }\n    }, \"No Office types.\");\n  };\n\n  var getRoles = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id) {\n      var roleResponse;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setLocationRole(id);\n              _context4.prev = 1;\n              _context4.next = 4;\n              return getAllRoleData(id._id);\n\n            case 4:\n              roleResponse = _context4.sent;\n\n              if (roleResponse) {\n                console.log(roleResponse.data, \"datadatadatadatadatadatadatadata\");\n                roleResponse.data.map(function (x) {\n                  x.value = x._id;\n                  x.label = \"\".concat(x.department.name, \",\").concat(x.designation.name, \",\").concat(x.roleName); // x.typeOfOfficeName=`${x.typeOfOffice.officeType}`\n\n                  x.typeOfOfficeName = x.typeOfOffice.officeType; // return 0;\n                });\n                setRoleList(roleResponse.data);\n              }\n\n              _context4.next = 11;\n              break;\n\n            case 8:\n              _context4.prev = 8;\n              _context4.t0 = _context4[\"catch\"](1);\n              console.log(_context4.t0);\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[1, 8]]);\n    }));\n\n    return function getRoles(_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // useEffect(() => {\n  //     getRoleCopy();\n  // }, []);\n  // const getRoleCopy = async (id) => {\n  //     var roleResponse\n  //     try {\n  //         roleResponse = await getAllRoleData(id);\n  //         if (roleResponse) {\n  //             if (roleResponse.data) {\n  //                 roleResponse.data.map((x) => {\n  //                     x.value = x._id;\n  //                     x.label = `${x.typeOfOffice.officeType}, ${x.officeLocation.state.stateName}, ${x.officeLocation.city.cityName}, ${x.officeLocation.area.areaName}, ${x.department.name}, ${x.designation.name}, ${x.roleName}`;\n  //                     x.typeOfOfficeName = x.typeOfOffice.officeType;\n  //                     x.locationName = x.officeLocation.area.areaName;\n  //                     x.departmentName = x.department.name;\n  //                     x.designationName = x.designation.name;\n  //                     x.role = x.roleName\n  //                     console.log(x);\n  //                     return 0;\n  //                 });\n  //             }\n  //             setRoleList(roleResponse.data);\n  //         }\n  //     } catch (e) {\n  //         console.log(e);\n  //     }\n  // };\n\n\n  var roleCancel = function roleCancel() {\n    formik.values.officetype = {};\n    setFinal([]);\n    setOfficeTypes(\"\");\n    setLocationRole(\"\");\n    setOfficeLocation([]);\n    setRoleList([]);\n    setTolocation([]);\n    setSelected([]);\n    setRoleCopy([]);\n    setTo([]);\n  };\n\n  var roleConfirm = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return createRoleConfirm(final);\n\n            case 3:\n              response = _context5.sent;\n\n              if (response) {\n                if (response.data) {\n                  formik.values.officetype = {};\n                  setFinal([]);\n                  setOfficeTypes(\"\");\n                  setLocationRole(\"\");\n                  setOfficeLocation([]);\n                  setRoleList([]);\n                  setTolocation([]);\n                  setSelected([]);\n                  setRoleCopy([]);\n                  setTo([]);\n                  toast.success(response.message);\n                  console.log(response.data, \"123456\");\n                } // if(response.success.false){}\n\n              }\n\n              _context5.next = 11;\n              break;\n\n            case 7:\n              _context5.prev = 7;\n              _context5.t0 = _context5[\"catch\"](0);\n              toast.error(\"\".concat(_context5.t0));\n              console.log(_context5.t0);\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[0, 7]]);\n    }));\n\n    return function roleConfirm() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var handleToLocation = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var val, arrays, dataArrays;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(to.length < 0)) {\n                _context6.next = 3;\n                break;\n              }\n\n              toast.warning(\"Please Select the role!\");\n              return _context6.abrupt(\"return\", 0);\n\n            case 3:\n              val = to;\n              arrays = [];\n              dataArrays = [];\n              val.map(function (z) {\n                var array = [];\n                var dataArray = [];\n                var datas = [];\n                selected.map(function (x) {\n                  delete x._id;\n                  array.push(_objectSpread(_objectSpread({}, x), {}, {\n                    officeLocation: z._id,\n                    dccId: \"\".concat(x.typeOfOffice.code).concat(z.country.code).concat(z.state.code).concat(z.city.code).concat(z.area.code).concat(x.department.code).concat(x.designation.code).concat(x.code),\n                    dccDescription: \"\".concat(x.typeOfOffice.abbreviation).concat(z.country.abbreviation).concat(z.state.abbreviation).concat(z.city.abbreviation).concat(z.area.abbreviation).concat(x.department.abbreviation).concat(x.designation.abbreviation).concat(x.abbreviation),\n                    typeOfOffice: x.typeOfOffice._id,\n                    department: x.department._id,\n                    designation: x.designation._id\n                  }));\n\n                  if (datas.includes(x._id)) {\n                    var index = dataArray.findIndex(function (y) {\n                      return y.Location === \"\".concat(z.area.areaName, \", \").concat(z.city.cityName);\n                    });\n                    dataArray[index] = _objectSpread(_objectSpread({}, dataArray[index]), {}, {\n                      NoofRolesCopied: dataArray[index].NoofRolesCopied + 1,\n                      value: [].concat(_toConsumableArray(dataArray[index].value), [{\n                        Designation: x.designation.name,\n                        Department: x.department.name,\n                        Role: x.roleName\n                      }])\n                    });\n                  } else {\n                    dataArray.push({\n                      Location: \"\".concat(z.area.areaName, \", \").concat(z.city.cityName),\n                      NoofRolesCopied: 1,\n                      value: [{\n                        Designation: x.designation.name,\n                        Department: x.department.name,\n                        Role: x.roleName\n                      }]\n                    });\n                  }\n\n                  datas.push(x._id);\n                });\n                array.map(function (x) {\n                  arrays.push(x);\n                });\n                dataArray.map(function (x) {\n                  dataArrays.push.apply(dataArrays, dataArray);\n                });\n              });\n              setRoleCopy(dataArrays);\n              setFinal(arrays);\n              toast.success(\"Role was copied!\");\n              console.log(to, arrays);\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function handleToLocation() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var MIN_TABLE_WIDTH = 1000;\n\n  var _useState21 = useState([]),\n      _useState22 = _slicedToArray(_useState21, 2),\n      _details = _useState22[0],\n      setDetails = _useState22[1]; // const [items, setItems] = useState(usersData)\n\n\n  var toggleDetails = function toggleDetails(index) {\n    var position = _details.indexOf(index);\n\n    var newDetails = _details.slice();\n\n    if (position !== -1) {\n      newDetails.splice(position, 1);\n    } else {\n      newDetails = [].concat(_toConsumableArray(_details), [index]);\n    }\n\n    setDetails(newDetails);\n  };\n\n  var fields = [{\n    key: 'Location',\n    label: 'Party Office Location',\n    _style: {\n      width: '40%'\n    }\n  }, {\n    key: 'NoofRolesCopied',\n    _style: {\n      width: '40%'\n    }\n  }, {\n    key: 'show_details',\n    label: '',\n    _style: {\n      width: '10%'\n    },\n    sorter: false,\n    filter: false\n  }];\n\n  var getBadge = function getBadge(status) {\n    switch (status) {\n      case 'Active':\n        return 'success';\n\n      case 'Inactive':\n        return 'secondary';\n\n      case 'Pending':\n        return 'warning';\n\n      case 'Banned':\n        return 'danger';\n\n      default:\n        return 'primary';\n    }\n  };\n\n  var cancel = function cancel() {\n    setLocationRole(\"\");\n    setOfficeLocation([]);\n    setRoleList([]);\n    setSelected(\"\");\n    setTo([]);\n    setTolocation(\"\");\n  };\n\n  var Option = function Option(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(components.Option, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, props.data.locationName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, props.data.label, \"aaaa\")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"4%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: \"Roless-card-container-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"10px\",\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    className: \"role-heading-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 25\n    }\n  }, \"Copy From\")), /*#__PURE__*/React.createElement(CForm, {\n    autoComplete: \"off\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"role-form-container-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    lg: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 41\n    }\n  }, \"Type of Party Office\"), /*#__PURE__*/React.createElement(Select, {\n    name: \"officetype\",\n    value: officeTypes,\n    onChange: handleOfficeType,\n    options: officeType,\n    placeholder: \"Select Office Type\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 41\n    }\n  }), formik.errors.officetype && formik.values.officetype === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 49\n    }\n  }, \" \", formik.errors.officetype) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 41\n    }\n  }, \"Party Office Location\", \" \"), /*#__PURE__*/React.createElement(Select, {\n    name: \"locationRole\",\n    value: locationRole,\n    options: officeLocation,\n    components: {\n      Option: Option\n    },\n    onChange: function onChange(e) {\n      return getRoles(e);\n    },\n    placeholder: \"Select Party Office Location...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 41\n    }\n  }), formik.errors.locationRole && formik.values.locationRole === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 49\n    }\n  }, \" \", formik.errors.locationRole) : null)), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 41\n    }\n  }, \"List of Roles\"), /*#__PURE__*/React.createElement(MultiSelect, (_React$createElement = {\n    type: \"checkbox\",\n    isMulti: true,\n    closeMenuOnSelect: false,\n    onChange: function onChange(e) {\n      return setSelected(e);\n    }\n  }, _defineProperty(_React$createElement, \"isMulti\", true), _defineProperty(_React$createElement, \"options\", RoleList), _defineProperty(_React$createElement, \"isChecked\", true), _defineProperty(_React$createElement, \"value\", selected), _defineProperty(_React$createElement, \"placeholder\", \"Select Role...\"), _defineProperty(_React$createElement, \"labelledBy\", \"Select\"), _defineProperty(_React$createElement, \"__self\", this), _defineProperty(_React$createElement, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 41\n  }), _React$createElement)), formik.errors.officetype && formik.values.officetype === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 49\n    }\n  }, \" \", formik.errors.officetype) : null), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: 'pill',\n    className: 'saveBtn',\n    onClick: function onClick() {\n      return getToLocation(selected);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 45\n    }\n  }, \"Next\")))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: \"10px\",\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    className: \"role-heading-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 29\n    }\n  }, \"Copy To\")), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator-1\",\n    style: {\n      paddingLeft: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 33\n    }\n  }, \"Copied To\", \" \"), /*#__PURE__*/React.createElement(MultiSelect, {\n    options: toLocation,\n    onChange: function onChange(e) {\n      return setTo(e);\n    },\n    value: to,\n    labelledBy: \"Select Copy To Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 33\n    }\n  }), formik.errors.locationRole && formik.values.locationRole === \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 41\n    }\n  }, \" \", formik.errors.locationRole) : null)), /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingLeft: '150px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centerd-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    className: \"saveBtn\",\n    disabled: final.length > 0 ? false : true,\n    onClick: roleConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 37\n    }\n  }, \"Confirm\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"centerd-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    className: \"saveBtn\",\n    onClick: handleToLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 37\n    }\n  }, \"Copy\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: \"pill\",\n    className: \"cancelBtn\",\n    onClick: roleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 37\n    }\n  }, \" \", \"Cancel\")))), final.length !== 0 ? /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      padding: '4%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CDataTable, {\n    items: roleCopy,\n    fields: fields,\n    columnFilter: true,\n    tableFilter: true,\n    footer: true,\n    itemsPerPageSelect: true,\n    itemsPerPage: 5,\n    hover: true,\n    sorter: true,\n    pagination: true,\n    scopedSlots: {\n      'status': function status(item) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(CBadge, {\n          color: getBadge(item.status),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 53\n          }\n        }, item.status));\n      },\n      'show_details': function show_details(item, index) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          className: \"py-2\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(CButton, {\n          color: \"primary\",\n          variant: \"outline\",\n          shape: \"square\",\n          size: \"sm\",\n          onClick: function onClick() {\n            toggleDetails(index);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 57\n          }\n        }, _details.includes(index) ? 'Hide' : 'Show'));\n      },\n      'details': function details(item, index) {\n        return /*#__PURE__*/React.createElement(CCollapse, {\n          show: _details.includes(index),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(CCardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(CRow, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 61\n          }\n        }, /*#__PURE__*/React.createElement(CCol, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 71\n          }\n        }, \"Department\")), /*#__PURE__*/React.createElement(CCol, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 71\n          }\n        }, \"Designation\")), /*#__PURE__*/React.createElement(CCol, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 71\n          }\n        }, \"Role\")), /*#__PURE__*/React.createElement(CCol, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 71\n          }\n        }, \"Action\")))), roleCopy[index].value.map(function (x) {\n          return /*#__PURE__*/React.createElement(CCardBody, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 61\n            }\n          }, /*#__PURE__*/React.createElement(CRow, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 65\n            }\n          }, /*#__PURE__*/React.createElement(CCol, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 69\n            }\n          }, x.Department), /*#__PURE__*/React.createElement(CCol, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 69\n            }\n          }, x.Designation), /*#__PURE__*/React.createElement(CCol, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 69\n            }\n          }, x.Role), /*#__PURE__*/React.createElement(CCol, {\n            style: {\n              fontSize: \"1.15rem\"\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 69\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            style: {\n              left: \"774px\",\n              color: \"#e85654\"\n            },\n            className: \"fas fa-trash\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 73\n            }\n          }))));\n        }));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 33\n    }\n  })) : null))), /*#__PURE__*/React.createElement(ToastContainer, {\n    className: \"toast--warning   \",\n    style: {\n      width: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default RoleCopy;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/rolecopy/RoleCopy.jsx"],"names":["React","useState","useEffect","AutoSizer","Table","Column","ToastContainer","toast","ReactMultiSelectCheckboxes","MultiSelect","CRow","CCard","CCol","CButton","CForm","CSelect","CLabel","CInput","CDataTable","CBadge","CCollapse","CCardBody","Select","components","useFormik","yup","departmentCreate","designationCreate","getAllRoleCopy","getAllDepartment","getAllRoleData","getDesignation","getOfficeLocation","getOfficeType","createRoleConfirm","getAllRole","getAllRoleLocation","Label","setTimeout","RoleCopy","props","officeLocation","setOfficeLocation","locationRole","setLocationRole","officeTypes","setOfficeTypes","officeType","setOfficeType","RoleList","setRoleList","final","setFinal","toLocation","setTolocation","selected","setSelected","roleCopy","setRoleCopy","to","setTo","formik","initialValues","officetype","departmentRole","designationRole","office","roleName","abbreviation","code","dccDescription","dccID","validationSchema","object","string","required","onSubmit","userInputData","console","log","getOfficeLocations","id","query","responseO","OfficeLocation","data","map","x","officeLocationName","locationName","push","value","_id","label","address1","address2","area","areaName","pincode","getAllOfficeLocation","responseT","OfficeTypes","handleOfficeType","y","getToLocation","val","length","ids","includes","roleResponse","_noContentRenderer","getRoles","department","name","designation","typeOfOfficeName","typeOfOffice","roleCancel","values","roleConfirm","response","success","message","error","handleToLocation","warning","arrays","dataArrays","z","array","dataArray","datas","dccId","country","state","city","index","findIndex","Location","cityName","NoofRolesCopied","Designation","Department","Role","MIN_TABLE_WIDTH","details","setDetails","toggleDetails","position","indexOf","newDetails","slice","splice","fields","key","_style","width","sorter","filter","getBadge","status","cancel","Option","display","padding","paddingLeft","paddingRight","handleSubmit","errors","e","item","fontSize","left","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    AutoSizer,\n    Table,\n    Column\n} from \"react-virtualized\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\nimport MultiSelect from \"react-multi-select-component\";\nimport {\n    CRow,\n    CCard,\n    CCol,\n    CButton,\n    CForm,\n    CSelect,\n    CLabel,\n    CInput,\n    CDataTable,\n    CBadge,\n    CCollapse,\n    CCardBody,\n\n} from \"@coreui/react\";\nimport Select, { components } from \"react-select\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport Edits from \"../../images/image 2.svg\";\nimport Remove from \"../../images/image 15.svg\";\nimport \"./RoleCopy.css\";\nimport {\n    departmentCreate,\n    designationCreate,\n    getAllRoleCopy,\n    getAllDepartment,\n    getAllRoleData,\n    getDesignation,\n    getOfficeLocation,\n    getOfficeType,\n    createRoleConfirm,\n    getAllRole,\n    getAllRoleLocation\n} from \"../../../services/ApiService\";\nimport { Label } from \"react-konva\";\nimport { setTimeout } from \"core-js\";\n\nfunction RoleCopy(props) {\n    const [officeLocation, setOfficeLocation] = useState([]);\n    const [locationRole, setLocationRole] = useState(\"\");\n    const [officeTypes, setOfficeTypes] = useState(\"\");\n    const [officeType, setOfficeType] = useState([]);\n    const [RoleList, setRoleList] = useState([]);\n    const [final, setFinal] = useState([]);\n    const [toLocation, setTolocation] = useState([]);\n    const [selected, setSelected] = useState([]);\n    const [roleCopy, setRoleCopy] = useState([]);\n    const [to, setTo] = useState([]);\n\n    const formik = useFormik({\n        initialValues: {\n            officetype: {},\n            departmentRole: \"\",\n            locationRole: {},\n            designationRole: \"\",\n            office: \"\",\n            roleName: \"\",\n            abbreviation: \"\",\n            code: \"\",\n            dccDescription: \"\",\n            dccID: \"\",\n        },\n        validationSchema: yup.object({\n            officetype: yup.string().required(\"Office Type Required\"),\n            // .min(5 , \"Minimum 5 charcter\" )\n            departmentRole: yup.string().required(\"Department Required\"),\n            locationRole: yup.string().required(\"Party Office Location Required\"),\n            designationRole: yup.string().required(\"Designation Required\"),\n            office: yup.string().required(\"Office Name Required\"),\n            roleName: yup.string().required(\"Role Name Required\"),\n            abbreviation: yup.string().required(\"Role Abbreviation required\"),\n            code: yup.string().required(\"Role Code is required\"),\n        }),\n        onSubmit: (userInputData) => {\n            console.log(userInputData);\n        },\n    });\n\n    const getOfficeLocations = async (id) => {\n        let query = `officeType=${id}`;\n        try {\n            const responseO = await getOfficeLocation(query);\n            if (responseO) {\n                if (responseO.OfficeLocation) {\n                    let data = [];\n                    responseO.OfficeLocation.map(x => {\n                        x.officeLocationName = x.locationName;\n                        data.push({ ...x, locationName: x.locationName, value: x._id, label: `${x.address1}, ${x.address2}, ${x.area.areaName} - ${x.pincode}` })\n                    })\n                    console.log(data);\n                    setOfficeLocation(data);\n                }\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    useEffect(() => {\n        async function getAllOfficeLocation() {\n            var responseT;\n            try {\n                responseT = await getOfficeType();\n                if (responseT) {\n                    responseT.OfficeTypes.map(x => {\n                        x.value = x._id;\n                        x.label = x.officeType;\n                    })\n                    setOfficeType(responseT.OfficeTypes);\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        }\n\n        getAllOfficeLocation();\n    }, []);\n\n    const handleOfficeType = (y) => {\n        setOfficeTypes(y);\n        getOfficeLocations(y._id);\n    };\n\n    const getToLocation = async (val) => {\n        if (selected.length !== 0) {\n            let ids = [];\n            selected.map(x => {\n                if (!ids.includes(x._id)) {\n                    ids.push(x._id)\n                }\n            })\n            var roleResponse\n            try {\n                roleResponse = await getAllRoleLocation(ids, officeTypes);\n                if (roleResponse) {\n                    if (roleResponse.data) {\n                        let data = [];\n                        roleResponse.data.map(y => {\n                            data.push({ ...y, value: y._id, label: `${y.address1}, ${y.address2}, ${y.area.areaName} - ${y.pincode}` })\n                        })\n                        setTolocation(data);\n\n                    }\n                }\n            } catch (e) {\n                console.log(e);\n            }\n        } else {\n            console.log(\"object\");\n        }\n    }\n\n    const _noContentRenderer = () => {\n        return <div>No Office types.</div>;\n    };\n\n\n    const getRoles = async (id) => {\n        setLocationRole(id);\n        var roleResponse\n        try {\n            roleResponse = await getAllRoleData(id._id);\n            if (roleResponse) {\n                console.log(roleResponse.data, \"datadatadatadatadatadatadatadata\");\n                roleResponse.data.map((x) => {\n                    x.value = x._id;\n                    x.label = `${(x.department.name)},${(x.designation.name)},${(x.roleName)}`;\n                    // x.typeOfOfficeName=`${x.typeOfOffice.officeType}`\n                    x.typeOfOfficeName = x.typeOfOffice.officeType;\n                    // return 0;\n                })\n                setRoleList(roleResponse.data);\n\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    // useEffect(() => {\n    //     getRoleCopy();\n    // }, []);\n\n    // const getRoleCopy = async (id) => {\n    //     var roleResponse\n    //     try {\n    //         roleResponse = await getAllRoleData(id);\n    //         if (roleResponse) {\n    //             if (roleResponse.data) {\n    //                 roleResponse.data.map((x) => {\n    //                     x.value = x._id;\n    //                     x.label = `${x.typeOfOffice.officeType}, ${x.officeLocation.state.stateName}, ${x.officeLocation.city.cityName}, ${x.officeLocation.area.areaName}, ${x.department.name}, ${x.designation.name}, ${x.roleName}`;\n    //                     x.typeOfOfficeName = x.typeOfOffice.officeType;\n    //                     x.locationName = x.officeLocation.area.areaName;\n    //                     x.departmentName = x.department.name;\n    //                     x.designationName = x.designation.name;\n    //                     x.role = x.roleName\n    //                     console.log(x);\n    //                     return 0;\n    //                 });\n    //             }\n    //             setRoleList(roleResponse.data);\n\n    //         }\n    //     } catch (e) {\n    //         console.log(e);\n    //     }\n    // };\n    const roleCancel = () => {\n        formik.values.officetype = {};\n        setFinal([])\n        setOfficeTypes(\"\");\n        setLocationRole(\"\");\n        setOfficeLocation([]);\n        setRoleList([]);\n        setTolocation([]);\n        setSelected([]);\n        setRoleCopy([]);\n        setTo([]);\n    }\n    const roleConfirm = async () => {\n        var response\n\n        try {\n            response = await createRoleConfirm(final);\n            if (response) {\n                if (response.data) {\n                    formik.values.officetype = {};\n                    setFinal([])\n                    setOfficeTypes(\"\");\n                    setLocationRole(\"\");\n                    setOfficeLocation([]);\n                    setRoleList([]);\n                    setTolocation([]);\n                    setSelected([]);\n                    setRoleCopy([]);\n                    setTo([]);\n                    toast.success(response.message);\n                    console.log(response.data, \"123456\");\n                }\n                // if(response.success.false){}\n            }\n        } catch (e) {\n            toast.error(`${e}`);\n            console.log(e);\n        }\n    };\n\n\n    const handleToLocation = async () => {\n        if (to.length < 0) {\n            toast.warning(\"Please Select the role!\");\n            return 0;\n        }\n        let val = to;\n        let arrays = [];\n        let dataArrays = [];\n        val.map(z => {\n            let array = [];\n            let dataArray = [];\n            let datas = []\n            selected.map((x) => {\n                delete x._id;\n                array.push({\n                    ...x,\n                    officeLocation: z._id,\n                    dccId: `${x.typeOfOffice.code}${z.country.code}${z.state.code}${z.city.code}${z.area.code}${x.department.code}${x.designation.code}${x.code}`,\n                    dccDescription: `${x.typeOfOffice.abbreviation}${z.country.abbreviation}${z.state.abbreviation}${z.city.abbreviation}${z.area.abbreviation}${x.department.abbreviation}${x.designation.abbreviation}${x.abbreviation}`,\n                    typeOfOffice: x.typeOfOffice._id,\n                    department: x.department._id,\n                    designation: x.designation._id,\n                })\n                if (datas.includes(x._id)) {\n                    let index = dataArray.findIndex(y => {\n                        return y.Location === `${z.area.areaName}, ${z.city.cityName}`;\n                    })\n                    dataArray[index] = {\n                        ...dataArray[index], NoofRolesCopied: (dataArray[index].NoofRolesCopied + 1), value: [...dataArray[index].value, {\n                            Designation: x.designation.name,\n                            Department: x.department.name,\n                            Role: x.roleName\n                        }]\n                    }\n                } else {\n                    dataArray.push({\n                        Location: `${z.area.areaName}, ${z.city.cityName}`, NoofRolesCopied: 1, value: [{\n                            Designation: x.designation.name,\n                            Department: x.department.name,\n                            Role: x.roleName\n                        }]\n                    })\n                }\n                datas.push(x._id);\n            })\n            array.map(x => {\n                arrays.push(x)\n            })\n            dataArray.map(x => {\n                dataArrays.push(...dataArray)\n            })\n        })\n        setRoleCopy(dataArrays);\n        setFinal(arrays);\n        toast.success(\"Role was copied!\")\n        console.log(to, arrays);\n    }\n\n    const MIN_TABLE_WIDTH = 1000;\n\n\n    const [details, setDetails] = useState([])\n    // const [items, setItems] = useState(usersData)\n\n    const toggleDetails = (index) => {\n        const position = details.indexOf(index)\n        let newDetails = details.slice()\n        if (position !== -1) {\n            newDetails.splice(position, 1)\n        } else {\n            newDetails = [...details, index]\n        }\n        setDetails(newDetails)\n    }\n\n\n    const fields = [\n        { key: 'Location', label: 'Party Office Location', _style: { width: '40%' } },\n        { key: 'NoofRolesCopied', _style: { width: '40%' }, },\n        {\n            key: 'show_details',\n            label: '',\n            _style: { width: '10%' },\n            sorter: false,\n            filter: false\n        }\n    ]\n\n    const getBadge = (status) => {\n        switch (status) {\n            case 'Active': return 'success'\n            case 'Inactive': return 'secondary'\n            case 'Pending': return 'warning'\n            case 'Banned': return 'danger'\n            default: return 'primary'\n        }\n    }\n\n    const cancel = () => {\n        setLocationRole(\"\");\n        setOfficeLocation([]);\n        setRoleList([]);\n        setSelected(\"\");\n        setTo([]);\n        setTolocation(\"\")\n    }\n    const Option = props => {\n        return (\n            <div style={{ display: \"block\" }}>\n                <components.Option {...props} >\n                    <p>{props.data.locationName}</p>\n                    <p>{props.data.label}aaaa</p>\n                </components.Option>\n            </div>\n        );\n    }\n    return (\n        <div>\n            <div style={{ padding: \"4%\" }}>\n                <CCard className={\"Roless-card-container-1\"}>\n                    <CRow style={{\n                        padding: \"10px\",\n                        paddingLeft: \"20px\",\n                        paddingRight: \"20px\",\n                    }}>\n                        <CCol md=\"10\" className={\"role-heading-1\"}>\n                            Copy From\n                                </CCol>\n                    </CRow>\n\n                    <CForm autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n                        <CRow className={\"role-form-container-1\"}>\n                            <CCol md=\"12\" lg=\"12\" sm=\"12\">\n                                <CRow className={\"seperator-1\"}>\n                                    <CCol md=\"5\">\n                                        <CLabel className={\"form-labels-1\"}>\n                                            Type of Party Office\n                                                </CLabel>\n                                        <Select\n                                            name={\"officetype\"}\n                                            value={officeTypes}\n                                            onChange={handleOfficeType}\n                                            options={officeType}\n                                            placeholder=\"Select Office Type\"\n                                        />\n                                        {formik.errors.officetype &&\n                                            formik.values.officetype === \"\" ? (\n                                                <div className=\"text-danger\">\n                                                    {\" \"}\n                                                    {formik.errors.officetype}\n                                                </div>\n                                            ) : null}\n                                    </CCol>\n                                    <CCol md=\"5\">\n                                        <CLabel className={\"form-labels-1\"}>\n                                            Party Office Location{\" \"}\n                                        </CLabel>\n                                        <Select\n                                            name={\"locationRole\"}\n                                            value={locationRole}\n                                            options={officeLocation}\n                                            components={{ Option }}\n                                            onChange={(e) => getRoles(e)}\n                                            placeholder={\"Select Party Office Location...\"}\n\n                                        />\n                                        {formik.errors.locationRole &&\n                                            formik.values.locationRole === \"\" ? (\n                                                <div className=\"text-danger\">\n                                                    {\" \"}\n                                                    {formik.errors.locationRole}\n                                                </div>\n                                            ) : null}\n                                    </CCol>\n\n                                </CRow>\n\n                                <CRow className={\"seperator-1\"}>\n                                    <CCol md=\"5\">\n                                        <CLabel className={\"form-labels-1\"}>\n                                            List of Roles\n                                                </CLabel>\n                                        <MultiSelect\n                                            type='checkbox'\n                                            isMulti\n                                            closeMenuOnSelect={false}\n                                            onChange={(e) => setSelected(e)}\n                                            isMulti\n                                            options={RoleList}\n                                            isChecked\n                                            value={selected}\n                                            placeholder={\"Select Role...\"}\n                                            labelledBy={\"Select\"}\n                                        />\n\n                                        {formik.errors.officetype &&\n                                            formik.values.officetype === \"\" ? (\n                                                <div className=\"text-danger\">\n                                                    {\" \"}\n                                                    {formik.errors.officetype}\n                                                </div>\n                                            ) : null}\n\n                                    </CCol>\n                                    <CRow style={{ padding: '3%' }}>\n                                        <CCol>\n                                            <CButton shape={'pill'} className={'saveBtn'} onClick={() => getToLocation(selected)}>Next</CButton>\n                                        </CCol>\n                                    </CRow>\n                                </CRow>\n\n                                <CCol md=\"10\"></CCol>\n                            </CCol>\n                        </CRow>\n\n                        <CRow style={{\n                            padding: \"10px\",\n                            paddingLeft: \"20px\",\n                            paddingRight: \"20px\",\n                        }}>\n                            <CCol md=\"10\" className={\"role-heading-1\"}>\n                                Copy To\n                                     </CCol>\n                        </CRow>\n\n                        <CRow className={\"seperator-1\"} style={{ paddingLeft: '2%' }}>\n                            <CCol md=\"5\">\n                                <CLabel className={\"form-labels-1\"}>\n                                    Copied To{\" \"}\n                                </CLabel>   \n                                <MultiSelect\n                                    options={toLocation}\n                                    onChange={(e) => setTo(e)}\n                                    value={to}\n                                    labelledBy={\"Select Copy To Location\"}\n                                    \n                                />\n                                {formik.errors.locationRole &&\n                                    formik.values.locationRole === \"\" ? (\n                                        <div className=\"text-danger\">\n                                            {\" \"}\n                                            {formik.errors.locationRole}\n                                        </div>\n                                    ) : null}\n                            </CCol>\n                        </CRow>\n                        <CRow style={{ paddingLeft: '150px' }}>\n                            <div className=\"centerd-7\">\n                                <CCol md=\"10\">\n                                    <CButton\n                                        className={\"saveBtn\"}\n                                        disabled={final.length > 0 ? false : true}\n                                        onClick={roleConfirm}\n                                    >\n                                        Confirm\n                                            </CButton>\n                                </CCol>\n                            </div>\n\n                            <div className=\"centerd-8\">\n                                <CCol md=\"10\">\n                                    <CButton\n                                        className={\"saveBtn\"}\n                                        onClick={handleToLocation}\n                                    >\n                                        Copy\n                                            </CButton>\n                                </CCol>\n                            </div>\n                            <div className=\"center-6\">\n                                <CCol md=\"10\">\n                                    <CButton\n                                        shape={\"pill\"}\n                                        className={\"cancelBtn\"}\n                                        onClick={roleCancel}\n\n\n                                    >\n                                        {\" \"}\n                                                Cancel\n                                            </CButton>\n                                </CCol>\n                            </div>\n                        </CRow>\n                        {final.length !== 0 ? (\n                            <CRow style={{ padding: '4%' }}>\n                                <CDataTable\n                                    items={roleCopy}\n                                    fields={fields}\n                                    columnFilter\n                                    tableFilter\n                                    footer\n                                    itemsPerPageSelect\n                                    itemsPerPage={5}\n                                    hover\n                                    sorter\n                                    pagination\n                                    scopedSlots={{\n                                        'status':\n                                            (item) => (\n                                                <td>\n                                                    <CBadge color={getBadge(item.status)}>\n                                                        {item.status}\n                                                    </CBadge>\n                                                </td>\n                                            ),\n                                        'show_details':\n                                            (item, index) => {\n                                                return (\n                                                    <td className=\"py-2\">\n                                                        <CButton\n                                                            color=\"primary\"\n                                                            variant=\"outline\"\n                                                            shape=\"square\"\n                                                            size=\"sm\"\n                                                            onClick={() => { toggleDetails(index) }}\n                                                        >\n                                                            {details.includes(index) ? 'Hide' : 'Show'}\n                                                        </CButton>\n                                                    </td>\n                                                )\n                                            },\n                                        'details':\n                                            (item, index) => {\n                                                return (\n                                                    <CCollapse show={details.includes(index)}>\n                                                        <CCardBody>\n                                                            <CRow>\n                                                                <CCol><b>Department</b></CCol>\n                                                                <CCol><b>Designation</b></CCol>\n                                                                <CCol><b>Role</b></CCol>\n                                                                <CCol><b>Action</b></CCol>\n                                                            </CRow>\n                                                        </CCardBody>\n                                                        {roleCopy[index].value.map(x => (\n                                                            <CCardBody>\n                                                                <CRow>\n                                                                    <CCol>{x.Department}</CCol>\n                                                                    <CCol>{x.Designation}</CCol>\n                                                                    <CCol>{x.Role}</CCol>\n                                                                    <CCol style={{ fontSize: \"1.15rem\", }}>\n\n                                                                        <i\n\n                                                                            style={{\n                                                                                left: \"774px\",\n                                                                                color: \"#e85654\",\n                                                                            }}\n                                                                            className=\"fas fa-trash\"\n                                                                        ></i>\n                                                                    </CCol>\n                                                                </CRow>\n                                                            </CCardBody>\n                                                        ))}\n                                                    </CCollapse>\n                                                )\n                                            }\n                                    }}\n                                />\n                            </CRow>\n                        ) : (null)}\n                    </CForm>\n                </CCard>\n            </div>\n            <ToastContainer\n                className=\"toast--warning   \"\n                style={{ width: \"300px\" }}\n            />\n        </div >\n    );\n}\n\nexport default RoleCopy;\n\n"]},"metadata":{},"sourceType":"module"}