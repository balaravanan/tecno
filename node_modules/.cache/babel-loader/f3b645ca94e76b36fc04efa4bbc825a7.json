{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/BulkUpload/ExportCSV.jsx\";\n\nimport React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { CLabel, CRow, CCol } from '@coreui/react';\nexport var ExportCSV = function ExportCSV(_ref) {\n  var csvData = _ref.csvData,\n      fileName = _ref.fileName;\n  var fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n  var fileExtension = '.xlsx';\n\n  var sheetNameFunc = function sheetNameFunc(data) {\n    var names = [];\n    data.map(function (x, i) {\n      names.push(\"sheet\".concat(i + 1));\n    });\n    return names;\n  };\n\n  var sheetFunc = function sheetFunc(data) {\n    var sheets = {};\n    data.map(function (x, i) {\n      var ws = XLSX.utils.json_to_sheet(x);\n\n      if (i === 0) {\n        sheets[\"sheet\".concat(i + 1)] = ws;\n      } else {\n        sheets[\"sheet\".concat(i + 1)] = ws;\n      }\n    });\n    return sheets;\n  };\n\n  var exportToCSV = function exportToCSV(csvData, fileName) {\n    var wb = {\n      Sheets: sheetFunc(csvData),\n      SheetNames: sheetNameFunc(csvData)\n    };\n    var excelBuffer = XLSX.write(wb, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    var data = new Blob([excelBuffer], {\n      type: fileType\n    });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      fontSize: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-download\",\n    onClick: function onClick(e) {\n      return exportToCSV(csvData, fileName);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    style: {\n      position: 'relative',\n      right: '25px'\n    },\n    onClick: function onClick(e) {\n      return exportToCSV(csvData, fileName);\n    },\n    className: \"form-labels-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Download Template\")));\n};","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/BulkUpload/ExportCSV.jsx"],"names":["React","Button","FileSaver","XLSX","CLabel","CRow","CCol","ExportCSV","csvData","fileName","fileType","fileExtension","sheetNameFunc","data","names","map","x","i","push","sheetFunc","sheets","ws","utils","json_to_sheet","exportToCSV","wb","Sheets","SheetNames","excelBuffer","write","bookType","type","Blob","saveAs","fontSize","e","position","right"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,SAASC,MAAT,EAAgBC,IAAhB,EAAqBC,IAArB,QAAiC,eAAjC;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAyB;AAAA,MAAvBC,OAAuB,QAAvBA,OAAuB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAE9C,MAAMC,QAAQ,GAAG,iFAAjB;AACA,MAAMC,aAAa,GAAG,OAAtB;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9B,QAAIC,KAAK,GAAG,EAAZ;AACAD,IAAAA,IAAI,CAACE,GAAL,CAAS,UAACC,CAAD,EAAGC,CAAH,EAAO;AACdH,MAAAA,KAAK,CAACI,IAAN,gBAAoBD,CAAC,GAAC,CAAtB;AACD,KAFD;AAGA,WAAOH,KAAP;AACD,GAND;;AAQA,MAAMK,SAAS,GAAG,SAAZA,SAAY,CAACN,IAAD,EAAU;AAC1B,QAAIO,MAAM,GAAG,EAAb;AACAP,IAAAA,IAAI,CAACE,GAAL,CAAS,UAACC,CAAD,EAAGC,CAAH,EAAO;AACd,UAAMI,EAAE,GAAGlB,IAAI,CAACmB,KAAL,CAAWC,aAAX,CAAyBP,CAAzB,CAAX;;AACA,UAAGC,CAAC,KAAK,CAAT,EAAW;AACTG,QAAAA,MAAM,gBAAUH,CAAC,GAAC,CAAZ,EAAN,GAA0BI,EAA1B;AACD,OAFD,MAEK;AACKD,QAAAA,MAAM,gBAAUH,CAAC,GAAC,CAAZ,EAAN,GAA0BI,EAA1B;AACT;AACF,KAPD;AAQA,WAAOD,MAAP;AACD,GAXD;;AAaA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAAChB,OAAD,EAAUC,QAAV,EAAuB;AACvC,QAAMgB,EAAE,GAAG;AAAEC,MAAAA,MAAM,EAAEP,SAAS,CAACX,OAAD,CAAnB;AAA8BmB,MAAAA,UAAU,EAAEf,aAAa,CAACJ,OAAD;AAAvD,KAAX;AACA,QAAMoB,WAAW,GAAGzB,IAAI,CAAC0B,KAAL,CAAWJ,EAAX,EAAe;AAAEK,MAAAA,QAAQ,EAAE,MAAZ;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAf,CAApB;AACA,QAAMlB,IAAI,GAAG,IAAImB,IAAJ,CAAS,CAACJ,WAAD,CAAT,EAAwB;AAACG,MAAAA,IAAI,EAAErB;AAAP,KAAxB,CAAb;AACAR,IAAAA,SAAS,CAAC+B,MAAV,CAAiBpB,IAAjB,EAAuBJ,QAAQ,GAAGE,aAAlC;AACH,GALD;;AAOA,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACuB,MAAAA,QAAQ,EAAC;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAG,IAAA,KAAK,EAAC,iBAAT;AAA2B,IAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,aAAOX,WAAW,CAAChB,OAAD,EAASC,QAAT,CAAlB;AAAA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,eAIA,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAC2B,MAAAA,QAAQ,EAAC,UAAV;AAAqBC,MAAAA,KAAK,EAAC;AAA3B,KAAf;AAAoD,IAAA,OAAO,EAAE,iBAACF,CAAD;AAAA,aAAOX,WAAW,CAAChB,OAAD,EAASC,QAAT,CAAlB;AAAA,KAA7D;AAAmG,IAAA,SAAS,EAAE,eAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAJA,CADJ;AAWH,CA5CM","sourcesContent":["import React from 'react'\nimport Button from 'react-bootstrap/Button';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\nimport { CLabel,CRow,CCol } from '@coreui/react';\n\nexport const ExportCSV = ({csvData, fileName}) => {\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    const sheetNameFunc = (data) => {\n      let names = [];\n      data.map((x,i)=>{\n        names.push(`sheet${(i+1)}`);\n      })\n      return names\n    }\n\n    const sheetFunc = (data) => {\n      let sheets = {};\n      data.map((x,i)=>{\n        const ws = XLSX.utils.json_to_sheet(x)\n        if(i === 0){\n          sheets[`sheet${(i+1)}`] = ws;\n        }else{\n                  sheets[`sheet${(i+1)}`] = ws;\n        }\n      })\n      return sheets;\n    }\n\n    const exportToCSV = (csvData, fileName) => {\n        const wb = { Sheets: sheetFunc(csvData), SheetNames: sheetNameFunc(csvData) };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    return (\n        <CRow style={{fontSize:'20px'}}>\n        <CCol md={1}>\n        <i class=\"fas fa-download\" onClick={(e) => exportToCSV(csvData,fileName)}></i>\n        </CCol>\n        <CCol md={6}>\n          <CLabel style={{position:'relative',right:'25px'}}  onClick={(e) => exportToCSV(csvData,fileName)} className={\"form-labels-6\"}>Download Template</CLabel>\n        </CCol>\n      </CRow>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}