{"ast":null,"code":"import _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/Entity/EntityList.jsx\";\nimport React, { useState } from 'react'; // import { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized'\n\nimport Refresh from '../../images/image 7.png'; // import \"../suspend/node_modules/react-virtualized/styles.css\";\n\nimport { CRow, CCard, CCol, CButton, CForm, CLabel, CInput } from '@coreui/react';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport './Entity.css'; // import { entityList } from '../../../services/ApiService'\n\nfunction EntityList() {\n  // const {enqueueSnackbar} = useSnackbar()\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      designation = _useState2[0],\n      setDesignation = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescrption = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      department = _useState6[0],\n      setDepartment = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      id = _useState8[0],\n      setId = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      office = _useState10[0],\n      setOffice = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      location = _useState12[0],\n      setLocation = _useState12[1];\n\n  var _useState13 = useState({}),\n      _useState14 = _slicedToArray(_useState13, 2),\n      name = _useState14[0],\n      setName = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      Role = _useState16[0],\n      setRole = _useState16[1]; // const [RoleList, setRoleList] = useState(true)\n\n\n  var formik = useFormik({\n    initialValues: {\n      office: '',\n      circle: '',\n      department: '',\n      designation: '',\n      role: '',\n      description: ''\n    },\n    validationSchema: yup.object({\n      office: yup.string().required(\"Office Name is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      circle: yup.string().required(\"Circle Name is Required\"),\n      department: yup.string().required(\"Department is Required\"),\n      designation: yup.string().required(\"Designation Group is Required\"),\n      role: yup.string().required(\"Role is Required\"),\n      description: yup.string().required(\"Description is Required\")\n    }),\n    onSubmit: function onSubmit(userInputData) {\n      console.log(userInputData);\n    }\n  });\n\n  var entityList = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(index) {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              body = {\n                typeofOffice: name,\n                Departments: department,\n                OfficeLocation: location,\n                Designation: designation,\n                officeName: office,\n                Role: Role,\n                Description: description,\n                ID: id\n              };\n              _context.prev = 1;\n              _context.next = 4;\n              return entityList(index, JSON.stringify(body));\n\n            case 4:\n              response = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function entityList(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: 'Roless-card-container-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: '1%',\n      paddingLeft: '2%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: 'role-heading-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"EntityList\")), /*#__PURE__*/React.createElement(CForm, {\n    autoComplete: \"off\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: 'role-form-container-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    lg: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 41\n    }\n  }, \"Type of Office\")), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: 'office',\n    onChange: formik.handleChange,\n    value: formik.values.office,\n    placeholder: \"Default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  }), formik.errors.office ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.office) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: 'primary',\n    shape: 'pill',\n    className: 'btn-container-role-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 51\n    }\n  }, \" Save\"))))), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }, \"Name of the Office  \")), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: 'circle',\n    onChange: formik.handleChange,\n    value: formik.values.circle,\n    placeholder: \"Default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 41\n    }\n  }), formik.errors.circle ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.circle) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: 'primary',\n    shape: 'pill',\n    className: 'btn-container-role-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 51\n    }\n  }, \" Save\"))))), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 41\n    }\n  }, \"Department \")), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: 'department',\n    onChange: formik.handleChange,\n    value: formik.values.department,\n    placeholder: \"Default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 41\n    }\n  }), formik.errors.department ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.department) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: 'primary',\n    shape: 'pill',\n    className: 'btn-container-role-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 51\n    }\n  }, \" Save\"))))), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 41\n    }\n  }, \"Designation \")), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: 'designation',\n    onChange: formik.handleChange,\n    value: formik.values.designation,\n    placeholder: \"Default \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 41\n    }\n  }), formik.errors.designation ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.designation) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: 'primary',\n    shape: 'pill',\n    className: 'btn-container-role-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 51\n    }\n  }, \" Save\"))))), /*#__PURE__*/React.createElement(CRow, {\n    className: 'seperator-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: 'form-labels-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  }, \"Role \")), /*#__PURE__*/React.createElement(CCol, {\n    md: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: 'role',\n    onChange: formik.handleChange,\n    value: formik.values.role,\n    placeholder: \"Default \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 41\n    }\n  }), formik.errors.role ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 45\n    }\n  }, \" \", formik.errors.role) : null), /*#__PURE__*/React.createElement(CCol, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    type: \"submit\",\n    color: 'primary',\n    shape: 'pill',\n    className: 'btn-container-role-7',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 51\n    }\n  }, \" Save\"))))), /*#__PURE__*/React.createElement(CCol, {\n    md: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  })))))));\n}\n\nexport default EntityList;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/Entity/EntityList.jsx"],"names":["React","useState","Refresh","CRow","CCard","CCol","CButton","CForm","CLabel","CInput","useFormik","yup","EntityList","designation","setDesignation","description","setDescrption","department","setDepartment","id","setId","office","setOffice","location","setLocation","name","setName","Role","setRole","formik","initialValues","circle","role","validationSchema","object","string","required","onSubmit","userInputData","console","log","entityList","index","body","typeofOffice","Departments","OfficeLocation","Designation","officeName","Description","ID","JSON","stringify","response","padding","paddingTop","paddingLeft","handleSubmit","handleChange","values","errors"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react'\n// import { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized'\nimport Refresh from '../../images/image 7.png'\n// import \"../suspend/node_modules/react-virtualized/styles.css\";\nimport { CRow, CCard, CCol, CButton, CForm, CLabel, CInput } from '@coreui/react'\nimport { useFormik } from 'formik'\nimport * as yup from 'yup'\nimport './Entity.css'\n// import { entityList } from '../../../services/ApiService'\nfunction EntityList() {\n\n\n    // const {enqueueSnackbar} = useSnackbar()\n    const [designation, setDesignation] = useState({})\n    const [description, setDescrption] = useState({})\n    const [department, setDepartment] = useState({})\n    const [id, setId] = useState({})\n    const [office, setOffice] = useState({})\n    const [location, setLocation] = useState({})\n    const [name, setName] = useState({})\n    const [Role, setRole] = useState(false)\n    // const [RoleList, setRoleList] = useState(true)\n\n    const formik = useFormik({\n        initialValues: {\n            office: '',\n            circle: '',\n            department: '',\n            designation: '',\n            role: '',\n            description: '',\n\n        },\n        validationSchema: yup.object({\n            office: yup.string()\n                .required(\"Office Name is Required\"),\n            // .min(5 , \"Minimum 5 charcter\" )\n            circle: yup.string()\n                .required(\"Circle Name is Required\"),\n            department: yup.string()\n                .required(\"Department is Required\"),\n            designation: yup.string()\n                .required(\"Designation Group is Required\"),\n            role: yup.string()\n                .required(\"Role is Required\"),\n            description: yup.string()\n                .required(\"Description is Required\"),\n\n\n        }),\n        onSubmit: (userInputData) => {\n            console.log(userInputData)\n\n        }\n    })\n\n    const entityList = async (index) => {\n        var response\n        let body = {\n            typeofOffice: name,\n            Departments: department,\n            OfficeLocation: location,\n            Designation: designation,\n            officeName: office,\n            Role: Role,\n            Description: description,\n            ID: id,\n        }\n        try {\n            response = await entityList(index, JSON.stringify(body))\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    return (\n\n        <div>\n            <div style={{ padding: '2%' }}>\n                <CCard className={'Roless-card-container-7'}>\n                    <CRow style={{ paddingTop: '1%', paddingLeft: '2%' }}>\n                        <CCol md='12' className={'role-heading-7'}>\n                            EntityList</CCol>\n                    </CRow>\n\n                    <CForm autoComplete='off' onSubmit={formik.handleSubmit}>\n                        <CRow className={'role-form-container-7'}>\n                            <CCol md='12' lg='12' sm='12'>\n\n\n                                <CRow className={'seperator-7'}>\n                                    <CCol md='3'>\n                                        <CLabel className={'form-labels-7'}>Type of Office</CLabel>\n\n                                    </CCol>\n                                    <CCol md='5'>\n\n                                        <CInput type={\"text\"} name={'office'}\n                                            onChange={formik.handleChange} value={formik.values.office}\n                                            placeholder='Default' />\n                                        {formik.errors.office ?\n                                            <div className=\"text-danger\"> {formik.errors.office}</div>\n                                            : null\n                                        }\n                                    </CCol>\n\n                                    <CCol md='3'>\n                                        {/* <div className =\"centerd-7\">\n                                            <CCol ><img className={'icon-refresh'} src={Refresh} /></CCol>\n                                        </div> */}\n                                        <CCol >\n                                            <CCol><CButton type=\"submit\" color={'primary'} shape={'pill'} className={'btn-container-role-7'} > Save</CButton></CCol>\n                                        </CCol>\n                                    </CCol>\n\n                                </CRow>\n\n                                <CRow className={'seperator-7'}>\n                                    <CCol md='3'>\n                                        <CLabel className={'form-labels-7'}>Name of the Office  </CLabel>\n\n                                    </CCol>\n                                    <CCol md='5'>\n\n                                        <CInput type={\"text\"} name={'circle'}\n                                            onChange={formik.handleChange} value={formik.values.circle}\n                                            placeholder='Default' />\n                                        {formik.errors.circle ?\n                                            <div className=\"text-danger\"> {formik.errors.circle}</div>\n                                            : null\n                                        }\n                                    </CCol>\n                                    <CCol md='3'>\n                                        {/* <div className=\"centerd-7\">\n                                            <CCol ><img className={'icon-refresh'} src={Refresh} /></CCol>\n                                        </div> */}\n                                        <CCol >\n                                            <CCol><CButton type=\"submit\" color={'primary'} shape={'pill'} className={'btn-container-role-7'} > Save</CButton></CCol>\n                                        </CCol>\n                                    </CCol>\n                                </CRow>\n\n                                <CRow className={'seperator-7'}>\n                                    <CCol md='3'>\n                                        <CLabel className={'form-labels-7'}>Department </CLabel>\n\n                                    </CCol>\n                                    <CCol md='5'>\n\n                                        <CInput type={\"text\"} name={'department'}\n                                            onChange={formik.handleChange} value={formik.values.department}\n                                            placeholder='Default' />\n                                        {formik.errors.department ?\n                                            <div className=\"text-danger\"> {formik.errors.department}</div>\n                                            : null\n                                        }\n                                    </CCol>\n                                    <CCol md='3'>\n                                        {/* <div className=\"centerd-7\">\n                                            <CCol ><img className={'icon-refresh'} src={Refresh} /></CCol>\n                                        </div> */}\n                                        <CCol >\n                                            <CCol><CButton type=\"submit\" color={'primary'} shape={'pill'} className={'btn-container-role-7'} > Save</CButton></CCol>\n                                        </CCol>\n                                    </CCol>\n\n                                </CRow>\n\n                                <CRow className={'seperator-7'}>\n                                    <CCol md='3'>\n                                        <CLabel className={'form-labels-7'}>Designation </CLabel>\n\n                                    </CCol>\n                                    <CCol md='5'>\n\n                                        <CInput type={\"text\"} name={'designation'}\n                                            onChange={formik.handleChange} value={formik.values.designation}\n                                            placeholder='Default ' />\n                                        {formik.errors.designation ?\n                                            <div className=\"text-danger\"> {formik.errors.designation}</div>\n                                            : null\n                                        }\n                                    </CCol>\n                                    <CCol md='3'>\n                                        {/* <div className=\"centerd-7\">\n                                            <CCol ><img className={'icon-refresh'} src={Refresh} /></CCol>\n                                        </div> */}\n                                        <CCol >\n                                            <CCol><CButton type=\"submit\" color={'primary'} shape={'pill'} className={'btn-container-role-7'} > Save</CButton></CCol>\n                                        </CCol>\n                                    </CCol>\n                                </CRow>\n\n                                <CRow className={'seperator-7'}>\n                                    <CCol md='3'>\n                                        <CLabel className={'form-labels-7'}>Role </CLabel>\n\n                                    </CCol>\n                                    <CCol md='5'>\n\n                                        <CInput type={\"text\"} name={'role'}\n                                            onChange={formik.handleChange} value={formik.values.role}\n                                            placeholder='Default ' />\n                                        {formik.errors.role ?\n                                            <div className=\"text-danger\"> {formik.errors.role}</div>\n                                            : null\n                                        }\n                                    </CCol>\n                                    <CCol md='3'>\n                                        {/* <div className=\"centerd-7\">\n                                            <CCol ><img className={'icon-refresh'} src={Refresh} /></CCol>\n                                        </div> */}\n                                        <CCol >\n                                            <CCol><CButton type=\"submit\" color={'primary'} shape={'pill'} className={'btn-container-role-7'} > Save</CButton></CCol>\n                                        </CCol>\n                                    </CCol>\n                                </CRow>\n\n                                {/* <CRow className={'seperator-7'}>\n                                    <CCol md='3'>\n                                        <CLabel className={'form-labels-7'}>D.C.C Description </CLabel>\n\n                                    </CCol>\n                                    <CCol md='5'>\n\n                                        <CInput type={\"text\"} name={'description'}\n                                            onChange={formik.handleChange} value={formik.values.description}\n                                            placeholder='Default ' />\n                                        {formik.errors.description ?\n                                            <div className=\"text-danger\"> {formik.errors.description}</div>\n                                            : null\n                                        }\n                                    </CCol>\n                                    <CCol md='3'>\n                                        <div className=\"centerd-7\">\n                                            <CCol ><img className={'icon-refresh'} src={Refresh} /></CCol>\n                                        </div>\n                                        <CCol >\n                                            <CCol><CButton type=\"submit\" color={'primary'} shape={'pill'} className={'btn-container-role-7'} > Save</CButton></CCol>\n                                        </CCol>\n                                    </CCol>\n                                </CRow> */}\n\n                                <CCol md='10'></CCol>\n\n                            </CCol>\n                        </CRow>\n                    </CForm>\n\n                </CCard>\n            </div>\n        </div>\n    )\n}\n\nexport default EntityList\n\n"]},"metadata":{},"sourceType":"module"}