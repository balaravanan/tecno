{"ast":null,"code":"import _regeneratorRuntime from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/kpost/Desktop/Political_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kpost/Desktop/Political_UI/src/views/components/address/Address.jsx\";\nimport React, { useState, useEffect } from \"react\"; // import { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized'\n// import \"../suspend/node_modules/react-virtualized/styles.css\";\n\nimport { CRow, CCard, CCol, CButton, CForm, CLabel, CInput } from \"@coreui/react\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport \"./Address.css\";\nimport { addAllEmployee, updateEmployee } from \"../../../services/ApiService\";\nimport { EmployeeContext } from \"../../../services/EmployeeContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { IconGroup } from \"semantic-ui-react\";\n\nfunction Address(props) {\n  var history = useHistory();\n\n  var _React$useContext = React.useContext(EmployeeContext),\n      _React$useContext2 = _slicedToArray(_React$useContext, 2),\n      state = _React$useContext2[0],\n      setState = _React$useContext2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      permanent = _useState2[0],\n      setPermanent = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      updateValue = _useState6[0],\n      setUpdateValue = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      posts = _useState8[0],\n      setPosts = _useState8[1];\n\n  console.log(state, \"address\");\n  var formik = useFormik({\n    initialValues: {\n      t_address1: \"\",\n      // t_address2: '',\n      t_country: \"\",\n      t_pincode: \"\",\n      t_state: \"\",\n      t_city: \"\",\n      t_area: \"\",\n      t_mobileNo: \"\",\n      t_email: \"\",\n      p_address1: \"\",\n      // p_address2: '',\n      p_country: \"\",\n      p_pincode: \"\",\n      p_state: \"\",\n      p_city: \"\",\n      p_area: \"\",\n      p_mobileNo: \"\",\n      p_email: \"\"\n    },\n    validationSchema: yup.object({\n      t_address1: yup.string().required(\"Address 1 is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      // t_address2: yup.string()\n      //   .required(\"Address 2 is Required\"),\n      t_country: yup.string().required(\"Country is Required\"),\n      t_pincode: yup.string().required(\"Pincode is Required\").min(6, \"Minimum 6 charcter\").max(6, \"Minimum 6 charcter\"),\n      t_state: yup.string().required(\"State is Required\"),\n      t_city: yup.string().required(\"City is Required\"),\n      t_area: yup.string().required(\"Area is Required\"),\n      t_mobileNo: yup.string().required(\"Phone Number is Required\").min(10, \"Minimum 10 charcter\").max(13, \"Minimum 13 charcter\"),\n      t_email: yup.string().required(\"Email Id is Required\").email(\"Please enter valid email\"),\n      p_address1: yup.string().required(\"Address 1 is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      // p_address2: yup.string()\n      //   .required(\"Address 2 is Required\"),\n      p_country: yup.string().required(\"Country is Required\"),\n      p_pincode: yup.string().required(\"Pincode is Required\"),\n      p_state: yup.string().required(\"State is Required\"),\n      p_city: yup.string().required(\"City is Required\"),\n      p_area: yup.string().required(\"Area is Required\"),\n      p_mobileNo: yup.string().required(\"Phone Number is Required\"),\n      p_email: yup.string().required(\"Email Id is Required\")\n    }),\n    onSubmit: function onSubmit(userInputData) {\n      console.log(userInputData);\n    }\n  });\n  var isEnabled = formik.values.t_address1 && formik.values.t_country && formik.values.t_pincode && formik.values.t_state && formik.values.t_city && formik.values.t_area && formik.values.t_mobileNo && formik.values.t_email && formik.values.p_address1 && formik.values.p_country && formik.values.p_state && formik.values.p_city && formik.values.p_area && formik.values.p_mobileNo && formik.values.p_email;\n\n  var checkPermenat = function checkPermenat() {\n    console.log(\"hello\");\n    setPermanent(!permanent); // let val = formik.values;\n\n    formik.values.p_address1 = formik.values.t_address1;\n    formik.values.p_address2 = formik.values.t_address2;\n    formik.values.p_country = formik.values.t_country;\n    formik.values.p_state = formik.values.t_state;\n    formik.values.p_city = formik.values.t_city;\n    formik.values.p_area = formik.values.t_area;\n    formik.values.p_pincode = formik.values.t_pincode;\n    formik.values.p_mobileNo = formik.values.t_mobileNo;\n    formik.values.p_email = formik.values.t_email;\n    console.log(formik.values.p_address1);\n    console.log(formik.values.p_address2);\n  };\n\n  var addAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var temp, perm, addresses, response, roles, _response, role;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              temp = {\n                address1: formik.values.t_address1,\n                address2: formik.values.t_address2,\n                country: formik.values.t_country,\n                state: formik.values.t_state,\n                city: formik.values.t_city,\n                area: formik.values.t_area,\n                pincode: formik.values.t_pincode,\n                mobileNo: formik.values.t_mobileNo,\n                email: formik.values.t_email\n              };\n              perm = {\n                address1: formik.values.p_address1,\n                address2: formik.values.p_address2,\n                country: formik.values.p_country,\n                state: formik.values.p_state,\n                city: formik.values.p_city,\n                area: formik.values.p_area,\n                pincode: formik.values.p_pincode,\n                mobileNo: formik.values.p_mobileNo,\n                email: formik.values.p_email\n              };\n\n              if (permanent) {\n                addresses = {\n                  temproaryAddress: temp,\n                  permanentAddress: perm,\n                  isSameAddress: permanent\n                };\n              } else {\n                addresses = {\n                  temproaryAddress: temp,\n                  permanentAddress: temp,\n                  isSameAddress: permanent\n                };\n              }\n\n              if (state._id) {\n                _context.next = 19;\n                break;\n              }\n\n              _context.prev = 4;\n\n              if (state.employeeRole._id) {\n                roles = state.employeeRole._id;\n              } else {\n                roles = state.employeeRole;\n              }\n\n              _context.next = 8;\n              return addAllEmployee(_objectSpread(_objectSpread({}, state), {}, {\n                addresses: _objectSpread({}, addresses),\n                id: state._id,\n                employeeRole: roles\n              }));\n\n            case 8:\n              response = _context.sent;\n              console.log(response, \"xxx123\");\n\n              if (response) {\n                if (response.success) {\n                  toast.success(response.message, {\n                    autoClose: 1000\n                  });\n                  formik.handleReset({});\n                  setState({\n                    family: [],\n                    experience: [],\n                    education: [],\n                    document: []\n                  });\n                  setTimeout(function () {\n                    history.push(\"/EmployeeData\");\n                  }, 1500);\n                }\n              }\n\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0);\n              toast.error(_context.t0.error, {\n                autoClose: 1000\n              });\n\n            case 17:\n              _context.next = 31;\n              break;\n\n            case 19:\n              _context.prev = 19;\n\n              if (state.employeeRole) {\n                if (state.employeeRole._id) {\n                  role = state.employeeRole._id;\n                } else {\n                  role = state.employeeRole;\n                }\n              }\n\n              _context.next = 23;\n              return updateEmployee(_objectSpread(_objectSpread({}, state), {}, {\n                addresses: addresses,\n                employeeRole: role\n              }));\n\n            case 23:\n              _response = _context.sent;\n\n              if (_response) {\n                if (_response.data) {\n                  if (_response.data.success === true) {\n                    toast.success(_response.data.message, {\n                      autoClose: 1000\n                    });\n                    formik.handleReset({});\n                    setState({\n                      family: [],\n                      experience: [],\n                      education: [],\n                      document: []\n                    });\n                    setTimeout(function () {\n                      history.push(\"/EmployeeData\");\n                    }, 1500);\n                  }\n                }\n              }\n\n              _context.next = 31;\n              break;\n\n            case 27:\n              _context.prev = 27;\n              _context.t1 = _context[\"catch\"](19);\n              console.log(_context.t1);\n              toast.error(_context.t1.error, {\n                autoClose: 1000\n              });\n\n            case 31:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 13], [19, 27]]);\n    }));\n\n    return function addAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    setError(\"\");\n  }, []);\n  useEffect(function () {\n    if (state._id) {\n      console.log(setUpdateValue);\n\n      if (state.addressDetails) {\n        if (state.addressDetails.temproaryAddress) {\n          formik.values.t_address1 = state.addressDetails.temproaryAddress.address1;\n          formik.values.t_address2 = state.addressDetails.temproaryAddress.address2;\n          formik.values.t_country = state.addressDetails.temproaryAddress.country;\n          formik.values.t_state = state.addressDetails.temproaryAddress.state;\n          formik.values.t_city = state.addressDetails.temproaryAddress.city;\n          formik.values.t_area = state.addressDetails.temproaryAddress.area;\n          formik.values.t_pincode = state.addressDetails.temproaryAddress.pincode;\n          formik.values.t_mobileNo = state.addressDetails.temproaryAddress.mobileNo;\n          formik.values.t_email = state.addressDetails.temproaryAddress.email;\n        }\n\n        if (state.addressDetails.permanentAddress) {\n          formik.values.p_address1 = state.addressDetails.permanentAddress.address1;\n          formik.values.p_address2 = state.addressDetails.permanentAddress.address2;\n          formik.values.p_country = state.addressDetails.permanentAddress.country;\n          formik.values.p_state = state.addressDetails.permanentAddress.state;\n          formik.values.p_city = state.addressDetails.permanentAddress.city;\n          formik.values.p_area = state.addressDetails.permanentAddress.area;\n          formik.values.p_pincode = state.addressDetails.permanentAddress.pincode;\n          formik.values.p_mobileNo = state.addressDetails.permanentAddress.mobileNo;\n          formik.values.p_email = state.addressDetails.permanentAddress.email;\n        }\n\n        if (state.addressDetails.isSameAddress) {\n          setPermanent(state.addressDetails.isSameAddress);\n        }\n      }\n    }\n\n    console.log(state, updateValue, \"testing\");\n  }, []);\n\n  var Cancel = function Cancel() {\n    formik.handleReset({});\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CCard, {\n    className: \"Address-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingTop: \"1%\",\n      paddingLeft: \"2%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    className: \"address-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, \"Communication Address\", \" \")), /*#__PURE__*/React.createElement(CForm, {\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"address-form-container \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    lg: \"12\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, \"Temproary Address\")), /*#__PURE__*/React.createElement(CCol, {\n    className: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CInput, {\n    type: \"checkbox\",\n    className: \"checkbox\",\n    checked: permanent,\n    onClick: checkPermenat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 23\n    }\n  }, \"Permanent Address\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"texts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 23\n    }\n  }, \"(select if permanent address same as the temproary address)\")))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 21\n    }\n  }, \"Address 1\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 32\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"t_address1\",\n    onChange: formik.handleChange,\n    value: updateValue.t_address1 ? updateValue.t_address1 : formik.values.t_address1,\n    placeholder: \"Enter Address 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }), formik.errors.t_address1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_address1) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 21\n    }\n  }, \"Address 1\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 32\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"p_address1\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_address1 : formik.values.p_address1 // disabled={  === true ? true : false}\n    ,\n    placeholder: \"Enter Address \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 21\n    }\n  }, \"Address 2 \"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"t_address2\",\n    onChange: formik.handleChange,\n    value: updateValue.t_address2 ? updateValue.t_address2 : formik.values.t_address2,\n    placeholder: \"Enter Address 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 21\n    }\n  }, \"Address 2 \"), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"p_address2\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_address2 : formik.values.p_address2 // disabled={permanent === true ? true : false}\n    ,\n    placeholder: \"Enter Address 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 21\n    }\n  }, \"Country\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"t_country\",\n    onChange: formik.handleChange,\n    value: updateValue.t_country ? updateValue.t_country : formik.values.t_country,\n    placeholder: \"Enter Country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 21\n    }\n  }), formik.errors.t_country ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_country) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 21\n    }\n  }, \"Country\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"p_country\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_country : formik.values.p_country,\n    placeholder: \"Enter Country\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 21\n    }\n  }, \"State\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"t_state\",\n    onChange: formik.handleChange,\n    value: updateValue.t_state ? updateValue.t_state : formik.values.t_state,\n    placeholder: \"Enter State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 21\n    }\n  }), formik.errors.t_state ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_state) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 21\n    }\n  }, \"State\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"p_state\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_state : formik.values.p_state,\n    placeholder: \"Enter State\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 21\n    }\n  }, \"City\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"t_city\",\n    onChange: formik.handleChange,\n    value: updateValue.t_city ? updateValue.t_city : formik.values.t_city,\n    placeholder: \"Enter City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 21\n    }\n  }), formik.errors.t_city ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_city) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 21\n    }\n  }, \"City\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"p_city\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_city : formik.values.p_city,\n    placeholder: \"Enter City\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 21\n    }\n  }, \"Area\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"t_area\",\n    onChange: formik.handleChange,\n    value: updateValue.t_area ? updateValue.t_area : formik.values.t_area,\n    placeholder: \"Enter Area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 21\n    }\n  }), formik.errors.t_area ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_area) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 21\n    }\n  }, \"Area\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"p_area\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_area : formik.values.p_area,\n    placeholder: \"Enter Area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 21\n    }\n  }, \"Pincode\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    name: \"t_pincode\",\n    onChange: formik.handleChange,\n    value: updateValue.t_pincode ? updateValue.t_pincode : formik.values.t_pincode,\n    placeholder: \"Enter Pincode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 21\n    }\n  }), formik.errors.t_pincode ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_pincode) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 21\n    }\n  }, \"Pincode\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    name: \"p_pincode\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_pincode : formik.values.p_pincode,\n    placeholder: \"Enter Pincode \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 21\n    }\n  }, \"Phone Number\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    name: \"t_mobileNo\",\n    onChange: formik.handleChange,\n    value: updateValue.t_mobileNo ? updateValue.t_mobileNo : formik.values.t_mobileNo,\n    placeholder: \"Enter Phone Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 21\n    }\n  }), formik.errors.t_mobileNo ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_mobileNo) : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 21\n    }\n  }, \"Phone Number\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"number\",\n    name: \"p_mobileNo\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_mobileNo : formik.values.p_mobileNo,\n    placeholder: \"Enter Phone Number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(CRow, {\n    className: \"seperator \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 21\n    }\n  }, \"Email ID\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"t_email\",\n    onChange: formik.handleChange,\n    value: updateValue.t_email ? updateValue.t_email : formik.values.t_email,\n    placeholder: \"Enter Email ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 21\n    }\n  }), formik.errors.t_email ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 23\n    }\n  }, \" \", formik.errors.t_email ? \"Email is-invalid\" : \"\") : null), /*#__PURE__*/React.createElement(CCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 739,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CLabel, {\n    className: \"form-labels3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 21\n    }\n  }, \"Email ID\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 23\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CInput, {\n    type: \"text\",\n    name: \"p_email\",\n    onChange: formik.handleChange,\n    value: permanent === true ? formik.values.t_email : formik.values.p_email,\n    placeholder: \"Enter Email ID\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(CRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CRow, {\n    style: {\n      paddingLeft: \"68%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 791,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CButton, {\n    shape: \"pill\",\n    className: \"saveBtn\",\n    disabled: !isEnabled,\n    onClick: addAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 792,\n      columnNumber: 21\n    }\n  }, \"+ Save\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CButton // shape={\"pill\"}\n  , {\n    className: \"cancelBtn\",\n    onClick: Cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 21\n    }\n  }, \" \", \"Cancel\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CCol, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CButton // shape={\"pill\"}\n  , {\n    className: \"cancelBtn\",\n    onClick: function onClick() {\n      history.push(\"/EmployeeData\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 21\n    }\n  }, \" \", \"Back\")))), error !== \"\" ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 31\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(ToastContainer, {\n    className: \"toast--warning\",\n    autoClose: 1000,\n    style: {\n      width: \"300px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Address;","map":{"version":3,"sources":["/home/kpost/Desktop/Political_UI/src/views/components/address/Address.jsx"],"names":["React","useState","useEffect","CRow","CCard","CCol","CButton","CForm","CLabel","CInput","useFormik","useHistory","yup","addAllEmployee","updateEmployee","EmployeeContext","ToastContainer","toast","IconGroup","Address","props","history","useContext","state","setState","permanent","setPermanent","error","setError","updateValue","setUpdateValue","posts","setPosts","console","log","formik","initialValues","t_address1","t_country","t_pincode","t_state","t_city","t_area","t_mobileNo","t_email","p_address1","p_country","p_pincode","p_state","p_city","p_area","p_mobileNo","p_email","validationSchema","object","string","required","min","max","email","onSubmit","userInputData","isEnabled","values","checkPermenat","p_address2","t_address2","addAddress","temp","address1","address2","country","city","area","pincode","mobileNo","perm","addresses","temproaryAddress","permanentAddress","isSameAddress","_id","employeeRole","roles","id","response","success","message","autoClose","handleReset","family","experience","education","document","setTimeout","push","role","data","addressDetails","Cancel","padding","paddingTop","paddingLeft","handleChange","errors","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import { AutoSizer, Table, Column, SortDirection, InfiniteLoader } from 'react-virtualized'\n// import \"../suspend/node_modules/react-virtualized/styles.css\";\nimport {\n  CRow,\n  CCard,\n  CCol,\n  CButton,\n  CForm,\n  CLabel,\n  CInput,\n} from \"@coreui/react\";\nimport { useFormik } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport \"./Address.css\";\nimport { addAllEmployee, updateEmployee } from \"../../../services/ApiService\";\nimport { EmployeeContext } from \"../../../services/EmployeeContext\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { IconGroup } from \"semantic-ui-react\";\n\nfunction Address(props) {\n  const history = useHistory();\n  const [state, setState] = React.useContext(EmployeeContext);\n  const [permanent, setPermanent] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [updateValue, setUpdateValue] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  console.log(state, \"address\");\n\n  const formik = useFormik({\n    initialValues: {\n      t_address1: \"\",\n      // t_address2: '',\n      t_country: \"\",\n      t_pincode: \"\",\n      t_state: \"\",\n      t_city: \"\",\n      t_area: \"\",\n      t_mobileNo: \"\",\n      t_email: \"\",\n\n      p_address1: \"\",\n      // p_address2: '',\n      p_country: \"\",\n      p_pincode: \"\",\n      p_state: \"\",\n      p_city: \"\",\n      p_area: \"\",\n      p_mobileNo: \"\",\n      p_email: \"\",\n    },\n\n    validationSchema: yup.object({\n      t_address1: yup.string().required(\"Address 1 is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      // t_address2: yup.string()\n      //   .required(\"Address 2 is Required\"),\n      t_country: yup.string().required(\"Country is Required\"),\n      t_pincode: yup\n        .string()\n        .required(\"Pincode is Required\")\n        .min(6, \"Minimum 6 charcter\")\n        .max(6, \"Minimum 6 charcter\"),\n      t_state: yup.string().required(\"State is Required\"),\n      t_city: yup.string().required(\"City is Required\"),\n      t_area: yup.string().required(\"Area is Required\"),\n      t_mobileNo: yup\n        .string()\n        .required(\"Phone Number is Required\")\n        .min(10, \"Minimum 10 charcter\")\n        .max(13, \"Minimum 13 charcter\"),\n      t_email: yup\n        .string()\n        .required(\"Email Id is Required\")\n        .email(\"Please enter valid email\"),\n\n      p_address1: yup.string().required(\"Address 1 is Required\"),\n      // .min(5 , \"Minimum 5 charcter\" )\n      // p_address2: yup.string()\n      //   .required(\"Address 2 is Required\"),\n      p_country: yup.string().required(\"Country is Required\"),\n      p_pincode: yup.string().required(\"Pincode is Required\"),\n      p_state: yup.string().required(\"State is Required\"),\n      p_city: yup.string().required(\"City is Required\"),\n      p_area: yup.string().required(\"Area is Required\"),\n      p_mobileNo: yup.string().required(\"Phone Number is Required\"),\n      p_email: yup.string().required(\"Email Id is Required\"),\n    }),\n    onSubmit: (userInputData) => {\n      console.log(userInputData);\n    },\n  });\n\n  const isEnabled =\n    formik.values.t_address1 &&\n    formik.values.t_country &&\n    formik.values.t_pincode &&\n    formik.values.t_state &&\n    formik.values.t_city &&\n    formik.values.t_area &&\n    formik.values.t_mobileNo &&\n    formik.values.t_email &&\n    formik.values.p_address1 &&\n    formik.values.p_country &&\n    formik.values.p_state &&\n    formik.values.p_city &&\n    formik.values.p_area &&\n    formik.values.p_mobileNo &&\n    formik.values.p_email;\n\n  const checkPermenat = () => {\n    console.log(\"hello\");\n    setPermanent(!permanent);\n\n    // let val = formik.values;\n\n    formik.values.p_address1 = formik.values.t_address1;\n    formik.values.p_address2 = formik.values.t_address2;\n    formik.values.p_country = formik.values.t_country;\n    formik.values.p_state = formik.values.t_state;\n    formik.values.p_city = formik.values.t_city;\n    formik.values.p_area = formik.values.t_area;\n    formik.values.p_pincode = formik.values.t_pincode;\n    formik.values.p_mobileNo = formik.values.t_mobileNo;\n    formik.values.p_email = formik.values.t_email;\n\n    console.log(formik.values.p_address1);\n    console.log(formik.values.p_address2);\n  };\n\n  const addAddress = async () => {\n    let temp = {\n      address1: formik.values.t_address1,\n      address2: formik.values.t_address2,\n      country: formik.values.t_country,\n      state: formik.values.t_state,\n      city: formik.values.t_city,\n      area: formik.values.t_area,\n      pincode: formik.values.t_pincode,\n      mobileNo: formik.values.t_mobileNo,\n      email: formik.values.t_email,\n    };\n    let perm = {\n      address1: formik.values.p_address1,\n      address2: formik.values.p_address2,\n      country: formik.values.p_country,\n      state: formik.values.p_state,\n      city: formik.values.p_city,\n      area: formik.values.p_area,\n      pincode: formik.values.p_pincode,\n      mobileNo: formik.values.p_mobileNo,\n      email: formik.values.p_email,\n    };\n\n    let addresses;\n    if (permanent) {\n      addresses = {\n        temproaryAddress: temp,\n        permanentAddress: perm,\n        isSameAddress: permanent,\n      };\n    } else {\n      addresses = {\n        temproaryAddress: temp,\n        permanentAddress: temp,\n        isSameAddress: permanent,\n      };\n    }\n    if (!state._id) {\n      try {\n        let response, roles;\n        if (state.employeeRole._id) {\n          roles = state.employeeRole._id;\n        } else {\n          roles = state.employeeRole;\n        }\n        response = await addAllEmployee({\n          ...state,\n          addresses: { ...addresses },\n          id: state._id,\n          employeeRole: roles,\n        });\n        console.log(response,\"xxx123\");\n        if (response) {\n            if (response.success) {\n              toast.success(response.message, { autoClose: 1000 });\n              formik.handleReset({});\n              setState({\n                family: [],\n                experience: [],\n                education: [],\n                document: [],\n              });\n              setTimeout(() => {\n                history.push(\"/EmployeeData\");\n              }, 1500);\n            }\n        }\n      } catch (e) {\n        console.log(e);\n        toast.error(e.error, { autoClose: 1000 });\n      }\n    } else {\n      try {\n        let response;\n        let role;\n        if (state.employeeRole) {\n          if (state.employeeRole._id) {\n            role = state.employeeRole._id;\n          } else {\n            role = state.employeeRole;\n          }\n        }\n        response = await updateEmployee({\n          ...state,\n          addresses,\n          employeeRole: role,\n        });\n        if (response) {\n          if (response.data) {\n            if (response.data.success === true) {\n              toast.success(response.data.message, { autoClose: 1000 });\n              formik.handleReset({});\n              setState({\n                family: [],\n                experience: [],\n                education: [],\n                document: [],\n              });\n              setTimeout(() => {\n                history.push(\"/EmployeeData\");\n              }, 1500);\n            }\n          }\n        }\n      } catch (e) {\n        console.log(e);\n        toast.error(e.error, { autoClose: 1000 });\n      }\n    }\n  };\n\n  useEffect(() => {\n    setError(\"\");\n  }, []);\n\n  useEffect(() => {\n    if (state._id) {\n      console.log(setUpdateValue);\n      if (state.addressDetails) {\n        if (state.addressDetails.temproaryAddress) {\n          formik.values.t_address1 =\n            state.addressDetails.temproaryAddress.address1;\n          formik.values.t_address2 =\n            state.addressDetails.temproaryAddress.address2;\n          formik.values.t_country =\n            state.addressDetails.temproaryAddress.country;\n          formik.values.t_state = state.addressDetails.temproaryAddress.state;\n          formik.values.t_city = state.addressDetails.temproaryAddress.city;\n          formik.values.t_area = state.addressDetails.temproaryAddress.area;\n          formik.values.t_pincode =\n            state.addressDetails.temproaryAddress.pincode;\n          formik.values.t_mobileNo =\n            state.addressDetails.temproaryAddress.mobileNo;\n          formik.values.t_email = state.addressDetails.temproaryAddress.email;\n        }\n        if (state.addressDetails.permanentAddress) {\n          formik.values.p_address1 =\n            state.addressDetails.permanentAddress.address1;\n          formik.values.p_address2 =\n            state.addressDetails.permanentAddress.address2;\n          formik.values.p_country =\n            state.addressDetails.permanentAddress.country;\n          formik.values.p_state = state.addressDetails.permanentAddress.state;\n          formik.values.p_city = state.addressDetails.permanentAddress.city;\n          formik.values.p_area = state.addressDetails.permanentAddress.area;\n          formik.values.p_pincode =\n            state.addressDetails.permanentAddress.pincode;\n          formik.values.p_mobileNo =\n            state.addressDetails.permanentAddress.mobileNo;\n          formik.values.p_email = state.addressDetails.permanentAddress.email;\n        }\n        if (state.addressDetails.isSameAddress) {\n          setPermanent(state.addressDetails.isSameAddress);\n        }\n      }\n    }\n    console.log(state, updateValue, \"testing\");\n  }, []);\n\n  const Cancel = () => {\n    formik.handleReset({});\n  };\n\n  return (\n    <div>\n      <div style={{ padding: \"2%\" }}>\n        <CCard className={\"Address-card-container\"}>\n          <CRow style={{ paddingTop: \"1%\", paddingLeft: \"2%\" }}>\n            <CCol md=\"12\" className={\"address-heading\"}>\n              Communication Address{\" \"}\n            </CCol>\n          </CRow>\n\n          <CForm autoComplete=\"off\">\n            <CRow className={\"address-form-container \"}>\n              <CCol md=\"12\" lg=\"12\" sm=\"12\">\n                {/* <CRow className={'seperator'}>\n                  <CCol md='4'>\n                    <CLabel className={'form-labels3'}>Employee Name</CLabel>\n                    <CInput type={\"text\"} name={'description'}\n                      placeholder='' />\n\n                  </CCol>\n                </CRow> */}\n\n                <CRow className={\"seperator\"}>\n                  <CCol>\n                    <h4>Temproary Address</h4>\n                  </CCol>\n\n                  <CCol className={\"checkbox\"}>\n                    <CInput\n                      type=\"checkbox\"\n                      className={\"checkbox\"}\n                      checked={permanent}\n                      onClick={checkPermenat}\n                    />\n                    <div className={\"text\"}>\n                      <h4>Permanent Address</h4>\n                    </div>\n                    <div className={\"texts\"}>\n                      <h6>\n                        (select if permanent address same as the temproary\n                        address)\n                      </h6>\n                    </div>\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator\"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Address 1<span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"t_address1\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_address1\n                          ? updateValue.t_address1\n                          : formik.values.t_address1\n                      }\n                      placeholder=\"Enter Address 1\"\n                    />\n                    {formik.errors.t_address1 ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.t_address1}\n                      </div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Address 1<span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"p_address1\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_address1\n                          : formik.values.p_address1\n                      }\n                      // disabled={  === true ? true : false}\n                      placeholder=\"Enter Address \"\n                    />\n                    {/* {formik.errors.p_address1 ?\n                      <div className=\"text-danger\"> {formik.errors.p_address1}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator\"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>Address 2 </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"t_address2\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_address2\n                          ? updateValue.t_address2\n                          : formik.values.t_address2\n                      }\n                      placeholder=\"Enter Address 2\"\n                    />\n                    {/* {formik.errors.t_address2 ?\n                      <div className=\"text-danger\"> {formik.errors.t_address2}</div>\n                      : null\n                    } */}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>Address 2 </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"p_address2\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_address2\n                          : formik.values.p_address2\n                      }\n                      // disabled={permanent === true ? true : false}\n                      placeholder=\"Enter Address 2\"\n                    />\n                    {/* {formik.errors.p_address2 ?\n                      <div className=\"text-danger\"> {formik.errors.p_address2}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator\"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Country\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"t_country\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_country\n                          ? updateValue.t_country\n                          : formik.values.t_country\n                      }\n                      placeholder=\"Enter Country\"\n                    />\n                    {formik.errors.t_country ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.t_country}\n                      </div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Country\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"p_country\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_country\n                          : formik.values.p_country\n                      }\n                      placeholder=\"Enter Country\"\n                    />\n                    {/* {formik.errors.p_country ?\n                      <div className=\"text-danger\"> {formik.errors.p_country}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      State\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"t_state\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_state\n                          ? updateValue.t_state\n                          : formik.values.t_state\n                      }\n                      placeholder=\"Enter State\"\n                    />\n                    {formik.errors.t_state ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.t_state}\n                      </div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      State\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"p_state\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_state\n                          : formik.values.p_state\n                      }\n                      placeholder=\"Enter State\"\n                    />\n                    {/* {formik.errors.p_state ?\n                      <div className=\"text-danger\"> {formik.errors.p_state}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      City\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"t_city\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_city\n                          ? updateValue.t_city\n                          : formik.values.t_city\n                      }\n                      placeholder=\"Enter City\"\n                    />\n                    {formik.errors.t_city ? (\n                      <div className=\"text-danger\"> {formik.errors.t_city}</div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      City\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"p_city\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_city\n                          : formik.values.p_city\n                      }\n                      placeholder=\"Enter City\"\n                    />\n                    {/* {formik.errors.p_city ?\n                      <div className=\"text-danger\"> {formik.errors.p_city}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Area\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"t_area\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_area\n                          ? updateValue.t_area\n                          : formik.values.t_area\n                      }\n                      placeholder=\"Enter Area\"\n                    />\n                    {formik.errors.t_area ? (\n                      <div className=\"text-danger\"> {formik.errors.t_area}</div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Area\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"p_area\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_area\n                          : formik.values.p_area\n                      }\n                      placeholder=\"Enter Area\"\n                    />\n                    {/* {formik.errors.p_area ?\n                      <div className=\"text-danger\"> {formik.errors.p_area}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Pincode\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"number\"}\n                      name={\"t_pincode\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_pincode\n                          ? updateValue.t_pincode\n                          : formik.values.t_pincode\n                      }\n                      placeholder=\"Enter Pincode\"\n                    />\n                    {formik.errors.t_pincode ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.t_pincode}\n                      </div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Pincode\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"number\"}\n                      name={\"p_pincode\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_pincode\n                          : formik.values.p_pincode\n                      }\n                      placeholder=\"Enter Pincode \"\n                    />\n                    {/* {formik.errors.p_pincode ?\n                      <div className=\"text-danger\"> {formik.errors.p_pincode}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Phone Number\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"number\"}\n                      name={\"t_mobileNo\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_mobileNo\n                          ? updateValue.t_mobileNo\n                          : formik.values.t_mobileNo\n                      }\n                      placeholder=\"Enter Phone Number\"\n                    />\n                    {formik.errors.t_mobileNo ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.t_mobileNo}\n                      </div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Phone Number\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"number\"}\n                      name={\"p_mobileNo\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_mobileNo\n                          : formik.values.p_mobileNo\n                      }\n                      placeholder=\"Enter Phone Number\"\n                    />\n                    {/* {formik.errors.p_mobileNo ?\n                      <div className=\"text-danger\"> {formik.errors.p_mobileNo}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n\n                <CRow className={\"seperator \"}>\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Email ID\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"t_email\"}\n                      onChange={formik.handleChange}\n                      value={\n                        updateValue.t_email\n                          ? updateValue.t_email\n                          : formik.values.t_email\n                      }\n                      placeholder=\"Enter Email ID\"\n                    />\n                    {formik.errors.t_email ? (\n                      <div className=\"text-danger\">\n                        {\" \"}\n                        {formik.errors.t_email ? \"Email is-invalid\" : \"\"}\n                      </div>\n                    ) : null}\n                  </CCol>\n\n                  <CCol>\n                    <CLabel className={\"form-labels3\"}>\n                      Email ID\n                      <span className={\"text-danger\"}> *</span>\n                    </CLabel>\n                    <CInput\n                      type={\"text\"}\n                      name={\"p_email\"}\n                      onChange={formik.handleChange}\n                      value={\n                        permanent === true\n                          ? formik.values.t_email\n                          : formik.values.p_email\n                      }\n                      placeholder=\"Enter Email ID\"\n                    />\n                    {/* {formik.errors.p_email ?\n                      <div className=\"text-danger\"> {formik.errors.p_email}</div>\n                      : null\n                    } */}\n                  </CCol>\n                </CRow>\n              </CCol>\n            </CRow>\n\n            {/* <CRow style={{ paddingLeft: \"50%\" }}>\n              <div class=\"address\">\n                <CCol md=\"12\">\n                  <CButton\n                    // shape={\"pill\"}\n                    className={\"btn btn-pill btn-danger\"}\n                    href={\"./EmployeeData\"}\n                    onClick={\"\"}\n                  >\n                    {\" \"}\n                    Back\n                  </CButton>\n                </CCol>\n              </div>\n            </CRow> */}\n            <CRow>\n              {/* <CCol md=\"12\">\n                  <CButton\n                    shape={\"pill\"}\n                    className={\"btn btn-info\"}\n                    onClick={addAddress}\n                  >\n                    + Save\n                  </CButton>\n                </CCol> */}\n              <CRow style={{ paddingLeft: \"68%\" }}>\n                <div>\n                  <CCol md=\"12\">\n                    <CButton\n                      shape={\"pill\"}\n                      className={\"saveBtn\"}\n                      disabled={!isEnabled}\n                      onClick={addAddress}\n                    >\n                      + Save\n                    </CButton>\n                  </CCol>\n                </div>\n\n                <div>\n                  <CCol md=\"12\">\n                    <CButton\n                      // shape={\"pill\"}\n                      className={\"cancelBtn\"}\n                      onClick={Cancel}\n                    >\n                      {\" \"}\n                      Cancel\n                    </CButton>\n                  </CCol>\n                </div>\n\n                <div>\n                  <CCol md=\"12\">\n                    <CButton\n                      // shape={\"pill\"}\n                      className={\"cancelBtn\"}\n                      onClick={() => {\n                        history.push(\"/EmployeeData\");\n                      }}\n                    >\n                      {\" \"}\n                      Back\n                    </CButton>\n                  </CCol>\n                </div>\n              </CRow>\n              {error !== \"\" ? <p>{error}</p> : null}\n              <ToastContainer\n                className=\"toast--warning\"\n                autoClose={1000}\n                style={{ width: \"300px\" }}\n              />\n            </CRow>\n          </CForm>\n        </CCard>\n      </div>\n    </div>\n  );\n}\n\nexport default Address;\n"]},"metadata":{},"sourceType":"module"}